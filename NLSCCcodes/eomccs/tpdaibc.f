      SUBROUTINE TPDAIBC(ICORE,MAXCOR,IUHF,FACT)
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ZILCH,TWO,FACT
      DIMENSION ICORE(MAXCOR)
      DIMENSION I0T(2),I0R(2)
C
C CALCULATION OF THE AIBC CONTRIBUTION TO
C THE EOM-CCSD TWO-PARTICLE DENSITY MATRIX
C 
C G(AI,BC) = 1/2 R(M,A) L(IM,CB)
C
C ALSO, ONLY THE SUM OF G(AB,CI) AND G(AI,BC) IS STORED ON DISK
C
CEND 
      COMMON/STATSYM/IRREPX
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMLOC/ISYMOFF(8,8,25)
C
      DATA ZILCH,TWO /0.0D0,2.0D0/
C
C READ IN T1 AND R1 AMPLITUDES
C
      I0T(1)=1
      I0T(2)=I0T(1)+IRPDPD(1,9)*IINTFP*IUHF
      I0R(1)=I0T(2)+IRPDPD(1,10)*IINTFP
      I0R(2)=I0R(1)+IRPDPD(IRREPX,9)*IINTFP*IUHF
      ISTART=I0R(2)+IRPDPD(IRREPX,10)*IINTFP
C
      CALL GETLST(ICORE(I0R(1)),1,1,1,3,490)
      IF(IUHF.EQ.1) THEN
       CALL GETLST(ICORE(I0R(2)),1,1,1,4,490)
      ENDIF
C
C AAAA AND BBBB SPIN CASES (UHF ONLY)
C
      IF(IUHF.EQ.1) THEN
       DO 1000 ISPIN=1,2
        LISTG=126+ISPIN
        LISTL=443+ISPIN
        DO 100 IRREPR=1,NIRREP
         IRREPL=DIRPRD(IRREPR,IRREPX) 
         NUMDSG=IRPDPD(IRREPL,ISYTYP(2,LISTG)) 
         DISSYG=IRPDPD(IRREPL,ISYTYP(1,LISTG))
         NUMDSL=IRPDPD(IRREPR,ISYTYP(2,LISTL))
         DISSYL=IRPDPD(IRREPL,ISYTYP(1,LISTL))
         NOCCSQ=IRPDPD(IRREPR,20+ISPIN)
         I000=ISTART
         I010=I000+IINTFP*DISSYL*NOCCSQ
C
C GET L(B<C,I<M) AND EXPAND TO L(B<C,IM)
C
         CALL GETLST(ICORE(I000),1,NUMDSL,1,IRREPR,LISTL)
         CALL SYMEXP(IRREPR,POP(1,ISPIN),DISSYL,ICORE(I000))
C
C PERFORM MULTIPLICATION
C
C   G(B<C,IA) = L(B<C,IM)*R(A,M), FORMING ONE G(B<C,A) AT A TIME
C
         ISTARTG=1
         DO 10 IRREPI=1,NIRREP
          IRREPA=DIRPRD(IRREPI,IRREPL)
          IRREPM=DIRPRD(IRREPA,IRREPX)
          NUMI=POP(IRREPI,ISPIN)
          NUMA=VRT(IRREPA,ISPIN)
          NUMM=POP(IRREPM,ISPIN)
          NROW=DISSYL
          NCOL=NUMA
          NSUM=NUMM
          DO 11 I=1,NUMI
           IOFFL=I000+IINTFP*(ISYMOFF(IRREPM,IRREPR,20+ISPIN)+I-2)*
     &           DISSYL
           IOFFR=I0R(ISPIN)+(ISYMOFF(IRREPM,IRREPX,8+ISPIN)-1)*IINTFP
           CALL GETLST(ICORE(I010),ISTARTG,NUMA,1,IRREPL,LISTG)
           CALL XGEMM('N','T',NROW,NCOL,NSUM,-FACT,ICORE(IOFFL),
     &                NROW*NUMI,ICORE(IOFFR),NCOL,ZILCH,ICORE(I010),
     &                NROW)
           CALL PUTLST(ICORE(I010),ISTARTG,NUMA,1,IRREPL,LISTG)
           ISTARTG=ISTARTG+NUMA
11        CONTINUE
10       CONTINUE
100     CONTINUE
1000   CONTINUE
      ENDIF
C
C ABAB AND BABA SPIN CASE
C
      DO 2000 ISPIN=1,IUHF+1
       LISTG=131-ISPIN
       LISTL=446
       DO 1100 IRREPR=1,NIRREP
        IRREPL=DIRPRD(IRREPR,IRREPX) 
        NUMDSG=IRPDPD(IRREPL,ISYTYP(2,LISTG)) 
        DISSYG=IRPDPD(IRREPL,ISYTYP(1,LISTG))
        NUMDSL=IRPDPD(IRREPR,ISYTYP(2,LISTL))
        DISSYL=IRPDPD(IRREPL,ISYTYP(1,LISTL))
        MAXT=MAX(DISSYG,DISSYL,NUMDSG,NUMDSL)
C
C ALLOCATE MEMORY
C
        I000=ISTART
        I010=I000+IINTFP*NUMDSL*DISSYL
        ITMP1=I010
        ITMP2=ITMP1+IINTFP*MAXT
        ITMP3=ITMP2+IINTFP*MAXT
        IEND=ITMP3
        IF(IEND.GE.MAXCOR) CALL INSMEM('TPDAIBC',IEND,MAXCOR)
        CALL GETLST(ICORE(I000),1,NUMDSL,1,IRREPR,LISTL)
C
C ISPIN=1:
C READ IN L(Bc,Mi) [ISPIN=1], SWAP INDICES TO L(Bc,iM) 
C
        IF(ISPIN.EQ.1) THEN
         CALL SYMTR1(IRREPR,POP(1,1),POP(1,2),DISSYL,ICORE(I000),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
         ISTARTG=1
         DO 110 IRREPI=1,NIRREP
C
C    G(Bc,iA) = L(Bc,iM)*R(MA), ONE BcA SET AT A TIME. 
C
          IRREPA=DIRPRD(IRREPI,IRREPL)
          IRREPM=DIRPRD(IRREPA,IRREPX)
          NUMA=VRT(IRREPA,ISPIN)
          NUMM=POP(IRREPM,ISPIN)
          NUMI=POP(IRREPI,3-ISPIN)
          NROW=DISSYG
          NCOL=NUMA
          NSUM=NUMM
          DO 111 I=1,NUMI
           IOFFL=I000+(ISYMOFF(IRREPM,IRREPR,24)+I-2)*DISSYL*IINTFP
           IOFFR=I0R(ISPIN)+(ISYMOFF(IRREPM,IRREPX,8+ISPIN)-1)*IINTFP
           CALL XGEMM('N','T',NROW,NCOL,NSUM,FACT,ICORE(IOFFL),
     &                NROW*NUMI,ICORE(IOFFR),NCOL,ZILCH,ICORE(I010),
     &                NROW)
           CALL PUTLST(ICORE(I010),ISTARTG,NUMA,1,IRREPL,LISTG)
           ISTARTG=ISTARTG+NUMA
111       CONTINUE
110      CONTINUE
C
        ELSE
C
C PERFORM MULTIPLICATION
C
C    G(Bc,Ia) = L(Bc,Im)*R(ma) 
C
         MXCOR=MAXCOR-I010+1
         IFIRST=1
         DO 120 IRREPA=1,NIRREP
          IRREPM=DIRPRD(IRREPA,IRREPX)
          IRREPI=DIRPRD(IRREPM,IRREPR)
          NUMA=VRT(IRREPA,ISPIN)
          NUMM=POP(IRREPM,ISPIN)
          NUMI=POP(IRREPI,3-ISPIN)
          NROW=DISSYG*NUMI
          NSUM=NUMM
          IOFFL=I000+(ISYMOFF(IRREPM,IRREPR,14)-1)*DISSYL*IINTFP
          A1=1
C
          NINCOR=MXCOR/(IINTFP*MAX(1,DISSYG*NUMI))
          NLEFT=NUMA
1         NREAD=NUMI*MIN(NLEFT,NINCOR)
          NCOL =MIN(NLEFT,NINCOR)
          IOFFR=I0R(ISPIN)+(ISYMOFF(IRREPM,IRREPX,8+ISPIN)+
     &          A1-2)*IINTFP
          CALL XGEMM('N','T',NROW,NCOL,NSUM,FACT,ICORE(IOFFL),NROW,
     &               ICORE(IOFFR),NUMA,ZILCH,ICORE(I010),NROW)
          CALL PUTLST(ICORE(I010),IFIRST,NREAD,1,IRREPL,LISTG)
          IFIRST=IFIRST+NREAD
          NLEFT =NLEFT-NCOL
          A1=A1+NCOL
C
          IF(NLEFT.NE.0)GOTO 1           
C
120      CONTINUE
C
        ENDIF
C
1100   CONTINUE
2000  CONTINUE
C
C ALL DONE, RETURN
C
      TWO=0.D0
      IF(IUHF.EQ.0)
     &   CALL CHECKGAM1(ICORE,30,130,TWO,IUHF,2,VRT)
      IF(IUHF.EQ.1) THEN
       CALL CHECKGAM(ICORE,27,127,TWO)
       CALL CHECKGAM(ICORE,28,128,TWO)
       CALL CHECKGAM(ICORE,29,129,TWO)
       CALL CHECKGAM(ICORE,30,130,TWO)
      ENDIF
C
      RETURN
      END

      SUBROUTINE R2L2Y2A(ICORE,MAXCOR,IUHF)
C
C Y2(ab,ij) = P(ij)P(ab) [R(mn,ef)*L(im,ae)*W(jn,bf)]
C
C           = P(ij) P(ab) [Z(ai,nf) W(jn,bf)] 
C
C             with Z(ai,nf) = L(im,ae) R(mn,ef)
C
C RHF : SPIN ADAPTED CODE
C UHF : ALL SPIN CASES ARE CONSIDERED SEPARATELY
C
CEND
C
C CODED SEPTEMBER/93 JFS AND JG
C
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,TWO,HALF
      DIMENSION ICORE(MAXCOR)
      CHARACTER*4 SPCASE(2)
      COMMON/STATSYM/IRREPX
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C
      DATA SPCASE/'AAAA','BBBB'/
      DATA ONE,ONEM,TWO,ZILCH,HALF /1.0D0,-1.0D0,2.0D0,0.0D0,0.5D0/
C
      IF(IUHF.EQ.0)THEN
C
C SPIN ADAPTED RHF CODE.
C
C  Y2(Ab,Ij) = Q(Ab,Ij) + Q(Ba,Ji)
C
C WHERE 
C
C Q(Ab,Ij) = 1/2 [2R(Mn,Ef)-R(Mn,Fe)]*[2L(Im,Ae)-L(Im,Ea)]*[2W(Jn,Bf)-W(Jn,Fb)]
C
C          + R(Mn,Fe)*L(Jm,Ea)*W(In,Fb) + 1/2 R(Mn,Fe)*L(Im,Ea)*W(Jn,Fb)
C
       DO 10 IRREPR=1,NIRREP
        IRREPL=DIRPRD(IRREPR,IRREPX)
        LISTR1=457
        LISTR2=459
        DISSYZ=IRPDPD(IRREPR,ISYTYP(1,LISTR1))
        NUMDSZ=IRPDPD(IRREPR,ISYTYP(2,LISTR1))
        I000=1
C
C FIRST FORM 2*R(Mn,Ef) - R(Mn,Fe) AND PUT IN R(EM,fn) MATRIX
C
        DISSYR=IRPDPD(IRREPL,ISYTYP(1,LISTR1))
        NUMDSR=IRPDPD(IRREPR,ISYTYP(2,LISTR1))
        I010=I000+IINTFP*MAX(DISSYR*NUMDSR,DISSYZ*NUMDSZ)
        I020=I010+IINTFP*MAX(DISSYR*NUMDSR,DISSYZ*NUMDSZ)
        CALL GETLST(ICORE(I000),1,NUMDSR,1,IRREPR,LISTR1)
        CALL GETLST(ICORE(I010),1,NUMDSR,1,IRREPR,LISTR2)
        CALL SSCAL (NUMDSR*DISSYR,TWO,ICORE(I000),1)
        CALL SAXPY (NUMDSR*DISSYR,ONEM,ICORE(I010),1,ICORE(I000),1)
C
C NOW FORM 2*L(Im,Ae)-L(Im,Ea) AND PUT IN L(em,AI) MATRIX
C
        LISTL1=437
        LISTL2=439
        DISSYL=IRPDPD(IRREPR,ISYTYP(1,LISTL1))
        NUMDSL=IRPDPD(IRREPL,ISYTYP(2,LISTL1))
        I020=I010+IINTFP*MAX(DISSYL*NUMDSL,DISSYZ*NUMDSZ)
        I030=I020+IINTFP*MAX(DISSYL*NUMDSL,DISSYZ*NUMDSZ)
        CALL GETLST(ICORE(I010),1,NUMDSL,1,IRREPL,LISTL1)
        CALL GETLST(ICORE(I020),1,NUMDSL,1,IRREPL,LISTL2)
        CALL SSCAL (NUMDSL*DISSYL,TWO,ICORE(I010),1)
        CALL SAXPY (NUMDSL*DISSYL,ONEM,ICORE(I020),1,ICORE(I010),1)
C           _        _
C CALCULATE L(ai,EM)*R(EM,fn) = Z(ai,fn)
C
        CALL XGEMM('N','N',DISSYL,NUMDSR,DISSYR,ONE,ICORE(I010),
     &             DISSYL,ICORE(I000),DISSYR,ZILCH,ICORE(I020),DISSYL)
C
        CALL SCOPY(NUMDSZ*DISSYZ,ICORE(I020),1,ICORE(I000),1)
C
C NOW FORM 2*W(Jn,Bf)-W(Jn,Fb) AND PUT IN W(fn,BJ)
C
        LISTW1=18
        LISTW2=21
        DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW1))
        NUMDSW=IRPDPD(IRREPR,ISYTYP(2,LISTW1))
        I020=I010+IINTFP*DISSYW*NUMDSW
        I030=I020+IINTFP*DISSYW*NUMDSW
        CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREPR,LISTW1)
        CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPR,LISTW2)
        CALL SSCAL (NUMDSW*DISSYW,TWO,ICORE(I010),1)
        CALL SAXPY (NUMDSW*DISSYW,ONEM,ICORE(I020),1,ICORE(I010),1)
C                    _
C CALCULATE Z(ai,fn)*W(fn,bj) = Q(ai,bj) AND PUT ON SCRATCH LIST
C
        CALL XGEMM('N','N',DISSYZ,NUMDSZ,DISSYW,HALF,ICORE(I000),
     &             DISSYZ,ICORE(I010),DISSYW,ZILCH,ICORE(I020),DISSYZ)
C
        CALL PUTLST(ICORE(I020),1,NUMDSZ,1,IRREPR,42)
C
10     CONTINUE
C
C NOW CALCULATE R(Mn,Fe)*L(Jm,Ea)*W(Jn,Fb) CONTRIBUTION
C
       DO 20 IRREPR=1,NIRREP
        IRREPL=DIRPRD(IRREPR,IRREPX)
        LISTR1=459
        DISSYZ=IRPDPD(IRREPR,ISYTYP(1,LISTR1))
        NUMDSZ=IRPDPD(IRREPR,ISYTYP(2,LISTR1))
        I000=1
        DISSYR=IRPDPD(IRREPL,ISYTYP(1,LISTR1))
        NUMDSR=IRPDPD(IRREPR,ISYTYP(2,LISTR1))
        I010=I000+IINTFP*MAX(DISSYR*NUMDSR,DISSYZ*NUMDSZ)
        CALL GETLST(ICORE(I000),1,NUMDSR,1,IRREPR,LISTR1)
C
        LISTL1=439
        DISSYL=IRPDPD(IRREPR,ISYTYP(1,LISTL1))
        NUMDSL=IRPDPD(IRREPL,ISYTYP(2,LISTL1))
        I020=I010+IINTFP*MAX(DISSYL*NUMDSL,DISSYZ*NUMDSZ)
        CALL GETLST(ICORE(I010),1,NUMDSL,1,IRREPL,LISTL1)
C           _        _
C CALCULATE L(aJ,Em)*R(Em,Fn) = Z(aJ,Fn)
C
        CALL XGEMM('N','N',DISSYL,NUMDSR,DISSYR,ONE,ICORE(I010),
     &             DISSYL,ICORE(I000),DISSYR,ZILCH,ICORE(I020),DISSYL)
C
        CALL SCOPY(NUMDSZ*DISSYZ,ICORE(I020),1,ICORE(I000),1)
C
C NOW READ IN W(Fn,bI)
C
        LISTW1=21
        DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW1))
        NUMDSW=IRPDPD(IRREPR,ISYTYP(2,LISTW1))
        I020=I010+IINTFP*DISSYW*NUMDSW
        CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREPR,LISTW1)
C                    _
C CALCULATE Z(aJ,Fn)*W(Fn,bI) = Q(aJ,bI) AND PUT ON SCRATCH LIST
C
        CALL XGEMM('N','N',DISSYZ,NUMDSZ,DISSYW,ONE,ICORE(I000),
     &             DISSYZ,ICORE(I010),DISSYW,ZILCH,ICORE(I020),DISSYZ)
C
        CALL PUTLST(ICORE(I020),1,NUMDSZ,1,IRREPR,43)
20     CONTINUE
C
C ADD INCREMENTS
C
       ISIZE=ISYMSZ(ISYTYP(1,42),ISYTYP(2,42))
       I000=1
       I010=I000+IINTFP*ISIZE
       I020=I010+IINTFP*ISIZE
       CALL GETALL(ICORE(I000),ISIZE,1,43)
C
       CALL SSTGEN(ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,1),
     &             VRT(1,1),POP(1,1),ICORE(I020),1,'1432')
       CALL SAXPY (ISIZE,HALF,ICORE(I010),1,ICORE(I000),1)
C
       CALL SSTGEN(ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,1),
     &             VRT(1,1),POP(1,1),ICORE(I020),1,'1432')
       CALL GETALL(ICORE(I000),ISIZE,1,42)
       CALL SAXPY (ISIZE,ONE,ICORE(I010),1,ICORE(I000),1)
       IOFF=I000
       DO 30 IRREP=1,NIRREP
        NUMDIS=IRPDPD(IRREP,ISYTYP(1,42))
        CALL MPMT(ICORE(IOFF),NUMDIS)
        IOFF=IOFF+IINTFP*NUMDIS*NUMDIS
30     CONTINUE
C
       CALL SSTGEN(ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,1),
     &             VRT(1,1),POP(1,1),ICORE(I020),1,'1324')
       CALL GETALL(ICORE(I000),ISIZE,1,63)
       CALL SAXPY (ISIZE,ONE,ICORE(I010),1,ICORE(I000),1)
       CALL PUTALL(ICORE(I000),ISIZE,1,63)
C
      ELSE
C
C OVER ALL STRATEGY :
C  
C  1) CALCULATE FIRST  Z=L*R 
C  
C  2) IMMEDIATELY CONTRACT Z WITH W
C
C
C  LOOP OVER SPINS
C
       DO 1000 ISPIN=1,2
C
C AAAA (BBBB) CONTRIBUTION:
C
C                       1. TERM:         2. TERM: 
C        Z(AI,FN) = L(IM,AE)*R(MN,EF) + L(Im,Ae) R(mN,eF)
C
C  LOOP OVER IRREPS
C
        DO 110 IRREPR=1,NIRREP
C
         IRREPL=DIRPRD(IRREPR,IRREPX)
C
         LISTR1=453+ISPIN
         LISTL1=433+ISPIN
         LISTR2=455+ISPIN
         LISTL2=438-ISPIN
C   
         NUMSYZ=IRPDPD(IRREPR,ISYTYP(2,LISTR1))
         DISSYZ=IRPDPD(IRREPR,ISYTYP(1,LISTR1))
C         
         I000=1
         I010=I000+IINTFP*NUMSYZ*DISSYZ
         DISSYR=IRPDPD(IRREPL,ISYTYP(1,LISTR1))
         NUMSYR=IRPDPD(IRREPR,ISYTYP(2,LISTR1))
         DISSYL=IRPDPD(IRREPR,ISYTYP(1,LISTL1))
         NUMSYL=IRPDPD(IRREPL,ISYTYP(2,LISTL1))
         I020=I010+IINTFP*NUMSYR*DISSYR
         IEND=I020+IINTFP*NUMSYL*DISSYL
         IF(IEND.GE.MAXCOR) CALL INSMEM('R2L2Y2A',IEND,MAXCOR)
C
C READ RESORTED R2 AND L2 AMPLITUDES FROM DISK
C
         CALL GETLST(ICORE(I010),1,NUMSYR,1,IRREPR,LISTR1)
         CALL GETLST(ICORE(I020),1,NUMSYL,1,IRREPL,LISTL1)
C
C CALCULATE L(AI,EM)*R(EM,FN) = Z(AI,FN)
C
         CALL XGEMM('N','N',DISSYZ,NUMSYZ,DISSYR,ONE,ICORE(I020),
     &              DISSYL,ICORE(I010),DISSYR,ZILCH,ICORE(I000),
     &              DISSYZ)
C
         DISSYR=IRPDPD(IRREPL,ISYTYP(1,LISTR2))
         NUMSYR=IRPDPD(IRREPR,ISYTYP(2,LISTR2))
         DISSYL=IRPDPD(IRREPR,ISYTYP(1,LISTL2))
         NUMSYL=IRPDPD(IRREPL,ISYTYP(2,LISTL2))
         I020=I010+IINTFP*NUMSYR*DISSYR
         IEND=I020+IINTFP*NUMSYL*DISSYL
         IF(IEND.GE.MAXCOR) CALL INSMEM('R2L2Y2A',IEND,MAXCOR)
C
         CALL GETLST(ICORE(I010),1,NUMSYR,1,IRREPR,LISTR2)
         CALL GETLST(ICORE(I020),1,NUMSYL,1,IRREPL,LISTL2)
C
C CALCULATE L(AI,em)*R(em,FN) = Z(AI,FN)
C
         CALL XGEMM('N','N',DISSYZ,NUMSYZ,DISSYR,ONE,ICORE(I020),
     &              DISSYL,ICORE(I010),DISSYR,ONE,ICORE(I000),
     &              DISSYZ)
C
C MULTIPLY WITH THE APPROPRIATE W-TERMS TO GET FINAL Q CONTRIBUTION
C
C  Z(AI,FN) IS MULTPLIED WITH W(JN,BF) (LIST NR 19/20) 
C
C      Q(AI,BJ) = Z(AI,NF) W(NF,BJ) :
C    
         LISTW1=18+ISPIN
         LISTW2=19-ISPIN
C
         DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW1))
         NUMSYW=IRPDPD(IRREPR,ISYTYP(2,LISTW1))
         I020=I010+IINTFP*NUMSYW*DISSYW
         IEND=I020+IINTFP*DISSYZ*NUMSYW
         IF(IEND.GE.MAXCOR) CALL INSMEM('R2L2Y2A',IEND,MAXCOR)
C
         CALL GETLST(ICORE(I010),1,NUMSYW,1,IRREPR,LISTW1)
C
         CALL XGEMM('N','N',DISSYZ,NUMSYW,NUMSYZ,ONE,ICORE(I000),
     &              DISSYZ,ICORE(I010),DISSYW,ZILCH,ICORE(I020),
     &              DISSYZ)
C
         CALL PUTLST(ICORE(I020),1,NUMSYW,1,IRREPR,39+ISPIN)
C
C AND MULITIPLY WITH W(jN,bF) (LIST NR 18/17) :
C
C      Q(AI,bj) = Z(AI,NF) W(FN,bj)
C    
         DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW2))
         NUMSYW=IRPDPD(IRREPR,ISYTYP(2,LISTW2))
         I020=I010+IINTFP*NUMSYW*DISSYW
         IEND=I020+IINTFP*DISSYZ*NUMSYW
         IF(IEND.GE.MAXCOR) CALL INSMEM('R2L2Y2A',IEND,MAXCOR)
C
         CALL GETLST(ICORE(I010),1,NUMSYW,1,IRREPR,LISTW2)
C
         IF(ISPIN.EQ.1) THEN
C
          CALL XGEMM('N','N',DISSYZ,NUMSYW,NUMSYZ,ONE,ICORE(I000),
     &               DISSYZ,ICORE(I010),DISSYW,ZILCH,ICORE(I020),
     &               DISSYZ)
         CALL PUTLST(ICORE(I020),1,NUMSYW,1,IRREPR,42)
C
         ELSE  
C
          CALL GETLST(ICORE(I020),1,DISSYZ,1,IRREPR,42)

          CALL XGEMM('T','T',NUMSYW,DISSYZ,NUMSYZ,ONE,ICORE(I010),
     &              DISSYW,ICORE(I000),DISSYZ,ONE,ICORE(I020),
     &              NUMSYW)
          CALL PUTLST(ICORE(I020),1,DISSYZ,1,IRREPR,42)
         ENDIF
C 
110     CONTINUE
C
C AABB (BBAA) CONTRIBUTION:
C
C                1. TERM:            2. TERM:
C     Q(In,Af) = L(IM,AE)*R(Mn,Ef) + L(Im,Ae) R(mn,ef)
C
C  LOOP OVER IRREPS
C
        DO 210 IRREPR=1,NIRREP
C 
         IRREPL=DIRPRD(IRREPR,IRREPX)
         LISTL1=433+ISPIN
         LISTR1=458-ISPIN
         LISTL2=438-ISPIN
         LISTR2=456-ISPIN
C  
         NUMSYZ=IRPDPD(IRREPR,ISYTYP(2,LISTL2))
         DISSYZ=IRPDPD(IRREPR,ISYTYP(1,LISTL2))
C
         I000=1
         I010=I000+IINTFP*NUMSYZ*DISSYZ
         DISSYR=IRPDPD(IRREPL,ISYTYP(1,LISTR1))
         NUMSYR=IRPDPD(IRREPR,ISYTYP(2,LISTR1))
         DISSYL=IRPDPD(IRREPR,ISYTYP(1,LISTL1))
         NUMSYL=IRPDPD(IRREPL,ISYTYP(2,LISTL1))
         I020=I010+IINTFP*NUMSYR*DISSYR
         IEND=I020+IINTFP*NUMSYL*DISSYL
         IF(IEND.GE.MAXCOR) CALL INSMEM('R2L2Y2A',IEND,MAXCOR)
C
C READ RESORTED R2 AND L2 AMPLITUDES FROM DISK
C
         CALL GETLST(ICORE(I010),1,NUMSYR,1,IRREPR,LISTR1)
         CALL GETLST(ICORE(I020),1,NUMSYL,1,IRREPL,LISTL1)
C
C CALCULATE L(AI,EM)*R(EM,fn) = Z(AI,fn)  (MINUS SIGN DUE TO L(AI,EM) !
C
         CALL XGEMM('N','N',DISSYZ,NUMSYZ,DISSYR,ONEM,ICORE(I020),
     &              DISSYL,ICORE(I010),DISSYR,ZILCH,ICORE(I000),
     &              DISSYZ)
C
         DISSYR=IRPDPD(IRREPL,ISYTYP(1,LISTR2))
         NUMSYR=IRPDPD(IRREPR,ISYTYP(2,LISTR2))
         DISSYL=IRPDPD(IRREPR,ISYTYP(1,LISTL2))
         NUMSYL=IRPDPD(IRREPL,ISYTYP(2,LISTL2))
         I020=I010+IINTFP*NUMSYR*DISSYR
         IEND=I020+IINTFP*NUMSYL*DISSYL
         IF(IEND.GE.MAXCOR) CALL INSMEM('R2L2Y2A',IEND,MAXCOR)
C
         CALL GETLST(ICORE(I010),1,NUMSYR,1,IRREPR,LISTR2)
         CALL GETLST(ICORE(I020),1,NUMSYL,1,IRREPL,LISTL2)
C
C CALCULATE L(AI,em)*R(em,fn) = Z(AI,fn)  (MINUS SIGN DUE TO R(em,fn) !
C
         CALL XGEMM('N','N',DISSYZ,NUMSYZ,DISSYR,ONEM,ICORE(I020),
     &              DISSYL,ICORE(I010),DISSYR,ONE,ICORE(I000),
     &              DISSYZ)
C
C MULTIPLY WITH THE APPROPRIATE W-TERMS TO GET FINAL Q CONTRIBUTION
C
         LISTW1=16+ISPIN
         LISTW2=21-ISPIN
C
         DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW1))
         NUMSYW=IRPDPD(IRREPR,ISYTYP(2,LISTW1))
C
         I020=I010+IINTFP*NUMSYW*DISSYW
         IEND=I020+IINTFP*DISSYZ*NUMSYW
         IF(IEND.GE.MAXCOR) CALL INSMEM('R2L2Y2A',IEND,MAXCOR)
C
C   Q(AI,BJ) = Z(AI,fn) W(fn,BJ)
C
         CALL GETLST(ICORE(I010),1,NUMSYW,1,IRREPR,LISTW1)
C
         CALL GETLST(ICORE(I020),1,NUMSYW,1,IRREPR,39+ISPIN)
C
         CALL XGEMM('N','N',DISSYZ,NUMSYW,NUMSYZ,ONE,ICORE(I000),
     &              DISSYZ,ICORE(I010),DISSYW,ONE,ICORE(I020),
     &              DISSYZ)
C
         CALL PUTLST(ICORE(I020),1,NUMSYW,1,IRREPR,39+ISPIN)
C
         DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW2))
         NUMSYW=IRPDPD(IRREPR,ISYTYP(2,LISTW2))
C
         I020=I010+IINTFP*NUMSYW*DISSYW
         IEND=I020+IINTFP*DISSYZ*NUMSYW
         IF(IEND.GE.MAXCOR) CALL INSMEM('R2L2Y2A',IEND,MAXCOR)
C
C   Q(AI,bj) = Q(AI,fn) W(fn,bj)
C
         CALL GETLST(ICORE(I010),1,NUMSYW,1,IRREPR,LISTW2)
C
         IF(ISPIN.EQ.1) THEN
C
          CALL GETLST(ICORE(I020),1,NUMSYW,1,IRREPR,42)
C
          CALL XGEMM('N','N',DISSYZ,NUMSYW,NUMSYZ,ONE,ICORE(I000),
     &               DISSYZ,ICORE(I010),DISSYW,ONE,ICORE(I020),
     &               DISSYZ)
C
          CALL PUTLST(ICORE(I020),1,NUMSYW,1,IRREPR,42)
C
         ELSE
C
          CALL GETLST(ICORE(I020),1,DISSYZ,1,IRREPR,42)
C
          CALL XGEMM('T','T',NUMSYW,DISSYZ,NUMSYZ,ONE,ICORE(I010),
     &               DISSYW,ICORE(I000),DISSYZ,ONE,ICORE(I020),
     &               NUMSYW)
C
          CALL PUTLST(ICORE(I020),1,DISSYZ,1,IRREPR,42)
C
         ENDIF
210     CONTINUE
C
C ABBA (ABBA) CONTRIBUTION:
C
C           Q(IN,af) = L(aI,Em) R(Em,fN)
C
C  LOOP OVER IRREPS
C
        DO 310 IRREPR=1,NIRREP
C
         IRREPL=DIRPRD(IRREPR,IRREPX)
C
         LISTR=457+ISPIN
         LISTL=440-ISPIN
C 
         NUMSYZ=IRPDPD(IRREPR,ISYTYP(2,24+ISPIN))
         DISSYZ=IRPDPD(IRREPR,ISYTYP(1,24+ISPIN))
C
         I000=1
         I010=I000+IINTFP*NUMSYZ*DISSYZ
         DISSYR=IRPDPD(IRREPL,ISYTYP(1,LISTR))
         NUMSYR=IRPDPD(IRREPR,ISYTYP(2,LISTR))
         DISSYL=IRPDPD(IRREPR,ISYTYP(1,LISTL))
         NUMSYL=IRPDPD(IRREPL,ISYTYP(2,LISTL))
         I020=I010+IINTFP*NUMSYR*DISSYR
         IEND=I020+IINTFP*NUMSYL*DISSYL
         IF(IEND.GE.MAXCOR) CALL INSMEM('R2L2Y2A',IEND,MAXCOR)
C
C RESORT R AND L AMPLITUDE AND READ FROM DISK (MIGHT BE OPTIMIZED
C LATER TO AVOID MULTIPLE SORTING
C
         CALL GETLST(ICORE(I010),1,NUMSYR,1,IRREPR,LISTR)
         CALL GETLST(ICORE(I020),1,NUMSYL,1,IRREPL,LISTL)
C
C CALCULATE L(Ai,eM)*R(eM,Fn) = Z(Ai,Fn)
C
         CALL XGEMM('N','N',DISSYZ,NUMSYZ,DISSYR,ONE,ICORE(I020),
     &              DISSYL,ICORE(I010),DISSYR,ZILCH,ICORE(I000),
     &              DISSYZ)
C
         LISTW=20+ISPIN
         DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW))
         NUMSYW=IRPDPD(IRREPR,ISYTYP(2,LISTW))
         I020=I010+IINTFP*NUMSYW*DISSYW
         IEND=I020+IINTFP*DISSYZ*NUMSYW
         IF(IEND.GE.MAXCOR) CALL INSMEM('R2L2Y2A',IEND,MAXCOR)
C
C    Q(Ai,bJ) = Z(Ai,Fn) W(Fn,bJ) 
C
         CALL GETLST(ICORE(I010),1,NUMSYW,1,IRREPR,LISTW)
C
         IF(ISPIN.EQ.1) THEN
C
          CALL XGEMM('N','N',DISSYZ,NUMSYW,NUMSYZ,ONE,ICORE(I000),
     &               DISSYZ,ICORE(I010),DISSYW,ZILCH,ICORE(I020),
     &               DISSYZ)
C
          CALL PUTLST(ICORE(I020),1,NUMSYW,1,IRREPR,43)
         ELSE
C
          CALL GETLST(ICORE(I020),1,DISSYZ,1,IRREPR,43)
C
          CALL XGEMM('T','T',NUMSYW,DISSYZ,NUMSYZ,ONE,ICORE(I010),
     &               DISSYW,ICORE(I000),DISSYZ,ONE,ICORE(I020),
     &               NUMSYW)
C
          CALL PUTLST(ICORE(I020),1,DISSYZ,1,IRREPR,43)
C
         ENDIF
C
310     CONTINUE
C
1000   CONTINUE
C
C NOW ADD Q(AI,bj) AND Q(Aj,bI) INCREMENTS
C
       ISIZE=IDSYMSZ(1,ISYTYP(1,42),ISYTYP(2,42))
       I000=1
       I010=I000+IINTFP*ISIZE
       I020=I010+IINTFP*ISIZE
       CALL GETALL (ICORE(I000),ISIZE,1,43)
       CALL SSTGEN (ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,2),
     &              VRT(1,2),POP(1,1),ICORE(I020),1,'1432')
       CALL GETALL (ICORE(I000),ISIZE,1,42)
       CALL SAXPY  (ISIZE,ONE,ICORE(I010),1,ICORE(I000),1)
       CALL SSTGEN (ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,1),
     &              VRT(1,2),POP(1,2),ICORE(I020),1,'1324')
       CALL GETALL (ICORE(I000),ISIZE,1,63)
       CALL SAXPY  (ISIZE,ONE,ICORE(I010),1,ICORE(I000),1)
       CALL PUTALL (ICORE(I000),ISIZE,1,63)
C
C RESORT AND ANTISYMMETRIZE AAAA AND BBBB LISTS
C
       DO 2000 ISPIN=1,2
C
        LISTQ=39+ISPIN
        LISTZ=60+ISPIN
C
        ISIZE=IDSYMSZ(1,ISYTYP(1,LISTQ),ISYTYP(2,LISTQ))
        I000=1
        I010=I000+ISIZE*IINTFP
        I020=I010+ISIZE*IINTFP
        CALL GETALL(ICORE(I000),ISIZE,1,LISTQ)
        CALL SST03I(ICORE(I000),ICORE(I010),ISIZE,ISIZE,ICORE(I020),
     &              SPCASE(ISPIN))
        ISIZE=IDSYMSZ(1,ISYTYP(1,LISTZ),ISYTYP(2,LISTZ))
        CALL GETALL(ICORE(I000),ISIZE,1,LISTZ)
        CALL SAXPY (ISIZE,ONE,ICORE(I010),1,ICORE(I000),1)
        CALL PUTALL(ICORE(I000),ISIZE,1,LISTZ)
C
2000   CONTINUE
C
      ENDIF
C
C ALL DONE, RETURN
C
      RETURN
      END 

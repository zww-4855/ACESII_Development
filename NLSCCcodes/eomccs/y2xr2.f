      SUBROUTINE Y2XR2(ICORE,I0Y1,I0Y2,ISTART,MAXCOR,IUHF,
     &                 LISTR0,LISTG0)
C
C CALCULATES - P(IJ) R(IM,AB) Y(M,J) - P(AB) Y(A,E) R(IJ,EB)
C
CEND
C
C CODED OCT/93  JG
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER DIRPRD,POP,VRT,DISSYR1,DISSYR2,DISSYG
C
      DIMENSION ICORE(MAXCOR) 
      DIMENSION I0Y1(2),I0Y2(2)
C
      COMMON/STATSYM/IRREPX
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C
      DATA AZERO,ONE,ONEM /0.D0,1.D0,-1.D0/
C
C
      IF(IUHF.EQ.1) THEN
C
       DO 1000 ISPIN=1,2
C
        LISTR=LISTR0+ISPIN-1
        LISTG=LISTG0+ISPIN-1
C
        DO 100 IRREPR=1,NIRREP
C
         IRREPL=DIRPRD(IRREPX,IRREPR)
C
         NUMSYR1=IRPDPD(IRREPL,ISYTYP(2,LISTR))
         DISSYR1=IRPDPD(IRREPR,ISYTYP(1,LISTR))
         NUMSYR2=IRPDPD(IRREPR,ISYTYP(2,LISTR))
         DISSYR2=IRPDPD(IRREPL,ISYTYP(1,LISTR))
         NUMSYG=IRPDPD(IRREPR,ISYTYP(2,LISTG))
         DISSYG=IRPDPD(IRREPR,ISYTYP(1,LISTG))
         NOCCSQ1=IRPDPD(IRREPR,20+ISPIN)
         NVRTSQ1=IRPDPD(IRREPR,18+ISPIN)  
         NOCCSQ2=IRPDPD(IRREPL,20+ISPIN)
         NVRTSQ2=IRPDPD(IRREPL,18+ISPIN)  
C
         I000=ISTART
         I010=I000+IINTFP*MAX(NUMSYG*DISSYG,NUMSYR2*NVRTSQ2,
     &                        DISSYR1*NOCCSQ2)
         ITMP=I010+IINTFP*MAX(NUMSYG*NVRTSQ1,DISSYG*NOCCSQ1)
         IEND=ITMP+3*IINTFP*MAX(NUMSYR1,DISSYR1,DISSYR2,NUMSYR1,
     &                          NUMSYG,DISSYG)
         IF(IEND.GT.MAXCOR) CALL INSMEM('Y2XR2 ',IEND,MAXCOR)
C
         CALL GETLST(ICORE(I000),1,NUMSYR1,1,IRREPL,LISTR)
C
         CALL SYMEXP(IRREPL,POP(1,ISPIN),DISSYR1,ICORE(I000))
C
         IOFFG=I010
         IOFFY=I0Y1(ISPIN)
C
         DO 110 IRREPJ=1,NIRREP
C
          IRREPI=DIRPRD(IRREPJ,IRREPR) 
          IRREPM=DIRPRD(IRREPJ,IRREPX)
C
          NOCCI=POP(IRREPI,ISPIN)
          NOCCJ=POP(IRREPJ,ISPIN)
          NOCCM=POP(IRREPM,ISPIN)
C
          IOFFR=I000
          DO 111 IRREP1=1,IRREPM-1
           IOFFR=IOFFR+IINTFP*DISSYR1*POP(IRREP1,ISPIN)*
     &                  POP(DIRPRD(IRREP1,IRREPL),ISPIN)
111       CONTINUE
C
          CALL XGEMM('N','N',DISSYG*NOCCI,NOCCJ,NOCCM,ONEM,
     &               ICORE(IOFFR),DISSYR1*NOCCI,ICORE(IOFFY),
     &               NOCCM,AZERO,ICORE(IOFFG),DISSYG*NOCCI)
C
          IOFFG=IOFFG+IINTFP*DISSYG*NOCCI*NOCCJ
          IOFFY=IOFFY+IINTFP*NOCCJ*NOCCM
C
110      CONTINUE
C
         CALL ASSYM(IRREPR,POP(1,ISPIN),DISSYG,DISSYG,ICORE(I000),
     &              ICORE(I010))
         CALL GETLST(ICORE(I010),1,NUMSYG,1,IRREPR,LISTG)
         CALL SAXPY(NUMSYG*DISSYG,ONE,ICORE(I000),1,ICORE(I010),1) 
         CALL PUTLST(ICORE(I010),1,NUMSYG,1,IRREPR,LISTG)
C
         
         CALL GETTRN(ICORE(I000),ICORE(ITMP),DISSYR2,NUMSYR2,1,
     &               IRREPR,LISTR)
C
         CALL SYMEXP(IRREPL,VRT(1,ISPIN),NUMSYR2,ICORE(I000))
C
         IOFFG=I010
C
         DO 120 IRREPB=1,NIRREP
C
          IRREPA=DIRPRD(IRREPB,IRREPR) 
          IRREPE=DIRPRD(IRREPX,IRREPB)
C
          NVRTA=VRT(IRREPA,ISPIN)
          NVRTB=VRT(IRREPB,ISPIN)
          NVRTE=VRT(IRREPE,ISPIN)
C
          IOFFY=I0Y2(ISPIN)
          IOFFR=I000
          DO 121 IRREP1=1,IRREPE-1
           IOFFR=IOFFR+IINTFP*NUMSYR2*VRT(IRREP1,ISPIN)*
     &               VRT(DIRPRD(IRREP1,IRREPL),ISPIN)
           IOFFY=IOFFY+IINTFP*VRT(IRREP1,ISPIN)*
     &                        VRT(DIRPRD(IRREP1,IRREPX),ISPIN)
121       CONTINUE
C
          CALL XGEMM('N','T',NUMSYG*NVRTA,NVRTB,NVRTE,ONEM,
     &               ICORE(IOFFR),NUMSYR2*NVRTA,ICORE(IOFFY),
     &               NVRTB,AZERO,ICORE(IOFFG),NUMSYG*NVRTA)
C
          IOFFG=IOFFG+IINTFP*NUMSYG*NVRTA*NVRTB
C
120      CONTINUE
C
         CALL ASSYM(IRREPR,VRT(1,ISPIN),NUMSYG,NUMSYG,ICORE(I000),
     &              ICORE(I010))
         CALL TRANSP(ICORE(I000),ICORE(I010),DISSYG,NUMSYG)
         CALL GETLST(ICORE(I000),1,NUMSYG,1,IRREPR,LISTG)
         CALL SAXPY(NUMSYG*DISSYG,ONE,ICORE(I010),1,ICORE(I000),1) 
         CALL PUTLST(ICORE(I000),1,NUMSYG,1,IRREPR,LISTG)
C
100     CONTINUE         
C
1000   CONTINUE
C
      ENDIF
C
C ABAB TERMS
C
      LISTR=LISTR0+2  
      LISTG=LISTG0+2
C
      DO 200 IRREPR=1,NIRREP
C
       IRREPL=DIRPRD(IRREPX,IRREPR)
C
       NUMSYR1=IRPDPD(IRREPL,ISYTYP(2,LISTR))
       DISSYR1=IRPDPD(IRREPR,ISYTYP(1,LISTR))
       NUMSYR2=IRPDPD(IRREPR,ISYTYP(2,LISTR))
       DISSYR2=IRPDPD(IRREPL,ISYTYP(1,LISTR))
       NUMSYG=IRPDPD(IRREPR,ISYTYP(2,LISTG))
       DISSYG=IRPDPD(IRREPR,ISYTYP(1,LISTG)) 
C
       I000=ISTART
       I010=I000+IINTFP*MAX(NUMSYG*DISSYG,NUMSYR1*DISSYR1,
     &                      NUMSYR2*DISSYR2)
       ITMP=I010+IINTFP*NUMSYG*DISSYG
       IEND=ITMP+MAX(3*IINTFP*MAX(NUMSYG,NUMSYR1,NUMSYR2,
     &               DISSYG,DISSYR1,DISSYR2),NUMSYG*DISSYG)
       IF(IEND.GE.MAXCOR) CALL INSMEM('TPDIJAB3',IEND,MAXCOR)
C
       CALL GETLST(ICORE(I000),1,NUMSYR1,1,IRREPL,LISTR)
C
       IOFFY=I0Y1(2)
       IOFFG=I010
C
       DO 210 IRREPJ=1,NIRREP
C
        IRREPI=DIRPRD(IRREPJ,IRREPR) 
        IRREPM=DIRPRD(IRREPX,IRREPJ)
C
        NOCCI=POP(IRREPI,1)
        NOCCJ=POP(IRREPJ,2)
        NOCCM=POP(IRREPM,2)
C
        IOFFR=I000
        DO 211 IRREP1=1,IRREPM-1
         IOFFR=IOFFR+IINTFP*DISSYR1*POP(IRREP1,2)
     &                *POP(DIRPRD(IRREP1,IRREPL),1)
211     CONTINUE
C
        CALL XGEMM('N','N',DISSYG*NOCCI,NOCCJ,NOCCM,ONEM,
     &             ICORE(IOFFR),DISSYR1*NOCCI,ICORE(IOFFY),
     &             NOCCM,AZERO,ICORE(IOFFG),DISSYG*NOCCI)
C
        IOFFG=IOFFG+IINTFP*DISSYG*NOCCI*NOCCJ
        IOFFY=IOFFY+IINTFP*NOCCJ*NOCCM
C
210    CONTINUE
C
       IF(IUHF.EQ.1) THEN
C
C  TRANSPOSE THE TARGET ARRAY BACK TO THE FINAL ORDER ---> Ab;Ij
C
        CALL SYMTR1(IRREPL,POP(1,1),POP(1,2),DISSYR1,ICORE(I000),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*DISSYR1),
     &              ICORE(ITMP+2*IINTFP*DISSYR1))
        CALL SYMTR1(IRREPR,POP(1,1),POP(1,2),DISSYG,ICORE(I010),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*DISSYG),
     &              ICORE(ITMP+2*IINTFP*DISSYG))
C
        IOFFY=I0Y1(1)
        IOFFG=I010
C
        DO 220 IRREPJ=1,NIRREP
C
         IRREPI=DIRPRD(IRREPJ,IRREPR) 
         IRREPM=DIRPRD(IRREPJ,IRREPX)
C
         NOCCI=POP(IRREPI,2)
         NOCCJ=POP(IRREPJ,1)
         NOCCM=POP(IRREPM,1)
C
         IOFFR=I000
         DO 221 IRREP1=1,IRREPM-1
          IOFFR=IOFFR+IINTFP*DISSYR1*POP(IRREP1,1)*
     &                  POP(DIRPRD(IRREPL,IRREP1),2)
221      CONTINUE

         CALL XGEMM('N','N',DISSYG*NOCCI,NOCCJ,NOCCM,ONEM,
     &              ICORE(IOFFR),DISSYR1*NOCCI,ICORE(IOFFY),
     &              NOCCM,ONE,ICORE(IOFFG),DISSYG*NOCCI)
C
         IOFFG=IOFFG+IINTFP*DISSYG*NOCCI*NOCCJ
         IOFFY=IOFFY+IINTFP*NOCCJ*NOCCM
C
220    CONTINUE
C
C  TRANSPOSE THE TARGET ARRAY BACK TO THE FINAL ORDER ---> Ab;Ij
C
        CALL SYMTR1(IRREPR,POP(1,2),POP(1,1),DISSYG,ICORE(I010),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*DISSYG),
     &              ICORE(ITMP+2*IINTFP*DISSYG))
C
       ENDIF
C
C TRANSPOSE TARGET ARRAY
C
       CALL TRANSP(ICORE(I010),ICORE(ITMP),NUMSYG,DISSYG)
       CALL SCOPY(NUMSYG*DISSYG,ICORE(ITMP),1,ICORE(I010),1)
C
       CALL GETTRN(ICORE(I000),ICORE(ITMP),DISSYR2,NUMSYR2,
     &             1,IRREPR,LISTR)
C
       IOFFG=I010
C
       DO 230 IRREPB=1,NIRREP
C
        IRREPA=DIRPRD(IRREPB,IRREPR) 
        IRREPE=DIRPRD(IRREPX,IRREPB)
C
        NVRTA=VRT(IRREPA,1)
        NVRTB=VRT(IRREPB,2)
        NVRTE=VRT(IRREPE,2)
C
        IOFFY=I0Y2(2)
        IOFFR=I000
        DO 231 IRREP1=1,IRREPE-1
         IOFFR=IOFFR+IINTFP*NUMSYR2*VRT(IRREP1,2)*
     &                       VRT(DIRPRD(IRREP1,IRREPL),1)
         IOFFY=IOFFY+IINTFP*VRT(IRREP1,2)*
     &                      VRT(DIRPRD(IRREP1,IRREPX),2)
231     CONTINUE
C
        CALL XGEMM('N','T',NUMSYG*NVRTA,NVRTB,NVRTE,ONEM,
     &             ICORE(IOFFR),NUMSYR2*NVRTA,ICORE(IOFFY),
     &             NVRTB,ONE,ICORE(IOFFG),NUMSYG*NVRTA)
C
        IOFFG=IOFFG+IINTFP*NUMSYG*NVRTA*NVRTB
C
230    CONTINUE
C
       IF(IUHF.EQ.1) THEN
C
C  TRANSPOSE THE TARGET ARRAY BACK TO THE FINAL ORDER ---> Ab;Ij
C
        CALL SYMTR1(IRREPL,VRT(1,1),VRT(1,2),NUMSYR2,ICORE(I000),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*NUMSYR2),
     &              ICORE(ITMP+2*IINTFP*NUMSYR2))
        CALL SYMTR1(IRREPR,VRT(1,1),VRT(1,2),NUMSYG,ICORE(I010),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*NUMSYG),
     &              ICORE(ITMP+2*IINTFP*NUMSYG))
C
        IOFFG=I010
C
        DO 240 IRREPB=1,NIRREP
C
         IRREPA=DIRPRD(IRREPB,IRREPR) 
         IRREPE=DIRPRD(IRREPX,IRREPB)
C
         NVRTA=VRT(IRREPA,2)
         NVRTB=VRT(IRREPB,1)
         NVRTE=VRT(IRREPE,1)
C
         IOFFY=I0Y2(1)
         IOFFR=I000
         DO 241 IRREP1=1,IRREPE-1
          IOFFR=IOFFR+IINTFP*NUMSYR2*VRT(IRREP1,1)
     &                 *VRT(DIRPRD(IRREP1,IRREPL),2)
          IOFFY=IOFFY+IINTFP*VRT(IRREP1,1)*
     &                       VRT(DIRPRD(IRREP1,IRREPX),1)
241      CONTINUE
C
         CALL XGEMM('N','T',NUMSYG*NVRTA,NVRTB,NVRTE,ONEM,
     &              ICORE(IOFFR),NUMSYR2*NVRTA,ICORE(IOFFY),
     &              NVRTB,ONE,ICORE(IOFFG),NUMSYG*NVRTA)
C
         IOFFG=IOFFG+IINTFP*NUMSYG*NVRTA*NVRTB
C
240    CONTINUE
C
C  TRANSPOSE THE TARGET ARRAY BACK TO THE FINAL ORDER ---> Ab;Ij
C
        CALL SYMTR1(IRREPR,VRT(1,2),VRT(1,1),NUMSYG,ICORE(I010),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*NUMSYG),
     &              ICORE(ITMP+2*IINTFP*NUMSYG))
C
      ENDIF
C
      CALL TRANSP(ICORE(I010),ICORE(I000),DISSYG,NUMSYG)
C
c      call scopy(numsyg*dissyg,icore(i010),1,icore(i000),1)
      call checksum('y2xr2 1 ',icore(I000),numsyg*dissyg,s)
      IF(IUHF.EQ.0) THEN
C
       CALL DSYMRHF(IRREPR,IRREPR,VRT(1,1),POP(1,1),DISSYG,
     &              ICORE(I000),ICORE(ITMP),ICORE(ITMP+IINTFP*
     &              DISSYG),ICORE(ITMP+2*IINTFP*DISSYG))
C
       ENDIF
      call checksum('y2xr2 2 ',icore(I000),numsyg*dissyg,s)
C
C UPDATE G(IJ,AB) ON DISK
C
       CALL GETLST(ICORE(I010),1,NUMSYG,1,IRREPR,LISTG)
      call checksum('y2xr2 3 ',icore(I010),numsyg*dissyg,s)
       CALL SAXPY(NUMSYG*DISSYG,ONE,ICORE(I010),1,ICORE(I000),1)
      call checksum('y2xr2 4 ',icore(I000),numsyg*dissyg,s)
       CALL PUTLST(ICORE(I000),1,NUMSYG,1,IRREPR,LISTG)
C
200   CONTINUE
C
C ALL DONE, RETURN
C
      RETURN
      END 

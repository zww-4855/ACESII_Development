      SUBROUTINE Z2XT2(ICORE,I0Z1,I0Z2,ISTART,MAXCOR,IUHF,
     &                 LISTT0,LISTG0)
C
C CALCULATES - P(IJ) T(IM,AB) Z(M,J) - P(AB) Z(A,E) T(IJ,EB)
C
CEND
C
C CODED OCT/93  JG
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER DIRPRD,POP,VRT,DISSYT,DISSYG
C
      DIMENSION ICORE(MAXCOR) 
      DIMENSION I0Z1(2),I0Z2(2)
C
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C
      DATA AZERO,ONE,ONEM /0.D0,1.D0,-1.D0/
C
      IF(IUHF.EQ.1) THEN
C
       DO 1000 ISPIN=1,2
C
        LISTT=LISTT0+ISPIN-1
        LISTG=LISTG0+ISPIN-1
C
        DO 100 IRREP=1,NIRREP
C
         NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTT))
         DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
         NUMSYG=NUMSYT
         DISSYG=DISSYT
         NOCCSQ=IRPDPD(IRREP,20+ISPIN)
         NVRTSQ=IRPDPD(IRREP,18+ISPIN)  
C
         I000=ISTART
         I010=I000+IINTFP*MAX(NUMSYT*NVRTSQ,DISSYT*NOCCSQ)
         ITMP=I010+IINTFP*MAX(NUMSYG*NVRTSQ,DISSYG*NOCCSQ)
         IEND=ITMP+3*IINTFP*MAX(NUMSYT,DISSYT,NUMSYG,DISSYG)
         IF(IEND.GT.MAXCOR) CALL INSMEM('Z2XT2 ',IEND,MAXCOR)
C
         CALL GETLST(ICORE(I000),1,NUMSYT,1,IRREP,LISTT)
C
         CALL SYMEXP(IRREP,POP(1,ISPIN),DISSYT,ICORE(I000))
C
         IOFFT=I000
         IOFFG=I010
         IOFFZ=I0Z1(ISPIN)
C
         DO 110 IRREPJ=1,NIRREP
C
          IRREPI=DIRPRD(IRREPJ,IRREP) 
          IRREPM=IRREPJ
C
          NOCCI=POP(IRREPI,ISPIN)
          NOCCJ=POP(IRREPJ,ISPIN)
          NOCCM=POP(IRREPM,ISPIN)
C
          CALL XGEMM('N','N',DISSYG*NOCCI,NOCCJ,NOCCM,ONEM,
     &               ICORE(IOFFT),DISSYT*NOCCI,ICORE(IOFFZ),
     &               NOCCM,AZERO,ICORE(IOFFG),DISSYG*NOCCI)
C
          IOFFT=IOFFT+IINTFP*DISSYT*NOCCI*NOCCM
          IOFFG=IOFFG+IINTFP*DISSYG*NOCCI*NOCCJ
          IOFFZ=IOFFZ+IINTFP*NOCCJ*NOCCM
C
110      CONTINUE
C
         CALL ASSYM(IRREP,POP(1,ISPIN),DISSYG,DISSYG,ICORE(I000),
     &              ICORE(I010))
         CALL GETLST(ICORE(I010),1,NUMSYG,1,IRREP,LISTG)
         CALL SAXPY(NUMSYG*DISSYG,ONE,ICORE(I000),1,ICORE(I010),1) 
         CALL PUTLST(ICORE(I010),1,NUMSYG,1,IRREP,LISTG)
C
         CALL GETTRN(ICORE(I000),ICORE(ITMP),DISSYT,NUMSYT,1,
     &               IRREP,LISTT)
C
         CALL SYMEXP(IRREP,VRT(1,ISPIN),NUMSYT,ICORE(I000))
C
         IOFFT=I000
         IOFFG=I010
         IOFFZ=I0Z2(ISPIN)
C
         DO 120 IRREPB=1,NIRREP
C
          IRREPA=DIRPRD(IRREPB,IRREP) 
          IRREPE=IRREPB
C
          NVRTA=VRT(IRREPA,ISPIN)
          NVRTB=VRT(IRREPB,ISPIN)
          NVRTE=VRT(IRREPE,ISPIN)
C
C
          CALL XGEMM('N','T',NUMSYG*NVRTA,NVRTB,NVRTE,ONEM,
     &               ICORE(IOFFT),NUMSYG*NVRTA,ICORE(IOFFZ),
     &               NVRTB,AZERO,ICORE(IOFFG),NUMSYG*NVRTA)
C
          IOFFZ=IOFFZ+IINTFP*NVRTB*NVRTE
          IOFFT=IOFFT+IINTFP*NUMSYT*NVRTA*NVRTE
          IOFFG=IOFFG+IINTFP*NUMSYG*NVRTA*NVRTB
C
120      CONTINUE
C
         CALL ASSYM(IRREP,VRT(1,ISPIN),NUMSYG,NUMSYG,ICORE(I000),
     &              ICORE(I010))
         CALL TRANSP(ICORE(I000),ICORE(I010),DISSYG,NUMSYG)
         CALL GETLST(ICORE(I000),1,NUMSYG,1,IRREP,LISTG)
         CALL SAXPY(NUMSYG*DISSYG,ONE,ICORE(I010),1,ICORE(I000),1) 
         CALL PUTLST(ICORE(I000),1,NUMSYG,1,IRREP,LISTG)
C
100     CONTINUE         
C
1000   CONTINUE
C
      ENDIF
C
C ABAB TERMS
C
      LISTT=LISTT0+2  
      LISTG=LISTG0+2
C
      DO 200 IRREP=1,NIRREP
C
       NUMSYT=IRPDPD(IRREP,ISYTYP(2,LISTT))
       DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
       NUMSYG=IRPDPD(IRREP,ISYTYP(2,LISTG))
       DISSYG=IRPDPD(IRREP,ISYTYP(1,LISTG)) 
C
       I000=ISTART
       I010=I000+IINTFP*NUMSYT*DISSYT
       ITMP=I010+IINTFP*NUMSYG*DISSYG
       IEND=ITMP+MAX(3*IINTFP*MAX(NUMSYG,NUMSYT,DISSYG,DISSYT),
     &               NUMSYT*DISSYT,NUMSYG*DISSYG)
       IF(IEND.GE.MAXCOR) CALL INSMEM('TPDIJAB3',IEND,MAXCOR)
C
       CALL GETLST(ICORE(I000),1,NUMSYT,1,IRREP,LISTT)
C
       IOFFZ=I0Z1(2)
       IOFFT=I000
       IOFFG=I010
C
       DO 210 IRREPJ=1,NIRREP
C
        IRREPI=DIRPRD(IRREPJ,IRREP) 
        IRREPM=IRREPJ
C
        NOCCI=POP(IRREPI,1)
        NOCCJ=POP(IRREPJ,2)
        NOCCM=POP(IRREPM,2)
C
        CALL XGEMM('N','N',DISSYG*NOCCI,NOCCJ,NOCCM,ONEM,
     &             ICORE(IOFFT),DISSYT*NOCCI,ICORE(IOFFZ),
     &             NOCCM,AZERO,ICORE(IOFFG),DISSYG*NOCCI)
C
        IOFFT=IOFFT+IINTFP*DISSYT*NOCCI*NOCCM
        IOFFG=IOFFG+IINTFP*DISSYG*NOCCI*NOCCJ
        IOFFZ=IOFFZ+IINTFP*NOCCJ*NOCCM
C
210    CONTINUE
C
       IF(IUHF.EQ.1) THEN
C
C  TRANSPOSE THE TARGET ARRAY BACK TO THE FINAL ORDER ---> Ab;Ij
C
        CALL SYMTR1(IRREP,POP(1,1),POP(1,2),DISSYT,ICORE(I000),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*DISSYT),
     &              ICORE(ITMP+2*IINTFP*DISSYT))
        CALL SYMTR1(IRREP,POP(1,1),POP(1,2),DISSYG,ICORE(I010),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*DISSYG),
     &              ICORE(ITMP+2*IINTFP*DISSYG))
C
        IOFFZ=I0Z1(1)
        IOFFT=I000
        IOFFG=I010
C
        DO 220 IRREPJ=1,NIRREP
C
         IRREPI=DIRPRD(IRREPJ,IRREP) 
         IRREPM=IRREPJ
C
         NOCCI=POP(IRREPI,2)
         NOCCJ=POP(IRREPJ,1)
         NOCCM=POP(IRREPM,1)
C
         CALL XGEMM('N','N',DISSYG*NOCCI,NOCCJ,NOCCM,ONEM,
     &              ICORE(IOFFT),DISSYT*NOCCI,ICORE(IOFFZ),
     &              NOCCM,ONE,ICORE(IOFFG),DISSYG*NOCCI)
C
         IOFFT=IOFFT+IINTFP*DISSYT*NOCCI*NOCCM
         IOFFG=IOFFG+IINTFP*DISSYG*NOCCI*NOCCJ
         IOFFZ=IOFFZ+IINTFP*NOCCJ*NOCCM
C
220    CONTINUE
C
C  TRANSPOSE THE TARGET ARRAY BACK TO THE FINAL ORDER ---> Ab;Ij
C
        CALL SYMTR1(IRREP,POP(1,2),POP(1,1),DISSYT,ICORE(I000),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*DISSYT),
     &              ICORE(ITMP+2*IINTFP*DISSYT))
        CALL SYMTR1(IRREP,POP(1,2),POP(1,1),DISSYG,ICORE(I010),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*DISSYG),
     &              ICORE(ITMP+2*IINTFP*DISSYG))
C
       ENDIF
C
C TRANSPOSE TARGET AND T2 ARRAY
C
       CALL TRANSP(ICORE(I000),ICORE(ITMP),NUMSYT,DISSYT)
       CALL SCOPY(NUMSYT*DISSYT,ICORE(ITMP),1,ICORE(I000),1)
       CALL TRANSP(ICORE(I010),ICORE(ITMP),NUMSYG,DISSYG)
       CALL SCOPY(NUMSYG*DISSYG,ICORE(ITMP),1,ICORE(I010),1)
C
       IOFFZ=I0Z2(2)
       IOFFT=I000
       IOFFG=I010
C
       DO 230 IRREPB=1,NIRREP
C
        IRREPA=DIRPRD(IRREPB,IRREP) 
        IRREPE=IRREPB
C
        NVRTA=VRT(IRREPA,1)
        NVRTB=VRT(IRREPB,2)
        NVRTE=VRT(IRREPE,2)
C
        CALL XGEMM('N','T',NUMSYG*NVRTA,NVRTB,NVRTE,ONEM,
     &             ICORE(IOFFT),NUMSYT*NVRTA,ICORE(IOFFZ),
     &             NVRTB,ONE,ICORE(IOFFG),NUMSYG*NVRTA)
C
        IOFFT=IOFFT+IINTFP*NUMSYT*NVRTA*NVRTE
        IOFFG=IOFFG+IINTFP*NUMSYG*NVRTA*NVRTB
        IOFFZ=IOFFZ+IINTFP*NVRTB*NVRTE
C
230    CONTINUE
C
       IF(IUHF.EQ.1) THEN
C
C  TRANSPOSE THE TARGET ARRAY BACK TO THE FINAL ORDER ---> Ab;Ij
C
        CALL SYMTR1(IRREP,VRT(1,1),VRT(1,2),NUMSYT,ICORE(I000),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*NUMSYT),
     &              ICORE(ITMP+2*IINTFP*NUMSYT))
        CALL SYMTR1(IRREP,VRT(1,1),VRT(1,2),NUMSYG,ICORE(I010),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*NUMSYG),
     &              ICORE(ITMP+2*IINTFP*NUMSYG))
C
        IOFFZ=I0Z2(1)
        IOFFT=I000
        IOFFG=I010
C
        DO 240 IRREPB=1,NIRREP
C
         IRREPA=DIRPRD(IRREPB,IRREP) 
         IRREPE=IRREPB
C
         NVRTA=VRT(IRREPA,2)
         NVRTB=VRT(IRREPB,1)
         NVRTE=VRT(IRREPE,1)
C
         CALL XGEMM('N','T',NUMSYG*NVRTA,NVRTB,NVRTE,ONEM,
     &              ICORE(IOFFT),NUMSYT*NVRTA,ICORE(IOFFZ),
     &              NVRTB,ONE,ICORE(IOFFG),NUMSYG*NVRTA)
C
         IOFFT=IOFFT+IINTFP*NUMSYT*NVRTA*NVRTE
         IOFFG=IOFFG+IINTFP*NUMSYG*NVRTA*NVRTB
         IOFFZ=IOFFZ+IINTFP*NVRTB*NVRTE
C
240    CONTINUE
C
C  TRANSPOSE THE TARGET ARRAY BACK TO THE FINAL ORDER ---> Ab;Ij
C
        CALL SYMTR1(IRREP,VRT(1,2),VRT(1,1),NUMSYG,ICORE(I010),
     &              ICORE(ITMP),ICORE(ITMP+IINTFP*NUMSYG),
     &              ICORE(ITMP+2*IINTFP*NUMSYG))
C
      ENDIF
C
      CALL TRANSP(ICORE(I010),ICORE(I000),DISSYG,NUMSYG)
C
      call checksum('z2xt2 1',icore(I000),numsyg*dissyg,s)
      IF(IUHF.EQ.0) THEN
C
       CALL DSYMRHF(IRREP,IRREP,VRT(1,1),POP(1,1),DISSYG,
     &              ICORE(I000),ICORE(ITMP),ICORE(ITMP+IINTFP*
     &              DISSYG),ICORE(ITMP+2*IINTFP*DISSYG))
C
       ENDIF
      call checksum('z2xt2 2',icore(I000),numsyg*dissyg,s)
C
C UPDATE G(IJ,AB) ON DISK
C
       CALL GETLST(ICORE(I010),1,NUMSYG,1,IRREP,LISTG)
      call checksum('z2xt2 3',icore(I010),numsyg*dissyg,s)
       CALL SAXPY(NUMSYG*DISSYG,ONE,ICORE(I010),1,ICORE(I000),1)
      call checksum('z2xt2 4',icore(I000),numsyg*dissyg,s)
       CALL PUTLST(ICORE(I000),1,NUMSYG,1,IRREP,LISTG)
C
200   CONTINUE
C
C ALL DONE, RETURN
C
      RETURN
      END 

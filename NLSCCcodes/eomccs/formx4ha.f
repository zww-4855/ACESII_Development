      SUBROUTINE FORMX4HA(R1,ICORE,MAXCOR,IUHF)
C
C THIS ROUTINE CALCULATES THE FIRST CONTRIBUTION TO THE
C X INTERMEDIATES USED IN THE R1L2Y2H CONTRACTIONS.  THESE ARE:
C
C X(BN,EJ) =  W(GB,EJ)*R(NG)  => X(BN,EJ) LIST 424
C X(bn,ej) =  W(gb,ej)*R(ng)  => X(bn,ej) LIST 425
C X(bN,Ej) =  W(Gb,Ej)*R(NG)  => X(bN,Ej) LIST 438
C X(Bn,eJ) =  W(Bg,Je)*R(ng)  => X(Bn,eJ) LIST 439
C X(Bn,Ej) =  W(Bg,Ej)*R(ng)  => X(Bn,Ej) LIST 428
C X(bN,eJ) =  W(Gb,Je)*R(NG)  => X(bN,eJ) LIST 429
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ZILCH
      DIMENSION ICORE(MAXCOR),R1(*),I0R(2)
      COMMON/STATSYM/IRREPX
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMLOC/ISYMOFF(8,8,25)
C
      DATA ONE,ZILCH/1.0D0,0.0D0/
C
      I0R(1)=1
      IF(IUHF.NE.0)THEN
       I0R(2)=I0R(1)+IINTFP*IRPDPD(IRREPX,9)
      ELSE
       I0R(2)=I0R(1)
      ENDIF
      I000=1
C
      IF(IUHF.NE.0)THEN
C
C DO AAAA AND BBBB SPIN CASES
C
C X(EN,BJ) = W(GB,EJ)*R(NG)
C
       DO 10 ISPIN=1,2
        LISTW=26+ISPIN
        LISTX=423+ISPIN
        DO 20 IRREPR=1,NIRREP
         IRREPL=DIRPRD(IRREPR,IRREPX)
         DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW))
         DISSYWX=IRPDPD(IRREPR,18+ISPIN)
         NUMDSW=IRPDPD(IRREPR,ISYTYP(2,LISTW))
         DISSYX=IRPDPD(IRREPR,ISYTYP(2,LISTX))
         NUMDSX=IRPDPD(IRREPL,ISYTYP(1,LISTX))
         MAXW=MAX(DISSYWX,NUMDSW,DISSYX,NUMDSX)
         I010=I000+IINTFP*DISSYX*NUMDSX
         I020=I010+IINTFP*DISSYX*NUMDSX
         ITMP1=I010
         ITMP2=ITMP1+IINTFP*MAXW
         ITMP3=ITMP2+IINTFP*MAXW
         IBUF1=MAX(ITMP3+IINTFP*MAXW,I020)
         MXCOR=MAXCOR-IBUF1+1
C
         NINCOR=MXCOR/(IINTFP*MAX(1,DISSYWX)*2)
         nincor=1
         NLEFT=NUMDSW
         IFIRST=1
1        NREAD=MIN(NLEFT,NINCOR)      
         IBUF2=IBUF1+NREAD*DISSYWX*IINTFP
C
C READ W(GB,EJ), REORDER TO W(EJ,BG)
C
         CALL GETLST(ICORE(IBUF2),IFIRST,NREAD,1,IRREPR,LISTW)
         CALL VMINUS(ICORE(IBUF2),NREAD*DISSYW)
         CALL TRANSP(ICORE(IBUF2),ICORE(IBUF1),NREAD,DISSYW)
         CALL SYMEXP(IRREPR,VRT(1,ISPIN),NREAD,ICORE(IBUF1))
C
C FORM PRODUCT X(EJ,BN) = W(EJ,BG)*R(GN)
C
         DO 30 IRREPN=1,NIRREP
          IRREPG=DIRPRD(IRREPN,IRREPX)
          IRREPB=DIRPRD(IRREPG,IRREPR)
          NUMB=VRT(IRREPB,ISPIN)
          NUMG=VRT(IRREPG,ISPIN)
          NUMN=POP(IRREPN,ISPIN)
          NROW=NREAD*NUMB
          NCOL=NUMN
          NSUM=NUMG
          IOFFX=I000+IINTFP*
     &     ((ISYMOFF(IRREPN,IRREPL,8+ISPIN)-1)*NREAD)
          IOFFW=IBUF1+IINTFP*(ISYMOFF(IRREPG,IRREPR,18+ISPIN)-1)*NREAD
          IOFFR=I0R(ISPIN)+IINTFP*(ISYMOFF(IRREPN,IRREPX,8+ISPIN)-1)
          CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFW),NROW,
     &               R1(IOFFR),NSUM,ZILCH,ICORE(IOFFX),NROW)
30       CONTINUE
C
C WRITE TO DISK AS X(BN,EJ)
C
         CALL TRANSP(ICORE(I000),ICORE(I010),NUMDSX,NREAD)
         CALL PUTLST(ICORE(I010),IFIRST,NREAD,1,IRREPR,LISTX)
C
         NLEFT=NLEFT-NREAD
         IFIRST=IFIRST+NREAD
         IF(NLEFT.NE.0)GOTO 1
C
20      CONTINUE
C
10     CONTINUE
C
      ENDIF
C
C X(bN,Ej) =  W(Gb,Ej)*R(NG)  => X(bN,Ej) LIST 458
C X(Bn,eJ) =  W(Bg,Je)*R(ng)  => X(Bn,eJ) LIST 459
C
      DO 110 ISPIN=1,1+IUHF
       LISTW=31-ISPIN
       LISTX =457+ISPIN+(1-IUHF)
       DO 120 IRREPR=1,NIRREP
        IRREPL=DIRPRD(IRREPR,IRREPX)
        DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW))
        NUMDSW=IRPDPD(IRREPR,ISYTYP(2,LISTW))
        DISSYX=IRPDPD(IRREPR,ISYTYP(2,LISTX))
        NUMDSX=IRPDPD(IRREPL,ISYTYP(1,LISTX))
        MAXW=MAX(DISSYW,NUMDSW,DISSYX,NUMDSX)
        I010=I000+IINTFP*DISSYX*NUMDSX
        I020=I010+IINTFP*DISSYX*NUMDSX
        ITMP1=I010
        ITMP2=ITMP1+IINTFP*MAXW
        ITMP3=ITMP2+IINTFP*MAXW
        IBUF1=MAX(I020,ITMP3+IINTFP*MAXW)
        MXCOR=MAXCOR-IBUF1+1
C
        NINCOR=MXCOR/(IINTFP*MAX(1,DISSYW)*2)
        nincor=1
        NLEFT=NUMDSW
        IFIRST=1
2       NREAD=MIN(NLEFT,NINCOR)      
        IBUF2=IBUF1+NREAD*DISSYW*IINTFP
C
C READ W(Gb,Ej) -> W(Ej,bG) [ISPIN=1]
C READ W(Bg,Je) -> W(Je,Bg) [ISPIN=2]
C
        CALL GETLST(ICORE(IBUF2),IFIRST,NREAD,1,IRREPR,LISTW)
        IF(IUHF.EQ.0)THEN
         CALL SPINAD3(IRREPR,VRT(1,1),DISSYW,NREAD,ICORE(IBUF2),
     &                ICORE(ITMP1),ICORE(ITMP2))
        ENDIF
        IF(ISPIN.EQ.1)THEN 
         CALL SYMTR3(IRREPR,VRT(1,1),VRT(1,2),DISSYW,NREAD,ICORE(IBUF2),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ENDIF
        CALL TRANSP(ICORE(IBUF2),ICORE(IBUF1),NREAD,DISSYW)
C
C FORM PRODUCT 
C         X(Ej,bN) = W(Ej,bG)*R(GN) [ISPIN=1]
C         X(Je,Bn) = W(Je,Bg)*R(gn) [ISPIN=2]
C
        DO 130 IRREPN=1,NIRREP
         IRREPG=DIRPRD(IRREPN,IRREPX)
         IRREPB=DIRPRD(IRREPG,IRREPR)
         NUMB=VRT(IRREPB,3-ISPIN)
         NUMG=VRT(IRREPG,ISPIN)
         NUMN=POP(IRREPN,ISPIN)
         NROW=NREAD*NUMB
         NCOL=NUMN
         NSUM=NUMG
         IF(ISPIN.EQ.1)THEN
          IOFFX=I000+IINTFP*
     &          ((ISYMOFF(IRREPN,IRREPL,12)-1)*NREAD)
          IOFFW=IBUF1+IINTFP*(ISYMOFF(IRREPG,IRREPR,23)-1)*NREAD
         ELSE
          IOFFX=I000+IINTFP*
     &          ((ISYMOFF(IRREPN,IRREPL,11)-1)*NREAD)
          IOFFW=IBUF1+IINTFP*(ISYMOFF(IRREPG,IRREPR,13)-1)*NREAD
         ENDIF
         IOFFR=I0R(ISPIN)+IINTFP*(ISYMOFF(IRREPN,IRREPX,8+ISPIN)-1)
         CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFW),NROW,
     &              R1(IOFFR),NSUM,ZILCH,ICORE(IOFFX),NROW)
130     CONTINUE
C
C WRITE TO DISK AS X(Bn,eJ)
C
        CALL TRANSP(ICORE(I000),ICORE(I010),NUMDSX,NREAD)
        CALL PUTLST(ICORE(I010),IFIRST,NREAD,1,IRREPR,LISTX)
        NLEFT =NLEFT-NREAD
        IFIRST=IFIRST+NREAD
        IF(NLEFT.NE.0)GOTO 2
        IF(ISPIN.EQ.2)THEN
         CALL GETLST(ICORE(I000),1,DISSYX,1,IRREPR,LISTX)
         CALL SYMTR1(IRREPR,POP(1,1),VRT(1,2),NUMDSX,ICORE(I000),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
         CALL PUTLST(ICORE(I000),1,DISSYX,1,IRREPR,LISTX)
        ENDIF
C
120    CONTINUE
C
110   CONTINUE
C
C X(Bn,Ej) =  W(Bg,Ej)*R(ng)  => X(Bn,Ej) LIST 428
C X(bN,eJ) =  W(Gb,Je)*R(NG)  => X(bN,eJ) LIST 429
C
      DO 210 ISPIN=1,1+IUHF
       LISTW=31-ISPIN
       IF(IUHF.EQ.0)THEN
        LISTX=428
       ELSE
        LISTX=427+ISPIN
       ENDIF
       DO 220 IRREPR=1,NIRREP
        IRREPL=DIRPRD(IRREPR,IRREPX)
        DISSYW=IRPDPD(IRREPR,ISYTYP(1,LISTW))
        NUMDSW=IRPDPD(IRREPR,ISYTYP(2,LISTW))
        DISSYX=IRPDPD(IRREPR,ISYTYP(2,LISTX))
        NUMDSX=IRPDPD(IRREPL,ISYTYP(1,LISTX))
        MAXW=MAX(DISSYW,NUMDSW,DISSYX,NUMDSX)
        I010=I000+IINTFP*DISSYX*NUMDSX
        I020=I010+IINTFP*DISSYX*NUMDSX
        ITMP1=I010
        ITMP2=ITMP1+IINTFP*MAXW
        ITMP3=ITMP2+IINTFP*MAXW
        IBUF1=MAX(I020,ITMP3+IINTFP*MAXW)
        MXCOR=MAXCOR-IBUF1+1
C
        NINCOR=MXCOR/(IINTFP*MAX(1,DISSYW)*2)
        nincor=1
        NLEFT=NUMDSW
        IFIRST=1
3       NREAD=MIN(NLEFT,NINCOR)      
        IBUF2=IBUF1+NREAD*DISSYW*IINTFP
C
C READ W(Bg,Ej) -> W(Ej,Bg) [ISPIN=1]
C READ W(Gb,Je) -> W(Je,bG) [ISPIN=2]
C
        CALL GETLST(ICORE(IBUF2),IFIRST,NREAD,1,IRREPR,LISTW)
        IF(ISPIN.EQ.2)THEN 
         CALL SYMTR3(IRREPR,VRT(1,1),VRT(1,2),DISSYW,NREAD,ICORE(IBUF2),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ENDIF
        CALL TRANSP(ICORE(IBUF2),ICORE(IBUF1),NREAD,DISSYW)
C
C FORM PRODUCT 
C         X(Ej,Bn) = W(Ej,Bg)*R(gn) [ISPIN=1]
C         X(Je,bN) = W(Je,bG)*R(GN) [ISPIN=2]
C
        DO 230 IRREPN=1,NIRREP
         IRREPG=DIRPRD(IRREPN,IRREPX)
         IRREPB=DIRPRD(IRREPG,IRREPR)
         NUMB=VRT(IRREPB,ISPIN)
         NUMG=VRT(IRREPG,3-ISPIN)
         NUMN=POP(IRREPN,3-ISPIN)
         NROW=NREAD*NUMB
         NCOL=NUMN
         NSUM=NUMG
         IF(ISPIN.EQ.1)THEN
          IOFFX=I000+IINTFP*
     &          ((ISYMOFF(IRREPN,IRREPL,11)-1)*NREAD)
          IOFFW=IBUF1+IINTFP*(ISYMOFF(IRREPG,IRREPR,13)-1)*NREAD
         ELSE
          IOFFX=I000+IINTFP*
     &          ((ISYMOFF(IRREPN,IRREPL,12)-1)*NREAD)
          IOFFW=IBUF1+IINTFP*(ISYMOFF(IRREPG,IRREPR,23)-1)*NREAD
         ENDIF
         IOFFR=I0R(3-ISPIN)+IINTFP*(ISYMOFF(IRREPN,IRREPX,11-ISPIN)-1)
         CALL XGEMM('N','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFW),NROW,
     &              R1(IOFFR),NSUM,ZILCH,ICORE(IOFFX),NROW)
230     CONTINUE
C
C WRITE TO DISK AS X(Bn,Ej)
C
        CALL TRANSP(ICORE(I000),ICORE(I010),NUMDSX,NREAD)
        CALL PUTLST(ICORE(I010),IFIRST,NREAD,1,IRREPR,LISTX)
        NLEFT =NLEFT-NREAD
        IFIRST=IFIRST+NREAD
        IF(NLEFT.NE.0)GOTO 3
        IF(ISPIN.EQ.2)THEN
         CALL GETLST(ICORE(I000),1,DISSYX,1,IRREPR,LISTX)
         CALL SYMTR1(IRREPR,POP(1,1),VRT(1,2),NUMDSX,ICORE(I000),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
         CALL PUTLST(ICORE(I000),1,DISSYX,1,IRREPR,LISTX)
        ENDIF
C
220    CONTINUE
C
210   CONTINUE
C
c      call aces_fin
c      stop
      RETURN
      END

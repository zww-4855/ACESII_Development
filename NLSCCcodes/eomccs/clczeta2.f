      SUBROUTINE CLCZETA2(SCR,MAXCOR,IUHF,ASMALL,ASQUARE,KMAX,NSIZEC,
     &                    ICUT,ITMAX)
C
C THIS ROUTINE SOLVES THE LINEAR EQUATION FOR THE ZETA AMPLITUDES
C NEEDED IN EOM-CC GRADIENTS:
C
C                        
C   <Q|exp(-T) H exp(T)|Q><Q|ZETA|0> = <Q|XI|0>
C
C USING A VARIANT OF PULAY'S DIIS APPROACH.
C
C LIST 1,470 - EXPANSION VECTORS, ONE VECTOR PER LOGICAL RECORD
C LIST 2,470 - RESIDUAL VECTORS, ONE VECTOR PER LOGICAL RECORD
C LIST 1,471 - B VECTOR
C LIST 1,88  - DIAGONAL PART OF Hd, STORED ON ONE LOGICAL RECORD
C
C HERE H IS PARTITIONED INTO [Hd + D] WHERE Hd IS A DIAGONAL
C PART OF H AND D IS THE REMAINDER OF THE MATRIX
C
C EQUATION TO BE SOLVED IS:
C
C         A * X = B 
C
C THE STRAIGHTFORWARD JACOBI METHOD IS USED AND THE RESIDUAL NORM
C OF BOTH THE ACTIVE ITERATIVE VECTOR AND THE DIIS EXTRAPOLANT IS
C MONITORED.  IF K REACHES KMAX, THE PROCESS IS RESTARTED USING THE
C MOST RECENT JACOBI OR DIIS ITERATIVE (WHICHEVER IS MORE ACCURATE)
C
CEND
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DIMENSION SCR(MAXCOR),ASMALL(KMAX*KMAX),ASQUARE(KMAX)
C
      COMMON/EXTINF/NDIMR,IOLDEST
C
      DATA ONEM /-1.0D0/
C
      INDXF(I,J,N)=I+(J-1)*N
C
      CUTOFF=10.0D0**(-ICUT)
      WRITE(6,999)
      WRITE(6,998)CUTOFF,KMAX,ITMAX
      WRITE(6,1000)
      WRITE(6,1001)
      WRITE(6,1000)
      WRITE(6,1002)
      WRITE(6,1000)
      WRITE(6,1004)
      WRITE(6,1000)
C
      I000=1
      I010=I000+MAX(NSIZEC,(KMAX+1)*(KMAX+2)+(KMAX+1)*(KMAX+1))
      I020=I010+MAX(NSIZEC,KMAX)
      I030=I020+NSIZEC
C
C PUT EVENTUAL SOLUTION VECTOR ON LIST 471
C
      CALL GETLST(SCR(I000),1,1,1,1,474)
      CALL PUTLST(SCR(I000),1,1,1,1,471)
C
C INITIATE CONSTRUCTION OF SOLUTION SPACE
C
      CALL ZERO(ASMALL,KMAX*KMAX)
C
C SCALE SOLUTION VECTOR WITH DIAGONAL ELEMENTS OF A => Ad-1 * B
C THIS IS THE INITIAL GUESS VECTOR
C
      CALL GETLST(SCR(I010),1,1,1,1,88)
      CALL VECDIV(SCR(I000),SCR(I010),SCR(I000),NSIZEC)
C
C PUT IT ON DISK
C
      CALL UPDATES(1,SCR(I000),444,0,490,IUHF)
      CALL PUTLST(SCR(I000),1,1,1,1,470)
C
C BUILD EXPANSION SPACE
C
      NITER=1
      NDIMR=1
      K=1
1     CONTINUE
C
C CALCULATE RESIDUAL VECTOR => RESID(k) = A*C(k)-B 
C
C EXPANSION VECTORS ARE ON 1,470
C RESIDUAL VECTORS ARE ON  2,470
C
      CALL HBARXC(SCR(I000),MAXCOR,IUHF,2,1)
      CALL FETCHVEC(1,SCR(I000),IUHF,2,490,460)
      CALL GETLST(SCR(I010),1,1,1,1,471)
      CALL SAXPY (NSIZEC,ONEM,SCR(I010),1,SCR(I000),1)
      ERRJACOB=SNRM2(NSIZEC,SCR(I000),1)
      EMAXJAC=ABS(SCR(ISAMAX(NSIZEC,SCR,1)))
      CALL PUTLST(SCR(I000),K,1,1,2,470)
C
C EVALUATE ERROR MATRIX IN BASIS OF EXISTING EXPANSION VECTORS
C
C      < RESID(i) | RESID(j)>
C
      DO 110 I=1,NDIMR
       DO 111 J=1,NDIMR
        CALL GETLST(SCR(I010),I,1,1,2,470)
        CALL GETLST(SCR(I000),J,1,1,2,470)
        ASMALL(INDXF(I,J,KMAX))=SDOT(NSIZEC,SCR(I010),1,SCR(I000),1)
111    CONTINUE
110   CONTINUE
C
C GENERATE DIIS EXTRAPOLANT AND CALCULATE ITS RESIDUAL
C
      CALL DODIIS(ASMALL,SCR(I000),SCR(I010),KMAX,NDIMR)
C
      CALL ZERO(SCR(I000),NSIZEC)
      IOFF=I010
      DO 210 I=1,NDIMR
       CALL GETLST(SCR(I020),I,1,1,2,470) 
       CALL SAXPY (NSIZEC,SCR(IOFF),SCR(I020),1,SCR(I000),1)
       IOFF=IOFF+1
210   CONTINUE
      ERRDIIS=SNRM2(NSIZEC,SCR,1)
      EMAXDIIS=ABS(SCR(ISAMAX(NSIZEC,SCR,1)))
      WRITE(6,1003)NITER,NDIMR,ERRJACOB,EMAXJAC,ERRDIIS,EMAXDIIS
C
C CHECK CONVERGENCE
C
      IF(MIN(EMAXDIIS,EMAXJAC).LT.CUTOFF)THEN
       WRITE(6,1010)
1010   FORMAT(T3,'@CLCZETA2-I, Zeta equations have converged.')
       IF(EMAXJAC.LT.EMAXDIIS)THEN
        WRITE(6,1011)
        CALL GETLST(SCR,K,1,1,1,470)
       ELSE
        WRITE(6,1012)
        CALL ZERO(SCR(I000),NSIZEC)
        IOFF=I010
        DO 211 I=1,NDIMR
         CALL GETLST(SCR(I020),I,1,1,1,470) 
         CALL SAXPY (NSIZEC,SCR(IOFF),SCR(I020),1,SCR(I000),1)
         IOFF=IOFF+1
211     CONTINUE
       ENDIF
       GOTO 99
      ENDIF
C
C GENERATE JACOBI ITERATE FOR FIRST ITERATION ONLY
C
      IF(NITER.EQ.1)THEN
       CALL GETLST(SCR(I010),1,1,1,1,88)
       CALL GETLST(SCR(I000),K,1,1,2,470)
       CALL VECDIV(SCR(I000),SCR(I010),SCR(I000),NSIZEC)
       CALL GETLST(SCR(I010),K,1,1,1,470)
       CALL SAXPY (NSIZEC,ONEM,SCR(I000),1,SCR(I010),1)
       CALL PUTLST(SCR(I010),K+1,1,1,1,470)
       CALL UPDATES(1,SCR(I010),444,0,490,IUHF)
      ELSE
C
C OTHERWISE EVALUATE DIIS APPROXIMANT AND ADD TO THE ASSOCIATED RESIDUAL
C VECTOR [WHICH IS ALREADY IN SCR(I000)]
C
       IOFF=I010
       CALL GETLST(SCR(I020),1,1,1,1,88)
       CALL VECDIV(SCR(I000),SCR(I020),SCR(I000),NSIZEC)
       CALL SSCAL (NSIZEC,-0.75D0,SCR(I000),1)
       DO 220 I=1,NDIMR
        CALL GETLST(SCR(I020),I,1,1,1,470) 
        CALL SAXPY (NSIZEC,SCR(IOFF),SCR(I020),1,SCR(I000),1)
        IOFF=IOFF+1
220    CONTINUE
       IF(K+1.LE.KMAX)THEN
        CALL PUTLST(SCR(I000),K+1,1,1,1,470)
       ELSE
        CALL PUTLST(SCR(I000),1,1,1,1,470)
       ENDIF
       CALL UPDATES(1,SCR(I000),444,0,490,IUHF)
      ENDIF  
C
      NITER=NITER+1
      IF(NITER.GT.ITMAX)THEN
       WRITE(6,1013)
       CALL ERREX
      ENDIF
      NDIMR=MIN(KMAX,NDIMR+1)
      K=K+1
      IF(K.GT.KMAX)K=1
      GOTO 1
C
C WRITE SOLUTION VECTOR TO DISK - OVERWRITES LAMBDA!
C
99    CONTINUE
      WRITE(6,1000)
      CALL VMINUS(SCR(I000),NSIZEC)
      CALL PUTLST(SCR(I000),1,1,1,1,474)
      CALL UPDATES(1,SCR(I000),144,0,190,IUHF)
      RETURN
999   FORMAT(T3,'@CLCZETA2-I, Using DIIS algorithm to solve ZETA ',
     &          'equations.')
998   FORMAT(/,T10,'Convergence criterion        : ',D10.5,'.',/,
     &       T10,'Maximum subspace dimension   : ',I10,'.',/,
     &       T10,'Maximum number of iterations : ',I10,'.'/)
1000  FORMAT(71('-'))
1001  FORMAT(T37,'R E S I D U A L')
1002  FORMAT(T12,'Subspace',T28,'Current',T56,'DIIS',/,
     &       T1,'Iteration',T12,'Dimension',T28,'Iterate',
     &       T53,'Extrapolant')
1004  FORMAT(T24,'RMS',T37,'Max',T52,'RMS',T65,'Max')
1003  FORMAT(T3,I4,T13,I4,T20,E13.7,T33,E13.7,T48,E13.7,
     &       T61,E13.7)
1013  FORMAT(T3,'@CLCZETA2-F, ZETA equations did not converge.')
1012  FORMAT(T3,'Most recent DIIS extrapolant used as solution ',
     &          'vector.')
1011  FORMAT(T3,'Selecting most recent Jacobi iterate as solution ',
     &          'vector.')
      END

      SUBROUTINE R1L1Y2A(R1,L1,ICORE,MAXCOR,IUHF)
C
C Y2A(ab,ij) = P(ab)P(ij) [L(ai) * R(em)*W(eb,mj)]
C
C NOTE THAT ONLY THE IRREPX DISTRIBUTIONS OF (ai), (em) AND
C (bj) CAN CONTRIBUTE HERE
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM,ZILCH,TWO,R1,L1
      CHARACTER*4 SPCASE(2)
      DIMENSION ICORE(MAXCOR),R1(*),L1(*)
      COMMON/STATSYM/IRREPX
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C
      DATA SPCASE /'AAAA','BBBB'/
      DATA ONE,ONEM,TWO,ZILCH/1.0D0,-1.0D0,2.0D0,0.0D0/
C
      IF(IUHF.EQ.0)THEN
C
C SPIN ADAPTED RHF CODE.
C
C  Q(Ab,Ij) = R(EM)*[2*W(Eb,Mj)-W(Eb,Jm)]*L(AI)
C  Y2(Ab,Ij) = Q(Ab,ij) + Q(Ba,Ji)    
C
C FIRST FORM 2*W(Eb,Mj) - W(Eb,Jm) AND STORE IN A W(EM,bj) MATRIX
C
       LISTW1=18
       LISTW2=21
       LISTY =63
       DISSYW=IRPDPD(IRREPX,ISYTYP(1,LISTW1))
       NUMDSW=IRPDPD(IRREPX,ISYTYP(2,LISTW1))
       I000=1
       I010=I000+IINTFP*DISSYW*NUMDSW
       I020=I010+IINTFP*DISSYW*NUMDSW
       IF(I020.GE.MAXCOR) CALL INSMEM('R1L1Y2A1',I020,MAXCOR)
       CALL GETLST(ICORE(I000),1,NUMDSW,1,IRREPX,LISTW1)
       CALL GETLST(ICORE(I010),1,NUMDSW,1,IRREPX,LISTW2)
       CALL SSCAL (NUMDSW*DISSYW,TWO,ICORE(I000),1)
       CALL SAXPY (NUMDSW*DISSYW,ONEM,ICORE(I010),1,ICORE(I000),1)
C
C CALCULATE R(EM)*W(EM,bj)=Q(bj)
C
       CALL XGEMM('N','N',1,NUMDSW,DISSYW,ONE,R1,
     &            1,ICORE(I000),DISSYW,ZILCH,ICORE(I010),1)
C
C CALCULATE Z(AI,bj) = L(AI)*Q(bj)
C
       CALL XGEMM('N','N',NUMDSW,NUMDSW,1,ONE,L1,
     &            NUMDSW,ICORE(I010),1,ZILCH,ICORE(I000),NUMDSW)
C
C SYMMETRIZE
C
       CALL MPMT(ICORE(I000),NUMDSW)
C
C NOW RESORT THIS TO THE Z(Ab,Ij) ORDERING AND AUGMENT LIST.
C
       ISIZE=ISYMSZ(ISYTYP(1,LISTW1),ISYTYP(2,LISTW1))
       I020=I010+IINTFP*ISIZE
       I030=I020+IINTFP*ISIZE
       IEND=I030
       DO 9 IRREP=1,NIRREP
        IEND=MAX(IEND,I030+IRPDPD(IRREP,ISYTYP(1,LISTW1)))
9      CONTINUE
       IF(IEND.GE.MAXCOR) CALL INSMEM('R1L1Y2A2',IEND,MAXCOR)
       IOFF=I010
       DO 10 IRREP=1,NIRREP
        DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTW1))
        NUMDSZ=IRPDPD(IRREP,ISYTYP(2,LISTW1))
        IF(IRREP.EQ.IRREPX)THEN
         CALL SCOPY(DISSYZ*NUMDSZ,ICORE(I000),1,ICORE(IOFF),1)
        ELSE
         CALL ZERO (ICORE(IOFF),DISSYZ*NUMDSZ)
        ENDIF
        IOFF=IOFF+IINTFP*DISSYZ*NUMDSZ
10     CONTINUE
       CALL SSTGEN(ICORE(I010),ICORE(I020),ISIZE,VRT(1,1),POP(1,1),
     &             VRT(1,1),POP(1,1),ICORE(I030),1,'1324')
       CALL GETALL(ICORE(I000),ISIZE,1,LISTY)
       CALL SAXPY (ISIZE,ONE,ICORE(I020),1,ICORE(I000),1)
       CALL PUTALL(ICORE(I000),ISIZE,1,LISTY)
C
      ELSE
C
C UHF CODE, FIRST THE AAAA AND BBBB SPIN CASES
C
C  Q(AB,IJ) = R(EM) * W(EB,MJ) * L(AI) + R(em) * W(eB,mJ) * L(AI)
C
C  Y2(AB,IJ) = Q(AB,IJ) + Q(BA,JI) - Q(BA,IJ) - Q(AB,JI)
C
       DO 100 ISPIN=1,2
C
        LISTW1=18+ISPIN
        LISTW2=16+ISPIN
        LISTY=60+ISPIN
        DISSYW1=IRPDPD(IRREPX,ISYTYP(1,LISTW1))
        NUMDSW1=IRPDPD(IRREPX,ISYTYP(2,LISTW1))
        DISSYW2=IRPDPD(IRREPX,ISYTYP(1,LISTW2))
        NUMDSW2=IRPDPD(IRREPX,ISYTYP(2,LISTW2))
C      
        IOFFA=1+(ISPIN-1)*IRPDPD(IRREPX,9)
        IOFFB=1+(2-ISPIN)*IRPDPD(IRREPX,9)
C
        I000=1
        I010=I000+IINTFP*MAX(NUMDSW1*DISSYW1,NUMDSW2*DISSYW2)
        IEND=I010+IINTFP*MAX(IRPDPD(IRREPX,9),IRPDPD(IRREPX,10))
        IF(IEND.GE.MAXCOR) CALL INSMEM('R1L1Y2A3',IEND,MAXCOR)
C
C CALCULATE R(EM)*W(EM,BJ) = Q(BJ)
C
        CALL GETLST(ICORE(I000),1,NUMDSW1,1,IRREPX,LISTW1)
C
        CALL XGEMM('N','N',1,NUMDSW1,DISSYW1,ONE,R1(IOFFA),1,
     &             ICORE(I000),DISSYW1,ZILCH,ICORE(I010),1)
C
C CALCULATE R(em)*W(em,BJ) => Q(BJ)
C
        CALL GETLST(ICORE(I000),1,NUMDSW2,1,IRREPX,LISTW2)
C
        CALL XGEMM('N','N',1,NUMDSW2,DISSYW2,ONE,R1(IOFFB),1,
     &             ICORE(I000),DISSYW2,ONE,ICORE(I010),1)
C
C CALCULATE Z(AI,BJ) = L(AI)* Q(BJ)
C
        CALL XGEMM('N','N',NUMDSW1,NUMDSW1,1,ONE,L1(IOFFA),NUMDSW1,
     &             ICORE(I010),1,ZILCH,ICORE(I000),NUMDSW1)
C
C ANTISYMMETRIZE AND RESORT Z(AI,BJ) TO GIVE Y2(AB,IJ)
C
C
        ISIZE1=ISYMSZ(ISYTYP(1,LISTW1),ISYTYP(2,LISTW1))
        ISIZE2=ISYMSZ(ISYTYP(1,LISTY),ISYTYP(2,LISTY))
        I020=I010+IINTFP*ISIZE1
        I030=I020+IINTFP*ISIZE1
        IEND=I030
        DO 109 IRREP=1,NIRREP
         IEND=MAX(IEND,I030+IRPDPD(IRREP,ISYTYP(1,LISTW1)))
109     CONTINUE
        IF(IEND.GE.MAXCOR) CALL INSMEM('R1L1Y2A4',IEND,MAXCOR)
        IOFF=I010
        DO 110 IRREP=1,NIRREP
         DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTW1))
         NUMDSZ=IRPDPD(IRREP,ISYTYP(2,LISTW1))
         IF(IRREP.EQ.IRREPX)THEN
          CALL SCOPY(DISSYZ*NUMDSZ,ICORE(I000),1,ICORE(IOFF),1)
         ELSE
          CALL ZERO (ICORE(IOFF),DISSYZ*NUMDSZ)
         ENDIF
         IOFF=IOFF+IINTFP*DISSYZ*NUMDSZ
110     CONTINUE
        CALL SST03I(ICORE(I010),ICORE(I020),ISIZE1,ISIZE2,
     &              ICORE(I030),SPCASE(ISPIN))
        CALL GETALL(ICORE(I000),ISIZE2,1,LISTY)
        CALL SAXPY (ISIZE2,ONE,ICORE(I020),1,ICORE(I000),1)
        CALL PUTALL(ICORE(I000),ISIZE2,1,LISTY)
C
100    CONTINUE
C
C SPIN CASE ABAB
C
C  Q(Ab,Ij) = R(EM) * W(Eb,Mj) * L(AI) + R(em) * W(eb,mj) * L(AI)
C
C  Q(aB,iJ) = R(EM) * W(EB,MJ) * L(ai) + R(em) * W(eB,mJ) * L(ai)
C
C  Y2(Ab,Ij) = Q(Ab,Ij) + Q(bA,jI) 
C
       LISTW1=18
       LISTW2=20
       LISTW3=19
       LISTW4=17
       LISTY=63
       DISSYW1=IRPDPD(IRREPX,ISYTYP(1,LISTW1))
       NUMDSW1=IRPDPD(IRREPX,ISYTYP(2,LISTW1))
       DISSYW2=IRPDPD(IRREPX,ISYTYP(1,LISTW2))
       NUMDSW2=IRPDPD(IRREPX,ISYTYP(2,LISTW2))
       DISSYW3=IRPDPD(IRREPX,ISYTYP(1,LISTW3))
       NUMDSW3=IRPDPD(IRREPX,ISYTYP(2,LISTW3))
       DISSYW4=IRPDPD(IRREPX,ISYTYP(1,LISTW4))
       NUMDSW4=IRPDPD(IRREPX,ISYTYP(2,LISTW4))
C      
       IOFFA=1
       IOFFB=1+IRPDPD(IRREPX,9)
       IOFF=IRPDPD(IRREPX,9)*IINTFP
C
       I000=1
       I010=I000+IINTFP*MAX(NUMDSW1*DISSYW1,NUMDSW2*DISSYW2,
     &                      NUMDSW3*DISSYW3,NUMDSW4*DISSYW4)
       IEND=I010+IINTFP*(IRPDPD(IRREPX,9)+IRPDPD(IRREPX,10)) 
       IF(IEND.GE.MAXCOR) CALL INSMEM('R1L1Y2A5',IEND,MAXCOR)
C
C CALCULATE R(EM)*W(EM,bj) = Q(bj)
C
       CALL GETLST(ICORE(I000),1,NUMDSW1,1,IRREPX,LISTW1)
C
       CALL XGEMM('N','N',1,NUMDSW1,DISSYW1,ONE,R1(IOFFA),1,
     &            ICORE(I000),DISSYW1,ZILCH,ICORE(I010+IOFF),1)
C
C CALCULATE R(em)*W(em,bj) => Q(bj)
C
       CALL GETLST(ICORE(I000),1,NUMDSW2,1,IRREPX,LISTW2)
C
       CALL XGEMM('N','N',1,NUMDSW2,DISSYW2,ONE,R1(IOFFB),1,
     &            ICORE(I000),DISSYW2,ONE,ICORE(I010+IOFF),1)
C
C CALCULATE R(EM)*W(EM,BJ) = Q(BJ)
C
       CALL GETLST(ICORE(I000),1,NUMDSW3,1,IRREPX,LISTW3)
C
       CALL XGEMM('N','N',1,NUMDSW3,DISSYW3,ONE,R1(IOFFA),1,
     &            ICORE(I000),DISSYW3,ZILCH,ICORE(I010),1)
C
C CALCULATE R(em)*W(em,BJ) => Q(BJ)
C
       CALL GETLST(ICORE(I000),1,NUMDSW4,1,IRREPX,LISTW4)
C
       CALL XGEMM('N','N',1,NUMDSW4,DISSYW4,ONE,R1(IOFFB),1,
     &            ICORE(I000),DISSYW4,ONE,ICORE(I010),1)
C
C CALCULATE Z(AI,bj) = L(AI)* Q(bj)
C
       CALL XGEMM('N','N',NUMDSW3,NUMDSW2,1,ONE,L1(IOFFA),NUMDSW3,
     &            ICORE(I010+IOFF),1,ZILCH,ICORE(I000),NUMDSW3)
C
C CALCULATE Z(AI,bj) <= Q(AI)* L(bj)
C
       CALL XGEMM('N','N',NUMDSW3,NUMDSW2,1,ONE,ICORE(I010),
     &            NUMDSW3,L1(IOFFB),1,ONE,ICORE(I000),NUMDSW3)
C
C NOW RESORT THIS TO THE Z(Ab,Ij) ORDERING AND AUGMENT LIST.
C
       ISIZE=ISYMSZ(ISYTYP(1,LISTW1),ISYTYP(2,LISTW1))
       I020=I010+IINTFP*ISIZE
       I030=I020+IINTFP*ISIZE
       IEND=I030
       DO 209 IRREP=1,NIRREP
        IEND=MAX(IEND,I030+IRPDPD(IRREP,ISYTYP(1,LISTW1)))
209    CONTINUE
       IF(IEND.GE.MAXCOR) CALL INSMEM('R1L1Y2A6',IEND,MAXCOR)
       IOFF=I010
       DO 210 IRREP=1,NIRREP
        DISSYZ=IRPDPD(IRREP,ISYTYP(1,LISTW1))
        NUMDSZ=IRPDPD(IRREP,ISYTYP(2,LISTW1))
        IF(IRREP.EQ.IRREPX)THEN
         CALL SCOPY(DISSYZ*NUMDSZ,ICORE(I000),1,ICORE(IOFF),1)
        ELSE
         CALL ZERO (ICORE(IOFF),DISSYZ*NUMDSZ)
        ENDIF
        IOFF=IOFF+IINTFP*DISSYZ*NUMDSZ
210    CONTINUE
       CALL SSTGEN(ICORE(I010),ICORE(I020),ISIZE,VRT(1,1),POP(1,1),
     &             VRT(1,2),POP(1,2),ICORE(I030),1,'1324')
       CALL GETALL(ICORE(I000),ISIZE,1,LISTY)
       CALL SAXPY (ISIZE,ONE,ICORE(I020),1,ICORE(I000),1)
       CALL PUTALL(ICORE(I000),ISIZE,1,LISTY)
C
      ENDIF
C
      RETURN
      END

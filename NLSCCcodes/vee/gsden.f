      SUBROUTINE GSDEN(DENOO,DENVV,DENVO,DENOV,
     &                 LSTL1OFF,LISTL1,LSTT1OFF,LISTT1,LISTL2,LISTT2,
     &                 LZERO,ICORE,MAXCOR,IUHF)
C
C THIS ROUTINE CALCULATES ELEMENTS OF THE REDUCED DENSITY
C MATRIX
C
C  D(pq) = <0|Z exp(-T) p q exp(T)|0> 
C
C WHERE Z IS AN ARBITRARY TOTALLY SYMMETRIC OPERATOR.  IN 
C THE CASE THAT Z=LAMBDA, THIS GIVES THE USUAL CC DENSITY
C MATRIX, BUT OTHER CHOICES OF Z ARE REQUIRED IN, E.G. EOM-CC
C UNRELAXED GRADIENTS.
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION DENOO,DENVO,DENOV,DENVV
      DOUBLE PRECISION ONE,ONEM,ZILCH,TWO,LZERO
      DIMENSION DENOO(*),DENVO(*),DENVV(*),DENOV(*),ICORE(MAXCOR)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
C
      DATA ONE,ONEM,ZILCH,TWO /1.0D0,-1.0D0,0.0D0,2.0D0/
C
C ALLOCATE MEMORY FOR DENSITY MATRICES AND INTERMEDIATE
C QUANTITITES USED IN THIS ROUTINE
C
      LENOO=NFMI(1)+(1+IUHF)*NFMI(2)
      LENVV=NFEA(1)+(1+IUHF)*NFEA(2)
      IZOO=1
      IZVV=IZOO+LENOO*IINTFP
      I000=IZVV+LENVV*IINTFP
      MXCOR=MAXCOR-I000+1
C
      CALL GFORMG(1,1,LISTL2,LISTT2,0,ICORE(I000),MXCOR,
     &            2,ONEM,ONEM,IUHF)
C
C INITIALIZE DVO AND DOV WITH T1 AND L1 AND PUT T2*L2 PARTS INTO
C   DIJ AND DAB
C
      DO 10 ISPIN=1,1+IUHF
       IOFFOO=(ISPIN-1)*NFMI(1)
       IOFFVV=(ISPIN-1)*NFEA(1)
       IOFFVO=(ISPIN-1)*NT(1)
       CALL GETLST(DENVO(1+IOFFVO),1,1,1,ISPIN+LSTT1OFF,LISTT1)
       CALL GETLST(DENOV(1+IOFFVO),1,1,1,ISPIN+LSTL1OFF,LISTL1)
       CALL GETLST(DENOO(1+IOFFOO),1,1,1,ISPIN+2,91)
       CALL GETLST(DENVV(1+IOFFVV),1,1,1,ISPIN+2,92)
C
C CALCULATE INTERMEDIATES
C
C  Z(ij) = T(EI)*L(EJ)   ;  Z(AB) = T(AM)*L(BM)
C
       IOFFT=1+IOFFVO
       IOFFL=1+IOFFVO
       IOFFZOO=IZOO+IOFFOO*IINTFP
       IOFFZVV=IZVV+IOFFVV*IINTFP
       DO 15 IRREPJ=1,NIRREP
        NOCC=POP(IRREPJ,ISPIN)
        NVRT=VRT(IRREPJ,ISPIN)
        CALL XGEMM('T','N',NOCC,NOCC,NVRT,ONE,DENVO(IOFFT),NVRT,
     &             DENOV(IOFFL),NVRT,ZILCH,ICORE(IOFFZOO),NOCC)
        CALL XGEMM('N','T',NVRT,NVRT,NOCC,ONE,DENVO(IOFFT),NVRT,
     &             DENOV(IOFFL),NVRT,ZILCH,ICORE(IOFFZVV),NVRT)
        IOFFT=IOFFT+NVRT*NOCC
        IOFFL=IOFFL+NVRT*NOCC
        IOFFZOO=IOFFZOO+NOCC*NOCC*IINTFP
        IOFFZVV=IOFFZVV+NVRT*NVRT*IINTFP
15     CONTINUE
C
C FORM COMPLETE OCC-OCC DENSITY
C
       CALL SAXPY(NFMI(ISPIN),ONEM,ICORE(IZOO+IOFFOO*IINTFP),1,
     &            DENOO(1+IOFFOO),1)
C
C CALCULATE CONTRIBUTIONS TO VRT-OCC DENSITY COMING FROM Z 
C AND T2*L2 TERMS
C
       IOFFT=1+IOFFVO
       IOFFL=1+IOFFVO
       IOFFDOO=1+IOFFOO
       IOFFDVV=1+IOFFVV
       IOFFDVO=1+IOFFVO
       CALL SCOPY(NT(ISPIN),DENVO(IOFFDVO),1,ICORE(I000),1)
       CALL SSCAL (NT(ISPIN),LZERO,DENVO(IOFFDVO),1)
       IOFFT1=I000
       DO 20 IRREPI=1,NIRREP
        NOCC=POP(IRREPI,ISPIN)
        NVRT=VRT(IRREPI,ISPIN)
        CALL XGEMM('N','T',NVRT,NOCC,NOCC,ONE,ICORE(IOFFT1),NVRT,
     &             DENOO(IOFFDOO),NOCC,ONE,DENVO(IOFFDVO),NVRT)
        CALL XGEMM('N','N',NVRT,NOCC,NVRT,ONEM,DENVV(IOFFDVV),NVRT,
     &             ICORE(IOFFT1),NVRT,ONE,DENVO(IOFFDVO),NVRT)
        IOFFT1=IOFFT1+NOCC*NVRT*IINTFP
        IOFFDVO=IOFFDVO+NOCC*NVRT
        IOFFDOO=IOFFDOO+NOCC*NOCC
        IOFFDVV=IOFFDVV+NVRT*NVRT
20     CONTINUE
C
C FORM COMPLETE VRT-VRT DENSITY
C
       CALL SAXPY(NFEA(ISPIN),ONE,ICORE(IZVV+IOFFVV*IINTFP),1,
     &            DENVV(1+IOFFVV),1)
C
10    CONTINUE
C
C NOW CALCULATE T(AE,IM)*L(EM) CONTRIBUTION TO DAI
C
C   T(AI,EM)*L(EM) + T(AI,em)*L(em)  [ISPIN=1]
C
C   T(ai,em)*L(em) + T(ai,EM)*L(EM)  [ISPIN=2]
C
C  2T(Ae,Im)-T(Ea,Im) * L(AI)        [SPIN-ADAPTED RHF]
C
      DO 11 ISPIN=1,1+IUHF
       IOFFOO=(ISPIN-1)*NFMI(1)
       IOFFVV=(ISPIN-1)*NFEA(1)
       IOFFVO=(ISPIN-1)*NT(1)
       IF(IUHF.EQ.0)THEN
        LISTT=37
        DISSYT=IRPDPD(1,ISYTYP(1,LISTT))
        NUMDST=IRPDPD(1,ISYTYP(2,LISTT))
        I010=I000+DISSYT*NUMDST*IINTFP
        I020=I010+DISSYT*NUMDST*IINTFP
        CALL GETLST(ICORE(I000),1,NUMDST,1,1,37)
        CALL GETLST(ICORE(I010),1,NUMDST,1,1,39)
        CALL SSCAL (DISSYT*NUMDST,TWO,ICORE(I000),1)
        CALL SAXPY (DISSYT*NUMDST,ONEM,ICORE(I010),1,ICORE(I000),1)
        CALL XGEMM ('N','N',DISSYT,1,NUMDST,ONE,ICORE(I000),
     &              DISSYT,DENOV(1+IOFFVO),NUMDST,ONE,DENVO(1+IOFFVO),
     &              DISSYT)
       ELSE
        LISTAA=33+ISPIN
        LISTAB=38-ISPIN
        DISSYT=IRPDPD(1,ISYTYP(1,LISTAA))
        NUMDST=IRPDPD(1,ISYTYP(2,LISTAA))
        CALL GETLST(ICORE(I000),1,NUMDST,1,1,LISTAA)
        CALL XGEMM('N','N',DISSYT,1,NUMDST,ONEM,ICORE(I000),
     &             DISSYT,DENOV(1+IOFFVO),NUMDST,ONE,DENVO(1+IOFFVO),
     &             DISSYT)
        DISSYT=IRPDPD(1,ISYTYP(1,LISTAB))
        NUMDST=IRPDPD(1,ISYTYP(2,LISTAB))
        CALL GETLST(ICORE(I000),1,NUMDST,1,1,LISTAB)
        CALL XGEMM('N','N',DISSYT,1,NUMDST,ONE,ICORE(I000),
     &             DISSYT,DENOV(1+(2-ISPIN)*NT(1)),NUMDST,ONE,
     &             DENVO(1+IOFFVO),DISSYT)
       ENDIF
C
11    CONTINUE
C
      RETURN
      END

      SUBROUTINE E_T1T32N(D1T1AA,D1T1BB,S1A,S1B,
     1                    T3,W,
     1                    VJKAB,VIKAB,VIJAA,
     1                    IADT3,IADW,
     1                    IRPI,IRPJ,IRPK,IRPIJ,IRPIK,IRPJK,
     1                    I,J,K,ISPIN1,ISPIN2,
     1                    NONHF,IRREPX)
      IMPLICIT INTEGER (A-Z)
      LOGICAL NONHF
      LOGICAL TRIPNI,TRIPNI1,TRIPIT,T3STOR
      DOUBLE PRECISION D1T1AA(1),D1T1BB(1),S1A(1),S1B(1)
      DOUBLE PRECISION T3(1),W(1)
      DOUBLE PRECISION VJKAB(1),VIKAB(1),VIJAA(1)
      DIMENSION IADT3(8),IADW(8)
      DIMENSION IOFFT1(8),LENT1(8)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPA(255),IRREPB(255),
     1                DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYM/    POP(8,2),VRT(8,2),NTAA,NTBB,NF1AA,NF2AA,
     1                NF1BB,NF2BB
      COMMON /TRIPLES/ TRIPNI,TRIPNI1,TRIPIT,T3STOR
C
      COMMON /T3OFF/  IOFFVV(8,8,10),IOFFOO(8,8,10),IOFFVO(8,8,4)
C
      INDEX(I) = I*(I-1)/2
C
C     ROUTINE TO COMPUTE INCLUSION OF T3 AAB IN T1 A OR T1 B.
C
C     IRPI, IRPJ ARE SYMMETRY BLOCKS OF T1 A.
C        I,    J ARE VALUES OF SPECIFIC ELEMENTS.
C
C     GET INTEGRALS
C
      IF(ISPIN1.EQ.1)THEN
      IK = (K-1) * POP(IRPI,1) + I
      JK = (K-1) * POP(IRPJ,1) + J
      CALL GETLST(VJKAB,IOFFOO(IRPK,IRPJK,5) + JK,1,2,IRPJK,16)
      CALL GETLST(VIKAB,IOFFOO(IRPK,IRPIK,5) + IK,1,2,IRPIK,16)
      ELSE
      IK = (I-1) * POP(IRPK,1) + K
      JK = (J-1) * POP(IRPK,1) + K
      CALL GETLST(VJKAB,IOFFOO(IRPJ,IRPJK,5) + JK,1,2,IRPJK,16)
      CALL GETLST(VIKAB,IOFFOO(IRPI,IRPIK,5) + IK,1,2,IRPIK,16)
      ENDIF
C
C     COMPUTE T1 OFFSETS (ALPHA)
C
      DO  30 IRREP=1,NIRREP
      LENT1(IRREP) = POP(IRREP,ISPIN1) * 
     1               VRT(DIRPRD(IRREPX,IRREP),ISPIN1)
      IF(IRREP.EQ.1)THEN
      IOFFT1(IRREP) = 0
      ELSE
      IOFFT1(IRREP) = IOFFT1(IRREP-1) + LENT1(IRREP-1)
      ENDIF
   30 CONTINUE
C
C     NOW ATTEMPT TO DO THE CONTRACTIONS
C
C      A
C     T
C      I
C
      IRPA  =             DIRPRD(IRREPX,IRPI)
      IRPBC =             IRPJK
C
      CALL VECMAT(VJKAB,W(IADW(IRPA)),
     1            D1T1AA(IOFFT1(IRPI) + (I-1)*VRT(IRPA,ISPIN1) + 1),
     1            IRPDPD(IRPBC,13),VRT(IRPA,ISPIN1),0,0)
C
C      A
C     T
C      J
C
      IRPA  =             DIRPRD(IRREPX,IRPJ)
      IRPBC =             IRPIK
C
      CALL VECMAT(VIKAB,W(IADW(IRPA)),
     1            D1T1AA(IOFFT1(IRPJ) + (J-1)*VRT(IRPA,ISPIN1) + 1),
     1            IRPDPD(IRPBC,13),VRT(IRPA,ISPIN1),0,1)
C
C     CK  ABC IJK  AB IJ
C     BB  AAB AAB  AA AA
C
      IF(IRPI.EQ.IRPJ)THEN
      IJ = IOFFOO(IRPJ,IRPIJ,ISPIN1) + INDEX(J-1) + I
      ELSE
      IJ = IOFFOO(IRPJ,IRPIJ,ISPIN1) + (J-1)*POP(IRPI,ISPIN1) + I
      ENDIF
C
      CALL GETLST(VIJAA,IJ,1,2,IRPIJ,13+ISPIN1)
C
      DO   90 IRREP=1,NIRREP
      LENT1(IRREP) = POP(IRREP,ISPIN2) * 
     1               VRT(DIRPRD(IRREPX,IRREP),ISPIN2)
      IF(IRREP.EQ.1)THEN
      IOFFT1(IRREP) = 0
      ELSE
      IOFFT1(IRREP) = IOFFT1(IRREP-1) + LENT1(IRREP-1)
      ENDIF
   90 CONTINUE
C
      IRPC  = DIRPRD(IRREPX,IRPK)
      IRPAB = IRPIJ
c     IRPAB = DIRPRD(IRPC,IRPIJK)
C      DO  110    C=1,VRT(IRPC,ISPIN2)
C      DO  100   AB=1,IRPDPD(IRPAB,ISPIN1)
CC
C       D1T1BB(IOFFT1(IRPC) + (K-1)*VRT(IRPC,ISPIN2) + C) =
C     1 D1T1BB(IOFFT1(IRPC) + (K-1)*VRT(IRPC,ISPIN2) + C) +
C     1 VIJAA(AB) * T3(IADT3(IRPC) + (C-1)*IRPDPD(IRPAB,ISPIN1) - 1 + AB)
C  100 CONTINUE
C  110 CONTINUE
C
      CALL VECMAT(VIJAA,T3(IADT3(IRPC)),
     1            D1T1BB(IOFFT1(IRPK)+(K-1)*VRT(IRPC,ISPIN2) + 1),
     1            IRPDPD(IRPAB,ISPIN1),VRT(IRPC,ISPIN2),0,0)
C
      IF(.NOT.NONHF.OR..NOT.TRIPNI1) RETURN
C
C     GET AMPLITUDES.
C
      IF(ISPIN1.EQ.1)THEN
      CALL GETLST(VJKAB,IOFFOO(IRPK,IRPJK,5) + JK,1,2,IRPJK,46)
      CALL GETLST(VIKAB,IOFFOO(IRPK,IRPIK,5) + IK,1,2,IRPIK,46)
      ELSE
      CALL GETLST(VJKAB,IOFFOO(IRPJ,IRPJK,5) + JK,1,2,IRPJK,46)
      CALL GETLST(VIKAB,IOFFOO(IRPI,IRPIK,5) + IK,1,2,IRPIK,46)
      ENDIF
C
C     COMPUTE S1 OFFSETS (ALPHA)
C
      DO 130 IRREP=1,NIRREP
      LENT1(IRREP) = POP(IRREP,ISPIN1) * VRT(IRREP,ISPIN1)
      IF(IRREP.EQ.1)THEN
      IOFFT1(IRREP) = 0
      ELSE
      IOFFT1(IRREP) = IOFFT1(IRREP-1) + LENT1(IRREP-1)
      ENDIF
  130 CONTINUE
C
C      A
C     S
C      I
C
      IRPA  =             IRPI
      IRPBC =             IRPJK
C
      CALL VECMAT(VJKAB,W(IADW(IRPA)),
     1            S1A(IOFFT1(IRPA) + (I-1)*VRT(IRPA,ISPIN1) + 1),
     1            IRPDPD(IRPBC,13),VRT(IRPA,ISPIN1),0,0)
C
C      A
C     S
C      J
C
      IRPA  =             IRPJ
      IRPBC =             IRPIK
C
      CALL VECMAT(VIKAB,W(IADW(IRPA)),
     1            S1A(IOFFT1(IRPA) + (J-1)*VRT(IRPA,ISPIN1) + 1),
     1            IRPDPD(IRPBC,13),VRT(IRPA,ISPIN1),0,1)
C
C     CK  ABC IJK  AB IJ
C     BB  AAB AAB  AA AA
C
      CALL GETLST(VIJAA,IJ,1,2,IRPIJ,43 + ISPIN1)
C
      DO  190 IRREP=1,NIRREP
      LENT1(IRREP) = POP(IRREP,ISPIN2) * VRT(IRREP,ISPIN2)
      IF(IRREP.EQ.1)THEN
      IOFFT1(IRREP) = 0
      ELSE
      IOFFT1(IRREP) = IOFFT1(IRREP-1) + LENT1(IRREP-1)
      ENDIF
  190 CONTINUE
C
      IRPC  = IRPK
      IRPAB = IRPIJ
C     IRPAB = DIRPRD(IRPC,IRPIJK)
C
      CALL VECMAT(VIJAA,T3(IADT3(IRPC)),
     1            S1B(IOFFT1(IRPC)+(K-1)*VRT(IRPC,ISPIN2) + 1),
     1            IRPDPD(IRPAB,ISPIN1),VRT(IRPC,ISPIN2),0,0)
C
      RETURN
      END

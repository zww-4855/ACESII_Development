










      SUBROUTINE C2INC1A(ICORE,MAXCOR,IUHF,IRREPX,LISTW0,LISTT0,
     &                   LISTT1,IMULT)
C
C THIS SUBROUTINE CALCULATES THE CONTRIBUTION OF R2 TO
C   R1 (T1<-T2).  THIS CODE IS GENERAL IN THE SENSE THAT
C   IT DOES NOT ASSUME THAT T (AND Z) ARE TOTALLY SYMMETRIC
C   QUANTITIES, BUT RATHER TRANSFORM AS IRREPX.
C
C OUT-OF-CORE SOLUTION IS AVAILABLE IN CASES WHERE AN ENTIRE
C SYMMETRY BLOCK OF W CAN NOT BE HELD IN CORE.
C
C CONTRACTION 1:
C
C     Z(A,I) = SUM  R(EF,IM) * <AM||EF> + R(Ef,Im) * <Am|Ef>  [AA]
C              mef
C
C     Z(a,i) = SUM  R(ef,im) * <am||ef> + R(eF,iM) * <aM|eF>  [BB]
C              mef
C
C     Z(A,I) = SUM  [2 R(Ef,Im) - R(Fe,IM)] <Am|Ef> [SPIN ADAPTED RHF] 
C              mef
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM
      LOGICAL RHF
C
      DIMENSION ICORE(MAXCOR)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /SYMLOC/ ISYMOFF(8,8,25)
C
      DATA ONE  /1.0D0/
      DATA ONEM/-1.0D0/


      RHF=.FALSE.
      IF(IUHF.EQ.0)RHF=.TRUE.
C
C LOOP OVER SPIN CASES 
C
      DO 50 ISPIN=1,1+IUHF
       LENTAR=IRPDPD(IRREPX,8+ISPIN)
       I000=1
       I010=I000+LENTAR*IINTFP
       CALL ZERO(ICORE(I000),LENTAR)
C
C LOOP OVER IRREPS OF RHS OF T VECTOR
C
       DO 100 IRREPTR=1,NIRREP
        IRREPTL=DIRPRD(IRREPTR,IRREPX)
        IRREPW=IRREPTL
        LISTW=LISTW0+4-ISPIN
        LISTT=LISTT0+2
        DISSYW=IRPDPD(IRREPW,ISYTYP(1,LISTW)) 
        NUMDSW=IRPDPD(IRREPW,ISYTYP(2,LISTW)) 
        DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTT))
        NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTT))
        MAXBUF=MAX(NUMDSW,DISSYW,DISSYT,NUMDST)
        I020=I010+IINTFP*DISSYT*NUMDST
C
C READ C2 VECTOR INTO 
C
C           C(Ef,Im) AND TRANSPOSE TO C(Efm,I)           [ISPIN=1]
C
C           C(FeM,i)                                     [ISPIN=2]
C
        CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
        ITTR=14
        IF(ISPIN.EQ.1)THEN
         ITMP1=I020
         ITMP2=ITMP1+IINTFP*MAXBUF
         ITMP3=ITMP2+IINTFP*MAXBUF
         ITMP4=ITMP3+IINTFP*MAXBUF
         CALL SYMTR1(IRREPTR,POP(1,1),POP(1,2),DISSYT,ICORE(I010),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
         ITTR=24
C
C SPIN ADAPT FOR RHF
C
         IF(RHF)THEN
          CALL SPINAD3(IRREPTL,VRT(1,1),DISSYT,NUMDST,
     &                 ICORE(I010),ICORE(ITMP1),ICORE(ITMP2))
         ENDIF 
        ENDIF
C
C CHOOSE IN-CORE OR OUT-OF-CORE ALGORITHM FOR W
C
        I030=I020+IINTFP*DISSYW*NUMDSW
        I040=I030+IINTFP*3*MAXBUF
C
        IF(I040.LT.MAXCOR)THEN
C
C IN-CORE
C
C READ W INTO 
C
C        W(Ef,Am) AND TRANSPOSE KET INDICES TO W(Efm,A)   [ISPIN=1]
C        W(Fe,Ma)                                         [ISPIN=2]
C
         CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPW,LISTW)
         ITWR=18
         IF(ISPIN.EQ.1)THEN
          ITMP1=I030
          ITMP2=ITMP1+IINTFP*MAXBUF
          ITMP3=ITMP2+IINTFP*MAXBUF
          ITMP4=ITMP3+IINTFP*MAXBUF
          CALL SYMTR1(IRREPW,VRT(1,1),POP(1,2),DISSYW,ICORE(I020),
     &                ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
          ITWR=25
         ENDIF
C
C PERFORM MATRIX MULTIPLICATION
C                              +          
C         Z(A,I) = SUM W(Efm,A) * C(Efm,I)              [ISPIN=1]
C                  Efm
C                              +          
C         Z(a,i) = SUM W(Fe,Ma) * C(Fe,Mi)              [ISPIN=2]
C                  FeM
         IZ=I000
         DO 120 IRREPI=1,NIRREP
          IRREPM=DIRPRD(IRREPI,IRREPTR)
          IRREPA=DIRPRD(IRREPM,IRREPW)
          NROW=VRT(IRREPA,ISPIN)
          NCOL=POP(IRREPI,ISPIN)
          NSUM=DISSYW*POP(IRREPM,3-ISPIN)
          IW=I020+IINTFP*DISSYW*(ISYMOFF(IRREPA,IRREPW,ITWR)-1)
          IT=I010+IINTFP*DISSYT*(ISYMOFF(IRREPI,IRREPTR,ITTR)-1)
          CALL XGEMM('T','N',NROW,NCOL,NSUM,ONE,ICORE(IW),NSUM,
     &               ICORE(IT),NSUM,ONE,ICORE(IZ),NROW)
          IZ=IZ+IINTFP*NROW*NCOL
120      CONTINUE
        ELSE
C
C OUT-OF-CORE ALGORITHMS  
C
         IF(ISPIN.EQ.1)THEN
C
C ISPIN=1
C
C LOOP OVER m, READ IN ALL W(Ef,A) AND FORM Z(AI) <= W(Ef,A)*C(Efm,I)
C FOR THIS VALUE OF m
C
          IDISW1=1
          DO 121 IRREPM=1,NIRREP
           IRREPA=DIRPRD(IRREPM,IRREPW)
           IRREPI=DIRPRD(IRREPA,IRREPX)
           NUMM=POP(IRREPM,2)
           NUMA=VRT(IRREPA,1)
           NUMI=POP(IRREPI,1)
           IT=I010+IINTFP*DISSYT*(ISYMOFF(IRREPI,IRREPTR,ITTR)-1)
           ITOP=I020+IINTFP*DISSYW*NUMA
           IF(ITOP.GT.MAXCOR)THEN
            CALL INSMEM('DT2INT1A',ITOP,MAXCOR)
           ENDIF
           DO 122 M=1,NUMM
            CALL GETLST(ICORE(I020),IDISW1,NUMA,1,IRREPW,LISTW)
            NROW=NUMA
            NCOL=NUMI
            NSUM=DISSYW
            IW=I020
            IZ=I000+IINTFP*(ISYMOFF(IRREPI,IRREPX,9)-1)
            CALL XGEMM('T','N',NROW,NCOL,NSUM,ONE,ICORE(IW),NSUM,
     &                 ICORE(IT),NSUM*NUMM,ONE,ICORE(IZ),NROW)
            IT=IT+IINTFP*DISSYT
            IDISW1=IDISW1+NUMA
122        CONTINUE
121       CONTINUE
         ELSEIF(ISPIN.EQ.2)THEN
C
C ISPIN=2
C
C LOOP OVER a, READ IN ALL W(Fe,M) AND FORM Z(ai) <= W(Fe,M)*C(Fe,Mi)
C FOR THIS a
C
          IDISW1=1
          DO 123 IRREPA=1,NIRREP
           IRREPI=DIRPRD(IRREPA,IRREPX)
           IRREPM=DIRPRD(IRREPA,IRREPW)
           NUMM=POP(IRREPM,1)
           NUMA=VRT(IRREPA,2)
           NUMI=POP(IRREPI,2)
           IT=I010+IINTFP*DISSYT*(ISYMOFF(IRREPI,IRREPTR,ITTR)-1)
           ITOP=I020+IINTFP*DISSYW*NUMM
           IF(ITOP.GT.MAXCOR)THEN
            CALL INSMEM('DT2INT1A',ITOP,MAXCOR)
           ENDIF
           DO 124 A=1,NUMA
            CALL GETLST(ICORE(I020),IDISW1,NUMM,1,IRREPW,LISTW)
            NROW=1
            NCOL=NUMI
            NSUM=DISSYW*NUMM
            IW=I020
            IZOFF=ISYMOFF(IRREPI,IRREPX,10)+A-1
            IZ=I000+IINTFP*(IZOFF-1)
            CALL XGEMM('T','N',NROW,NCOL,NSUM,ONE,ICORE(IW),NSUM,
     &                 ICORE(IT),NSUM,ONE,ICORE(IZ),NUMA)
            IDISW1=IDISW1+NUMM
124        CONTINUE            
123       CONTINUE
         ENDIF
C
        ENDIF
C
        IF(.NOT.RHF)THEN
C
C NOW DO THE OTHER SPIN CASE FOR UHF CALCS
C
C     Z(A,I) = Z(A,I) + SUM  R(EF,IM) * <AM||EF>    [ISPIN=1]
C                       MEF
C
C     Z(a,i) = Z(a,i) + SUM  R(ef,im) * <am||ef>    [ISPIN=2]
C                       MEF
C
         ITTR=20+ISPIN
         LISTW=LISTW0-1+ISPIN
         LISTT=LISTT0-1+ISPIN
         DISSYW=IRPDPD(IRREPW,ISYTYP(1,LISTW)) 
         NUMDSW=IRPDPD(IRREPW,ISYTYP(2,LISTW)) 
         DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTT)) 
         NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTT)) 
         NUMDSTX=IRPDPD(IRREPTR,20+ISPIN)
         MAXBUF=MAX(DISSYT,NUMDST,DISSYW,NUMDSW)
         I020=I010+IINTFP*DISSYT*NUMDSTX
         I030=I020+IINTFP*DISSYW*NUMDSW
         I040=I030+IINTFP*3*MAXBUF
C
C READ T INTO R(E<F,M<I) AND EXPAND RHS TO R(E<F,MI)
C
         CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
         CALL SYMEXP(IRREPTR,POP(1,ISPIN),DISSYT,ICORE(I010))
C
C CHOOSE IN-CORE OR OUT-OF-CORE ALGORITHM FOR W
C
         IF(I040.LT.MAXCOR)THEN
C
C READ W INTO W(E<F,AM) AND TRANSPOSE KET INDICES TO W(E<FM,A)
C
          CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPW,LISTW)
          ITMP1=I030
          ITMP2=ITMP1+IINTFP*MAXBUF
          ITMP3=ITMP2+IINTFP*MAXBUF
          ITMP4=ITMP3+IINTFP*MAXBUF
          CALL SYMTR1(IRREPW,VRT(1,ISPIN),POP(1,ISPIN),DISSYW,
     &                ICORE(I020),ICORE(ITMP1),ICORE(ITMP2),
     &                ICORE(ITMP3))
          ITWR=15+ISPIN
C
C PERFORM MATRIX MULTIPLICATION
C
C                                     +
C         Z(A,I)   =   SUM   W(E<FM,A) * R(E<FM,I)
C                      MEF
C  
          IZ=I000
          DO 150 IRREPI=1,NIRREP
           IRREPM=DIRPRD(IRREPI,IRREPTR)
           IRREPA=DIRPRD(IRREPM,IRREPW)
           NROW=VRT(IRREPA,ISPIN)
           NCOL=POP(IRREPI,ISPIN)
           NSUM=DISSYW*POP(IRREPM,ISPIN)
           IT=I010+IINTFP*DISSYT*(ISYMOFF(IRREPI,IRREPTR,ITTR)-1)
           IW=I020+IINTFP*DISSYW*(ISYMOFF(IRREPA,IRREPW,ITWR)-1)
           CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,ICORE(IW),NSUM,
     &                ICORE(IT),NSUM,ONE,ICORE(IZ),NROW)
           IZ=IZ+IINTFP*NROW*NCOL
150       CONTINUE
C
         ELSE
C
C OUT OF CORE ALGORITHM
C
C LOOP OVER M, READ IN ALL W(E<FA) AND FORM Z(AI) <= W(E<FA)*C(E<FM,I)
C FOR THIS VALUE OF M
C
          ITWR=8+ISPIN
          IDISW1=1
          DO 221 IRREPM=1,NIRREP
           IRREPA=DIRPRD(IRREPM,IRREPW)
           IRREPI=DIRPRD(IRREPA,IRREPX)
           NUMM=POP(IRREPM,ISPIN)
           NUMA=VRT(IRREPA,ISPIN)
           NUMI=POP(IRREPI,ISPIN)
           IT=I010+IINTFP*DISSYT*(ISYMOFF(IRREPI,IRREPTR,ITTR)-1)
           ITOP=I020+IINTFP*DISSYW*NUMA
           IF(ITOP.GT.MAXCOR)THEN
            CALL INSMEM('DT2INT1A',ITOP,MAXCOR)
           ENDIF
           DO 222 M=1,NUMM
            CALL GETLST(ICORE(I020),IDISW1,NUMA,1,IRREPW,LISTW)
            NROW=NUMA
            NCOL=NUMI
            NSUM=DISSYW
            IW=I020
            IZ=I000+IINTFP*(ISYMOFF(IRREPI,IRREPX,8+ISPIN)-1)
            CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,ICORE(IW),NSUM,
     &                 ICORE(IT),NSUM*NUMM,ONE,ICORE(IZ),NROW)
            IT=IT+IINTFP*DISSYT
            IDISW1=IDISW1+NUMA
222        CONTINUE
221       CONTINUE
C
C ENDS OUT-OF-CORE/INCORE IF
C
         ENDIF
C
C ENDS RHF/UHF IF
C
        ENDIF
C
100    CONTINUE

       CALL PUTLST(ICORE(I000),1,1,1,2+ISPIN,LISTT1)
50    CONTINUE
C
      RETURN
      END

      SUBROUTINE TPDABCI1(ICORE,MAXCOR,IUHF)
C
C CALCULATION OF THE FIRST IJKA CONTRIBUTION TO
C THE EOM-CCSD TWO-PARTICLE DENSITY MATRIX
C
C            1/2 R(MI,AB) L(M,C) + R(M,A) L(M,C) T(I,B)
C
C          + T(M,A) L(M,C) R(I,B)
C
CEND 
C
C CODED JG SEPTEMBER/93
C
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION HALF,HALFM,ONE,TWO
      DIMENSION ICORE(MAXCOR)
      DIMENSION I0T(2),I0R(2),I0L(2)
      COMMON/STATSYM/IRREPX
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMLOC/ISYMOFF(8,8,25)
C
      DATA HALF,HALFM,ONE,TWO /0.5D0,-0.5D0,1.0D0,2.0D0/
C
C READ IN T1, R1, AND L1 AMPLITUDES
C
      I0T(1)=1
      I0T(2)=I0T(1)+IRPDPD(1,9)*IINTFP*IUHF
      I0R(1)=I0T(2)+IRPDPD(1,10)*IINTFP
      I0R(2)=I0R(1)+IRPDPD(IRREPX,9)*IINTFP*IUHF
      I0L(1)=I0R(2)+IRPDPD(IRREPX,10)*IINTFP
      I0L(2)=I0L(1)+IRPDPD(IRREPX,9)*IINTFP*IUHF
      ISTART=I0L(2)+IRPDPD(IRREPX,10)*IINTFP
C
      CALL GETLST(ICORE(I0R(1)),1,1,1,3,490)
      CALL GETLST(ICORE(I0L(1)),1,1,1,1,490)
      CALL GETLST(ICORE(I0T(1)),1,1,1,1,90)
      IF(IUHF.EQ.1) THEN
       CALL GETLST(ICORE(I0R(2)),1,1,1,4,490)
       CALL GETLST(ICORE(I0L(2)),1,1,1,2,490)
       CALL GETLST(ICORE(I0T(2)),1,1,1,2,90)
      ENDIF
C
C AAAA AND BBBB SPIN CASES (UHF ONLY)
C
      IF(IUHF.EQ.1) THEN
       DO 1000 ISPIN=1,2
        LISTG=126+ISPIN
        LISTR=460+ISPIN
        LISTT=43+ISPIN
        DO 100 IRREPR=1,NIRREP
         IRREPL=DIRPRD(IRREPR,IRREPX) 
         NUMDSG=IRPDPD(IRREPL,ISYTYP(2,LISTG)) 
         DISSYG=IRPDPD(IRREPL,ISYTYP(1,LISTG))
         NUMDSR=IRPDPD(IRREPR,ISYTYP(2,LISTR))
         DISSYR=IRPDPD(IRREPL,ISYTYP(1,LISTR))
         NUMDST=IRPDPD(IRREPR,ISYTYP(2,LISTT))
         DISSYT=IRPDPD(IRREPR,ISYTYP(1,LISTT))
         NOCCSQ=IRPDPD(IRREPR,20+ISPIN)
C
C ALLOCATE MEMORY
C
         I000=ISTART
         I010=I000+IINTFP*DISSYR*NOCCSQ
C
C GET R AMPLITUDES, FORM R(TWIDDLE) AND EXPAND RHS TO R(A<B,IM)
C
         CALL GETLST(ICORE(I000),1,NUMDSR,1,IRREPR,LISTR)
         CALL DTAU(IRREPL,IRREPR,1,IRREPX,ICORE(I000),
     &             ICORE(I0T(ISPIN)),ICORE(I0T(ISPIN)),
     &             ICORE(I0R(ISPIN)),ICORE(I0R(ISPIN)),
     &             ISPIN,ONE)
         CALL SYMEXP(IRREPR,POP(1,ISPIN),DISSYR,ICORE(I000))
C
C PERFORM MULTIPLICATION, ONE ABC AT A TIME
C
C   G(A<B,C;I) = R(A<B,IM) * L(M,C)
C
         ISTARTG=1
         DO 10 IRREPI=1,NIRREP
          IRREPM=DIRPRD(IRREPI,IRREPR)
          IRREPC=DIRPRD(IRREPM,IRREPX)
          NUMC=VRT(IRREPC,ISPIN)
          NUMI=POP(IRREPI,ISPIN)
          NUMM=POP(IRREPM,ISPIN)
          IEND=I010+IINTFP*DISSYG*NUMC
          IF(IEND.GT.MAXCOR)CALL INSMEM('TPDABCI1',IEND,MAXCOR)
          DO 11 I=1,NUMI
           NROW=DISSYG
           NCOL=NUMC
           NSUM=NUMM
           IOFFR=I000+IINTFP*(ISYMOFF(IRREPM,IRREPR,20+ISPIN)+I-2)*
     &           DISSYR
           IOFFL=I0L(ISPIN)+(ISYMOFF(IRREPM,IRREPX,8+ISPIN)-1)*IINTFP
           CALL GETLST(ICORE(I010),ISTARTG,NUMC,1,IRREPL,LISTG)
           CALL XGEMM('N','T',NROW,NCOL,NSUM,HALFM,ICORE(IOFFR),
     &                NROW*NUMI,ICORE(IOFFL),NCOL,ONE,ICORE(I010),NROW)
           CALL PUTLST(ICORE(I010),ISTARTG,NUMC,1,IRREPL,LISTG)
           ISTARTG=ISTARTG+NUMC
11        CONTINUE
10       CONTINUE
100     CONTINUE
1000   CONTINUE
      ENDIF
C
C ABAB AND BABA SPIN CASE
C
      DO 2000 ISPIN=1,IUHF+1
       LISTG=131-ISPIN
       LISTR=463
       LISTT=46
       DO 1100 IRREPR=1,NIRREP
        IRREPL=DIRPRD(IRREPR,IRREPX) 
        NUMDSG=IRPDPD(IRREPL,ISYTYP(2,LISTG)) 
        DISSYG=IRPDPD(IRREPL,ISYTYP(1,LISTG))
        NUMDSR=IRPDPD(IRREPR,ISYTYP(2,LISTR))
        DISSYR=IRPDPD(IRREPL,ISYTYP(1,LISTR))
        NUMDST=IRPDPD(IRREPR,ISYTYP(2,LISTT))
        DISSYT=IRPDPD(IRREPR,ISYTYP(1,LISTT))
        MAXT=MAX(NUMDSG,DISSYG,NUMDSR,DISSYR,NUMDST,DISSYT)
        I000=ISTART
        I010=I000+IINTFP*NUMDSR*DISSYR
        ITMP1=I010
        ITMP2=ITMP1+IINTFP*MAXT
        ITMP3=ITMP2+IINTFP*MAXT
C
C GET R AMPLITUDES - R(Ab,Mi) AND FORM R(TWIDLE)
C
        CALL GETLST(ICORE(I000),1,NUMDSR,1,IRREPR,LISTR)
        CALL DTAU(IRREPL,IRREPR,1,IRREPX,ICORE(I000),
     &            ICORE(I0T(1)),ICORE(I0T(2)),
     &            ICORE(I0R(1)),ICORE(I0R(2)),
     &            3,ONE)
C
C ISPIN=1:
C
C  R(Ab,Mi) -> R(Ab,iM) 
C
C AND THEN DO
C
C     G(Ab,C;i) = R(Ab,iM)*L(CM) ONE AbC AT A TIME
C
        IF(ISPIN.EQ.1) THEN
         CALL SYMTR1(IRREPR,POP(1,1),POP(1,2),DISSYR,ICORE(I000),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
         ISTARTG=1
         DO 110 IRREPI=1,NIRREP
          IRREPC=DIRPRD(IRREPI,IRREPL)
          IRREPM=DIRPRD(IRREPC,IRREPX)
          NUMC=VRT(IRREPC,ISPIN)
          NUMI=POP(IRREPI,3-ISPIN)
          NUMM=POP(IRREPM,ISPIN)
          IEND=I010+IINTFP*DISSYG*NUMC
          IF(IEND.GT.MAXCOR)CALL INSMEM('TPDABCI1',IEND,MAXCOR)
          NROW=DISSYG
          NCOL=NUMC
          NSUM=NUMM
          DO 111 I=1,NUMI
           IOFFR=I000+(ISYMOFF(IRREPM,IRREPR,24)+I-2)*DISSYR*IINTFP
           IOFFL=I0L(ISPIN)+(ISYMOFF(IRREPM,IRREPX,8+ISPIN)-1)*IINTFP
           CALL GETLST(ICORE(I010),ISTARTG,NUMC,1,IRREPL,LISTG)
           CALL XGEMM('N','T',NROW,NCOL,NSUM,HALF,ICORE(IOFFR),
     &                NROW*NUMI,ICORE(IOFFL),NCOL,ONE,ICORE(I010),NROW)
           CALL PUTLST(ICORE(I010),ISTARTG,NUMC,1,IRREPL,LISTG)
           ISTARTG=ISTARTG+NUMC
111       CONTINUE 
110      CONTINUE
        ELSE
C
C ISPIN=2:
C
C     G(Ab,Ic) = R(Ab,Im)*L(cm) [ISPIN=2]
C
         MXCOR=MAXCOR-I010+1
         IFIRST=1
         DO 120 IRREPC=1,NIRREP
          IRREPM=DIRPRD(IRREPC,IRREPX)
          IRREPI=DIRPRD(IRREPM,IRREPR)
          NUMC=VRT(IRREPC,ISPIN)
          NUMI=POP(IRREPI,3-ISPIN)
          NUMM=POP(IRREPM,ISPIN)
          C1=1
          IOFFR=I000+(ISYMOFF(IRREPM,IRREPR,14)-1)*DISSYR*IINTFP
          NROW=DISSYG*NUMI
          NSUM=NUMM
C
          NINCOR=MXCOR/(IINTFP*MAX(1,DISSYG*NUMI))
          NLEFT=NUMC
1         NREAD=NUMI*MIN(NLEFT,NINCOR)
          NCOL=MIN(NLEFT,NINCOR)
C
          CALL GETLST(ICORE(I010),IFIRST,NREAD,1,IRREPL,LISTG) 
          IOFFL=I0L(ISPIN)+(ISYMOFF(IRREPM,IRREPX,8+ISPIN)+C1-2)*IINTFP
          CALL XGEMM('N','T',NROW,NCOL,NSUM,HALF,ICORE(IOFFR),NROW,
     &               ICORE(IOFFL),NUMC,ONE,ICORE(I010),NROW)
          CALL PUTLST(ICORE(I010),IFIRST,NREAD,1,IRREPL,LISTG) 
          IFIRST=IFIRST+NREAD
          NLEFT =NLEFT-NCOL
          C1=C1+NCOL
C
          IF(NLEFT.NE.0)GOTO 1
C
120      CONTINUE
C
        ENDIF
1100   CONTINUE
2000  CONTINUE
C
C ALL DONE, RETURN
C
      TWO=0.D0
      IF(IUHF.EQ.0)
     &   CALL CHECKGAM1(ICORE,30,130,TWO,IUHF,2,VRT)
      IF(IUHF.EQ.1) THEN
       CALL CHECKGAM(ICORE,30,130,TWO)
       CALL CHECKGAM(ICORE,27,127,TWO)
       CALL CHECKGAM(ICORE,28,128,TWO)
       CALL CHECKGAM(ICORE,29,129,TWO)
      ENDIF
C
      RETURN
      END

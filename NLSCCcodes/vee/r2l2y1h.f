      SUBROUTINE R2L2Y1H(Y1,ICORE,MAXCOR,IUHF)
C
C Y2(ai) = - R(mn,ef)*L(mo,ea)*W(in,of) FOR UHF
C
C Y2(AI) = - Z(FN,AO)*W(IN,OF) - Z(fn,ZO)*W(In,Of) + Z(Fn,Ao)*W(In,Fo)
C
C WHERE Z ARE THE INTERMEDIATES CALCULATED IN RNGINT.
C
C THIS ROUTINE IS ONLY FOR UHF CASES.
C
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM
      DIMENSION ICORE(MAXCOR),Y1(*)
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C
      DATA ONE,ONEM/1.0D0,-1.0D0/
C
      IOFFY0=1
      DO 10 ISPIN=1,1+IUHF
       DO 11 IRREP=1,NIRREP
C
C FIRST CONTRACTION : 
C
C          Q(FN,AO)*W(IN,OF) => Y2(AI)  [ISPIN=1]
C          Q(fn,ao)*W(in,of) => Y2(ai)  [ISPIN=2]
C
C          (PERFORMED AS Q(FO,NA)*W(FO,NI)
C 
        LISTQ=133+ISPIN
        LISTW=6+ISPIN
        DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
        DISSYWX=IRPDPD(IRREP,20+ISPIN)
        NUMDSW=IRPDPD(IRREP,ISYTYP(2,LISTW))
        DISSYQ=IRPDPD(IRREP,ISYTYP(1,LISTQ))
        NUMDSQ=IRPDPD(IRREP,ISYTYP(2,LISTQ))
        MAXSIZ=MAX(DISSYWX*NUMDSW,DISSYQ*NUMDSQ)
        MAXTMP=MAX(DISSYW,DISSYQ,NUMDSW,NUMDSQ)
        I000=1
        I010=I000+IINTFP*MAXSIZ
        I020=I010+IINTFP*MAXSIZ
        ITMP1=I020
        ITMP2=ITMP1+IINTFP*MAXTMP
        ITMP3=ITMP2+IINTFP*MAXTMP
        CALL GETLST(ICORE(I000),1,NUMDSW,1,IRREP,LISTW)
C
C W(I<N,OF) -> W(I<N,FO) -> W(FO,NI)
C
        CALL SYMTR1(IRREP,POP(1,ISPIN),VRT(1,ISPIN),DISSYW,ICORE(I000),
     &              ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        CALL TRANSP(ICORE(I000),ICORE(I010),NUMDSW,DISSYW) 
        CALL SYMEXP(IRREP,POP(1,ISPIN),NUMDSW,ICORE(I010))
        CALL VMINUS(ICORE(I010),NUMDSW*DISSYWX)
C
        CALL GETLST(ICORE(I000),1,NUMDSQ,1,IRREP,LISTQ)
C
C Y(AI) <= Q(FON,A) * W(FON,I)
C
        IOFFY=IOFFY0
        IOFFQ=I000
        IOFFW=I010
        DO 12 IRREPI=1,NIRREP
         IRREPA=IRREPI
         IRREPN=DIRPRD(IRREPI,IRREP)
         NUMA=VRT(IRREPA,ISPIN)
         NUMI=POP(IRREPI,ISPIN)
         NUMN=POP(IRREPN,ISPIN)
         NROW=NUMA
         NCOL=NUMI
         NSUM=DISSYQ*NUMN
         CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,ICORE(IOFFQ),NSUM,
     &              ICORE(IOFFW),NSUM,ONE,Y1(IOFFY),NROW)  
         IOFFQ=IOFFQ+IINTFP*NROW*NSUM
         IOFFW=IOFFW+IINTFP*NCOL*NSUM
         IOFFY=IOFFY+IINTFP*NROW*NCOL
12      CONTINUE
C
C SECOND CONTRACTION : 
C
C          Q(fn,AO)*W(In,Of)  [ISPIN=1]
C          Q(FN,ao)*W(iN,oF)  [ISPIN=2]
C
C          [PERFORMED AS Q(fO,nA)*W(fO,nI) AND Q(Fo,Na)*W(Fo,Ni)]
C 
        LISTQ=135+ISPIN
        LISTW=11-ISPIN
        DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
        NUMDSW=IRPDPD(IRREP,ISYTYP(2,LISTW))
        DISSYQ=IRPDPD(IRREP,ISYTYP(1,LISTQ))
        NUMDSQ=IRPDPD(IRREP,ISYTYP(2,LISTQ))
        MAXTMP=MAX(NUMDSW,NUMDSQ,DISSYW,DISSYQ)
        MAXSIZ=MAX(DISSYW*NUMDSW,DISSYQ*NUMDSQ)
        I000=1
        I010=I000+IINTFP*MAXSIZ
        I020=I010+IINTFP*MAXSIZ
        ITMP1=I020
        ITMP2=ITMP1+IINTFP*MAXTMP
        ITMP3=ITMP2+IINTFP*MAXTMP
        CALL GETLST(ICORE(I000),1,NUMDSW,1,IRREP,LISTW)
C
C W(In,Of) -> W(fO,nI) [ISPIN=1]
C W(Ni,Fo) -> W(Fo,Ni) [ISPIN=2]
C
        IF(ISPIN.EQ.1)THEN
         CALL SYMTR1(IRREP,POP(1,1),VRT(1,2),DISSYW,ICORE(I000),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ENDIF
        CALL TRANSP(ICORE(I000),ICORE(I010),NUMDSW,DISSYW) 
        IF(ISPIN.EQ.1)THEN
         CALL SYMTR1(IRREP,POP(1,1),POP(1,2),NUMDSW,ICORE(I010),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ENDIF
C
        CALL GETLST(ICORE(I000),1,NUMDSQ,1,IRREP,LISTQ)
C
C Y(AI) <= Q(fO,nA)*W(fO,nI)
C
        IOFFY=IOFFY0
        IOFFQ=I000
        IOFFW=I010
        DO 13 IRREPI=1,NIRREP
         IRREPA=IRREPI
         IRREPN=DIRPRD(IRREPI,IRREP)
         NUMA=VRT(IRREPA,ISPIN)
         NUMI=POP(IRREPI,ISPIN)
         NUMN=POP(IRREPN,3-ISPIN)
         NROW=NUMA
         NCOL=NUMI
         NSUM=DISSYQ*NUMN
         CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,ICORE(IOFFQ),NSUM,
     &              ICORE(IOFFW),NSUM,ONE,Y1(IOFFY),NROW)  
         IOFFQ=IOFFQ+IINTFP*NROW*NSUM
         IOFFW=IOFFW+IINTFP*NCOL*NSUM
         IOFFY=IOFFY+IINTFP*NROW*NCOL
13      CONTINUE
C
C THIRD CONTRACTION : 
C
C Y2(AI) <=  Q(Fn,Ao)*W(In,Fo) [ISPIN=1]
C Y2(AI) <=  Q(fN,aO)*W(iN,fO) [ISPIN=2]
C
C (PERFORMED AS Q(Fo,nA)*W(Fo,nI) AND Q(fO,Na)*W(fO,Ni))
C
C
        LISTQ=124+ISPIN
        LISTW=8+ISPIN
        DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
        NUMDSW=IRPDPD(IRREP,ISYTYP(2,LISTW))
        DISSYQ=IRPDPD(IRREP,ISYTYP(1,LISTQ))
        NUMDSQ=IRPDPD(IRREP,ISYTYP(2,LISTQ))
        MAXTMP=MAX(NUMDSW,NUMDSQ,DISSYW,DISSYQ)
        MAXSIZ=MAX(DISSYW*NUMDSW,DISSYQ*NUMDSQ)
        I000=1
        I010=I000+IINTFP*MAXSIZ
        I020=I010+IINTFP*MAXSIZ
        ITMP1=I020
        ITMP2=ITMP1+IINTFP*MAXTMP
        ITMP3=ITMP2+IINTFP*MAXTMP
        CALL GETLST(ICORE(I000),1,NUMDSW,1,IRREP,LISTW)
C
C W(In,Fo) -> W(Fo,nI) [ISPIN=1]
C W(Ni,Of) -> W(fO,Ni) [ISPIN=2]
C
        CALL TRANSP(ICORE(I000),ICORE(I010),NUMDSW,DISSYW) 
        IF(ISPIN.EQ.1)THEN
         CALL SYMTR1(IRREP,POP(1,1),POP(1,2),NUMDSW,ICORE(I010),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ELSEIF(ISPIN.EQ.2)THEN
         CALL SYMTR3(IRREP,POP(1,1),VRT(1,2),NUMDSW,DISSYW,ICORE(I010),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ENDIF
C
        CALL GETLST(ICORE(I000),1,NUMDSQ,1,IRREP,LISTQ)
C
C Y(AI) <= Q(Fo,nA)*W(Fo,nI)
C
        IOFFY=IOFFY0
        IOFFQ=I000
        IOFFW=I010
        DO 14 IRREPI=1,NIRREP
         IRREPA=IRREPI
         IRREPN=DIRPRD(IRREPI,IRREP)
         NUMA=VRT(IRREPA,ISPIN)
         NUMI=POP(IRREPI,ISPIN)
         NUMN=POP(IRREPN,3-ISPIN)
         NROW=NUMA
         NCOL=NUMI
         NSUM=DISSYQ*NUMN
         CALL XGEMM('T','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFQ),NSUM,
     &              ICORE(IOFFW),NSUM,ONE,Y1(IOFFY),NROW)  
         IOFFQ=IOFFQ+IINTFP*NROW*NSUM
         IOFFW=IOFFW+IINTFP*NCOL*NSUM
         IOFFY=IOFFY+IINTFP*NROW*NCOL
14      CONTINUE
C
11     CONTINUE
       IOFFY0=IOFFY0+IINTFP*NT(ISPIN)
C
10    CONTINUE
C
      RETURN
      END

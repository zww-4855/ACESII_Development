      SUBROUTINE R1L1Y2B(R1,L1,ICORE,MAXCOR,IUHF)
C
C Y2A(ab,ij) = - P(ij) [R(em) * L(ei) * W(mj,ab)
C
CEND
      IMPLICIT INTEGER (A-Z)
      LOGICAL TRANS,EXP
      DOUBLE PRECISION ONE,ONEM,ZILCH,R1,L1
      DIMENSION ICORE(MAXCOR),R1(*),L1(*),ILR(2)
      COMMON/STATSYM/IRREPX
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMLOC/ISYMOFF(8,8,25)
C
      DATA ONE,ONEM,ZILCH/1.0D0,-1.0D0,0.0D0/
C
      IF(IUHF.EQ.0)THEN
C
       LISTW=16
       LISTY=63
C
C SPIN ADAPTED RHF CODE.
C
C  Z(Ab,Ij) = L(ei) * R(em) * W(Ab,Mj) 
C
C  Y2B(Ab,Ij) = Z(Ab,Ij) + Z(Ba,Ji)
C
C CALCULATE Q(im) = - L(ei)*R(em)
C
       I000=1
       I010=I000+IINTFP*NFMI(1)
       IOFFQ=I000
       DO 10 IRREPM=1,NIRREP
        IRREPI=IRREPM
        IRREPE=DIRPRD(IRREPM,IRREPX)
        NROW=POP(IRREPI,1)
        NCOL=POP(IRREPM,1)
        NSUM=VRT(IRREPE,1)
        IOFFR=1+(ISYMOFF(IRREPM,IRREPX,9)-1)
        IOFFL=IOFFR
        CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,L1(IOFFL),
     &             NSUM,R1(IOFFR),NSUM,ZILCH,ICORE(IOFFQ),NROW)
        IOFFQ=IOFFQ+NROW*NCOL*IINTFP
10     CONTINUE
C
C READ IN W(Ab,Mj) = W(Ba,Jm) INTEGRALS
C
       DO 20 IRREP=1,NIRREP
        DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
        NUMDSW=IRPDPD(IRREP,ISYTYP(2,LISTW))
        MAXW  =MAX(NUMDSW,DISSYW)
        I020=I010+IINTFP*DISSYW*NUMDSW
        I030=I020+IINTFP*MAX(3*MAXW,DISSYW*NUMDSW)
        ITMP1=I020
        ITMP2=ITMP1+MAXW*IINTFP
        ITMP3=ITMP2+MAXW*IINTFP
        IEND=ITMP3+MAXW*IINTFP
        IF(IEND.GE.MAXCOR) CALL INSMEM('R1L1Y2B1',IEND,MAXCOR)
        CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREP,LISTW)
C
C CALCULATE Z(Ba,Ji) = W(Ba,Jm) * Q(im)
C
        IOFFW=I020
        IOFFQ=I000
        IOFFZ=I010
        DO 30 IRREPM=1,NIRREP
         IRREPI=IRREPM
         IRREPJ=DIRPRD(IRREPM,IRREP)
         NUMM=POP(IRREPM,1)
         NUMJ=POP(IRREPJ,1)
         NUMI=POP(IRREPI,1)
         NROW=DISSYW*NUMJ 
         NCOL=NUMI
         NSUM=NUMM
         CALL XGEMM('N','T',NROW,NCOL,NSUM,ONE,ICORE(IOFFW),NROW,
     &              ICORE(IOFFQ),NCOL,ZILCH,ICORE(IOFFZ),NROW)
         IOFFZ=IOFFZ+NROW*NCOL*IINTFP
         IOFFQ=IOFFQ+NUMI*NUMM*IINTFP
         IOFFW=IOFFW+NROW*NCOL*IINTFP
30      CONTINUE
C
C SYMMETRIZE AND AUGMENT LIST
C
        CALL SYMRHF(IRREP,VRT(1,1),POP(1,1),DISSYW,ICORE(I010),
     &              ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREP,LISTY)
        CALL SAXPY (NUMDSW*DISSYW,ONE,ICORE(I020),1,ICORE(I010),1)
        CALL PUTLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTY)
C
20     CONTINUE
C
      ELSE
C 
       ILR(1)=1
       ILR(2)=1+IINTFP*NFMI(1)
       ISTART=ILR(2)+IINTFP*NFMI(2)
C
C CALCULATE Q(im) = - L(ei)*R(em)
C
       DO 1000 ISPIN=1,2
C
        I000=ILR(ISPIN)
        I010=ISTART
        IOFFQ=I000
C
        DO 110 IRREPM=1,NIRREP
C
         IRREPI=IRREPM
         IRREPE=DIRPRD(IRREPM,IRREPX)
         NROW=POP(IRREPI,ISPIN)
         NCOL=POP(IRREPM,ISPIN)
         NSUM=VRT(IRREPE,ISPIN)
         IOFFR=1+(IRPDPD(IRREPX,9)*(ISPIN-1)
     &          +(ISYMOFF(IRREPM,IRREPX,8+ISPIN)-1))
         IOFFL=IOFFR
C
         CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,L1(IOFFL),
     &              NSUM,R1(IOFFR),NSUM,ZILCH,ICORE(IOFFQ),NROW)
C
         IOFFQ=IOFFQ+NROW*NCOL*IINTFP
C
110     CONTINUE
C
1000   CONTINUE
C
C READ IN W(AB,MJ) INTEGRALS
C
       DO 1100 ISPIN=1,4
C
        LISTW=13+ISPIN
        LISTY=60+ISPIN
        ISPIN1=ISPIN
        ISPIN2=ISPIN
        TRANS=.FALSE.
        EXP=.TRUE.
        IF(ISPIN.EQ.3) THEN
         ISPIN1=2
         ISPIN2=1
         TRANS=.TRUE.
         EXP=.FALSE.
        ELSE IF(ISPIN.EQ.4) THEN
         LISTW=16
         LISTY=63
         ISPIN1=1
         ISPIN2=2
         TRANS=.FALSE.
         EXP=.FALSE.
        ENDIF
C
        DO 120 IRREP=1,NIRREP
         DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
         NUMDSW=IRPDPD(IRREP,ISYTYP(2,LISTW))
         NUMDSF=NUMDSW
         IF(ISPIN.LE.2) NUMDSF=IRPDPD(IRREP,20+ISPIN)
         MAXW=MAX(NUMDSF,DISSYW)
         I010=ISTART
         I020=I010+IINTFP*DISSYW*NUMDSF
         I030=I020+IINTFP*MAX(3*MAXW,DISSYW*NUMDSF)
         ITMP1=I030
         ITMP2=ITMP1+MAXW*IINTFP
         ITMP3=ITMP2+MAXW*IINTFP
         IEND=ITMP3+MAXW*IINTFP
         IF(IEND.GE.MAXCOR) CALL INSMEM('R1L1Y2B2',IEND,MAXCOR)
         CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREP,LISTW)
         IF(EXP) CALL SYMEXP(IRREP,POP(1,ISPIN),DISSYW,ICORE(I020))
         IF(TRANS) CALL SYMTR1(IRREP,POP(1,ISPIN2),POP(1,ISPIN1),
     &                         DISSYW,ICORE(I020),ICORE(ITMP1),
     &                         ICORE(ITMP2),ICORE(ITMP3))
C
C CALCULATE Z(BA,JI) = W(BA,JM) * Q(IM)
C
         IOFFW=I020
         IOFFQ=ILR(ISPIN2)
         IOFFZ=I010
         DO 130 IRREPM=1,NIRREP
          IRREPI=IRREPM
          IRREPJ=DIRPRD(IRREPM,IRREP)
          NUMM=POP(IRREPM,ISPIN2)
          NUMJ=POP(IRREPJ,ISPIN1)
          NUMI=POP(IRREPI,ISPIN2)
          NROW=DISSYW*NUMJ 
          NCOL=NUMI
          NSUM=NUMM
          CALL XGEMM('N','T',NROW,NCOL,NSUM,ONE,ICORE(IOFFW),NROW,
     &               ICORE(IOFFQ),NCOL,ZILCH,ICORE(IOFFZ),NROW)
          IOFFZ=IOFFZ+NROW*NCOL*IINTFP
          IOFFQ=IOFFQ+NUMI*NUMM*IINTFP
          IOFFW=IOFFW+NROW*NCOL*IINTFP
130      CONTINUE
C
         IF(TRANS) CALL SYMTR1(IRREP,POP(1,ISPIN1),POP(1,ISPIN2),
     &                         DISSYW,ICORE(I010),ICORE(ITMP1),
     &                         ICORE(ITMP2),ICORE(ITMP3))
C
C ANTI-SYMMETRIZE(IN CASE OF ISPIN=1,2) AND AUGMENT LIST
C
         IF(EXP) CALL ASSYM2(IRREP,POP(1,ISPIN),DISSYW,ICORE(I010))
C
         CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREP,LISTY)
         CALL SAXPY (NUMDSW*DISSYW,ONE,ICORE(I020),1,ICORE(I010),1)
         CALL PUTLST(ICORE(I010),1,NUMDSW,1,IRREP,LISTY)
C
120     CONTINUE
C
1100   CONTINUE
C
      ENDIF 
C
      RETURN
      END

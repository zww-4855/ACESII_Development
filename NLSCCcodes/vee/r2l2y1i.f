      SUBROUTINE R2L2Y1I(Y1,ICORE,MAXCOR,IUHF)
C
C Y2(ai) =   R(mn,ef)*L(im,ge)*W(gn,af) 
C
C            Q(fn,gi)*W(gn,af)
C
C Y2(AI) = Q(FN,GI)*W(GN,AF) + Q(fn,GI)*W(GA,fn) - Q(fN,gI)*W(fN,gA)
C
C WHERE Q ARE THE INTERMEDIATES CALCULATED IN RNGINT.
C
C THIS ROUTINE IS ONLY FOR UHF CASES.
C
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION ONE,ONEM
      DIMENSION ICORE(MAXCOR),Y1(*)
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMLOC/ISYMOFF(8,8,25)
C
      DATA ONE,ONEM/1.0D0,-1.0D0/
C
      IOFFY0=1
      DO 10 ISPIN=1,1+IUHF
       DO 11 IRREP=1,NIRREP
C
C FIRST CONTRACTION : 
C
C          Q(FN,GI)*W(GN,AF) => Y2(AI)  [ISPIN=1]
C          Q(fn,gi)*W(gn,af) => Y2(ai)  [ISPIN=2]
C
C          (PERFORMED AS Q(NG,FI)*W(NG,FA)
C 
        LISTQ=133+ISPIN
        LISTW=26+ISPIN
        DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
        DISSYWX=IRPDPD(IRREP,18+ISPIN)
        NUMDSW=IRPDPD(IRREP,ISYTYP(2,LISTW))
        DISSYQ=IRPDPD(IRREP,ISYTYP(1,LISTQ))
        NUMDSQ=IRPDPD(IRREP,ISYTYP(2,LISTQ))
        MAXTMP=MAX(DISSYW,DISSYQ,NUMDSW,NUMDSQ)
        I000=1
        I010=I000+IINTFP*DISSYQ*NUMDSQ
        I020=I010+IINTFP*DISSYQ*NUMDSQ
        ITMP1=I020
        ITMP2=ITMP1+IINTFP*MAXTMP
        ITMP3=ITMP2+IINTFP*MAXTMP
C
C Q(FI,NG) => Q(FI,GN) => Q(GN,FI) => Q(GN,IF)
C
        CALL GETLST(ICORE(I010),1,NUMDSQ,1,IRREP,LISTQ)
        CALL SYMTR1(IRREP,POP(1,ISPIN),VRT(1,ISPIN),DISSYQ,ICORE(I010),
     &              ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        CALL TRANSP(ICORE(I010),ICORE(I000),NUMDSQ,DISSYQ)
C
        ITMP1=I010
        ITMP2=ITMP1+IINTFP*MAXTMP
        ITMP3=ITMP2+IINTFP*MAXTMP
        ISTART=ITMP2+IINTFP*MAXTMP
C
        CALL SYMTR1(IRREP,VRT(1,ISPIN),POP(1,ISPIN),NUMDSQ,ICORE(I000),
     &              ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
C
        MAXDIS=(MAXCOR-ISTART)/(2*IINTFP*MAX(1,DISSYWX))
        IF(MAXDIS.EQ.0) CALL INSMEM('R2L2Y1I',MAXDIS*DISSYWX,DISSYWX)
C
        I001=ISTART
        I002=I001+IINTFP*MAXDIS*DISSYWX
C 
        NLEFT=NUMDSW
        IOFFLIST=1
1       CONTINUE
C
         NREAD=MIN(MAXDIS,NLEFT)
         NLEFT=NLEFT-NREAD

         CALL GETLST(ICORE(I001),IOFFLIST,NREAD,1,IRREP,LISTW)
C
C W(A<F,GN) -> W(AF,GN) -> W(GN,AF)
C
         CALL TRANSP(ICORE(I001),ICORE(I002),NREAD,DISSYW) 
         CALL SYMEXP(IRREP,VRT(1,ISPIN),NREAD,ICORE(I002))
C
C Y(AI) <= Q(NG,I;F) * W(NG,A;F)
C
         IOFFY=IOFFY0
C
         DO 12 IRREPI=1,NIRREP
          IRREPA=IRREPI
          IRREPF=DIRPRD(IRREPI,IRREP)
          NUMA=VRT(IRREPA,ISPIN)
          NUMI=POP(IRREPI,ISPIN)
          NUMF=VRT(IRREPF,ISPIN)
          NROW=NUMA
          NCOL=NUMI
          NSUM=NREAD
          IOFFQ=I000+IINTFP*(IOFFLIST-1+
     &               NUMDSQ*(ISYMOFF(IRREPF,IRREP,15+ISPIN)-1))
          IOFFW=I002+IINTFP*NREAD*(ISYMOFF(IRREPF,IRREP,18+ISPIN)-1)
C
          DO 112 F=1,NUMF
C
           CALL XGEMM('T','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFW),NSUM,
     &                ICORE(IOFFQ),NUMDSQ,ONE,Y1(IOFFY),NROW)  
           IOFFQ=IOFFQ+IINTFP*NCOL*NUMDSQ
           IOFFW=IOFFW+IINTFP*NROW*NSUM
C
112        CONTINUE
C
          IOFFY=IOFFY+IINTFP*NROW*NCOL
C
12       CONTINUE
C
        IOFFLIST=IOFFLIST+NREAD
C 
       IF(NLEFT.NE.0) GO TO 1
C
C SECOND CONTRACTION : 
C
C          Q(fn,GI)*W(Gn,Af)  [ISPIN=1]
C          Q(FN,gi)*W(gN,aF)  [ISPIN=2]
C
C          [PERFORMED AS Q(nG,fI)*W(nG,fA) AND Q(Ng,Fi)*W(Ng,Fa)
C 
        LISTQ=135+ISPIN
        LISTW=31-ISPIN
        DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
        NUMDSW=IRPDPD(IRREP,ISYTYP(2,LISTW))
        DISSYQ=IRPDPD(IRREP,ISYTYP(1,LISTQ))
        NUMDSQ=IRPDPD(IRREP,ISYTYP(2,LISTQ))
        MAXTMP=MAX(NUMDSW,NUMDSQ,DISSYW,DISSYQ)
        I000=1
        I010=I000+IINTFP*NUMDSQ*DISSYQ
        I020=I010+IINTFP*NUMDSQ*DISSYQ
        ITMP1=I020
        ITMP2=ITMP1+IINTFP*MAXTMP
        ITMP3=ITMP2+IINTFP*MAXTMP
        ISTART=ITMP3+IINTFP*MAXTMP
C
C Q(fI,nG) => Q(fI,Gn) => Q(Gn,fI) => Q(Gn,If)    [ISPIN=1]
C Q(Fi,Ng) => Q(Ng,Fi) => Q(Ng,iF)                [ISPIN=2]
C
        CALL GETLST(ICORE(I010),1,NUMDSQ,1,IRREP,LISTQ)
        IF(ISPIN.EQ.1) THEN
         CALL SYMTR1(IRREP,POP(1,2),VRT(1,1),DISSYQ,
     &               ICORE(I010),ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ENDIF
        CALL TRANSP(ICORE(I010),ICORE(I000),NUMDSQ,DISSYQ)
C
        ITMP1=I010
        ITMP2=ITMP1+IINTFP*MAXTMP
        ITMP3=ITMP2+IINTFP*MAXTMP
        ISTART=ITMP3+IINTFP*MAXTMP
C
C Q(XX,fI) or Q(XX,Fi) => Q(XX,IF)
C
        CALL SYMTR1(IRREP,VRT(1,3-ISPIN),POP(1,ISPIN),
     &              NUMDSQ,ICORE(I000),ICORE(ITMP1),
     &              ICORE(ITMP2),ICORE(ITMP3))
C
        MAXDIS=(MAXCOR-ISTART)/(2*IINTFP*MAX(1,DISSYW))
        IF(MAXDIS.EQ.0) CALL INSMEM('R2L2Y1I2',MAXDIS*DISSYW,DISSYW)
C
        I001=ISTART
        I002=I001+IINTFP*MAXDIS*DISSYW
C
        NLEFT=NUMDSW
        IOFFLIST=1
2       CONTINUE
C
         NREAD=MIN(MAXDIS,NLEFT)
         NLEFT=NLEFT-NREAD
         CALL GETLST(ICORE(I001),IOFFLIST,NREAD,1,IRREP,LISTW)
C
C W(Af,Gn) => W(Gn,Af)             [ISPIN=1]
C W(Fa,Ng) => W(Ng,Fa) => Q(Ng,aF) [ISPIN=2]
C
         CALL TRANSP(ICORE(I001),ICORE(I002),NREAD,DISSYW) 
         IF(ISPIN.EQ.2)THEN
          CALL SYMTR1(IRREP,VRT(1,1),VRT(1,2),NREAD,ICORE(I002),
     &                ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
         ENDIF
C
C Y(AI) <= Q(nG,If)*W(nG,Af)
C
         IOFFY=IOFFY0
C
         DO 13 IRREPI=1,NIRREP
          IRREPA=IRREPI
          IRREPF=DIRPRD(IRREPI,IRREP)
          NUMA=VRT(IRREPA,ISPIN)
          NUMI=POP(IRREPI,ISPIN)
          NUMF=VRT(IRREPF,3-ISPIN)
          NROW=NUMA
          NCOL=NUMI
          NSUM=NREAD
          INUM=18
          IF(ISPIN.EQ.2) INUM=25
          IOFFQ=I000+IINTFP*(IOFFLIST-1+
     &                       NUMDSQ*(ISYMOFF(IRREPF,IRREP,INUM)-1))
          INUM=13
          IF(ISPIN.EQ.2) INUM=23
          IOFFW=I002+IINTFP*NREAD*(ISYMOFF(IRREPF,IRREP,INUM)-1)
C
          DO 113 F=1,NUMF
C
           CALL XGEMM('T','N',NROW,NCOL,NSUM,ONE,ICORE(IOFFW),NSUM,
     &                ICORE(IOFFQ),NUMDSQ,ONE,Y1(IOFFY),NROW)  
C
           IOFFQ=IOFFQ+IINTFP*NCOL*NUMDSQ
           IOFFW=IOFFW+IINTFP*NROW*NSUM
C
113       CONTINUE
C
          IOFFY=IOFFY+IINTFP*NROW*NCOL
C
13       CONTINUE
C
         IOFFLIST=IOFFLIST+NREAD
C
        IF(NLEFT.NE.0) GO TO 2
C
C THIRD CONTRACTION : 
C
C Y2(AI) <=  Q(fN,gI)*W(Ng,Af) [ISPIN=1]
C Y2(AI) <=  Q(Fn,Gi)*W(nG,aF) [ISPIN=2]
C
C (PERFORMED AS Q(Ng,fI)*W(Ng,fA) AND Q(nG,Fi)*W(nG,Fa)
C
C
        LISTQ=127-ISPIN
        LISTW=28+ISPIN
        DISSYW=IRPDPD(IRREP,ISYTYP(1,LISTW))
        NUMDSW=IRPDPD(IRREP,ISYTYP(2,LISTW))
        DISSYQ=IRPDPD(IRREP,ISYTYP(1,LISTQ))
        NUMDSQ=IRPDPD(IRREP,ISYTYP(2,LISTQ))
        MAXTMP=MAX(NUMDSW,NUMDSQ,DISSYW,DISSYQ)
        I000=1
        I010=I000+IINTFP*NUMDSQ*DISSYQ
        I020=I010+IINTFP*NUMDSQ*DISSYQ
        ITMP1=I020
        ITMP2=ITMP1+IINTFP*MAXTMP
        ITMP3=ITMP2+IINTFP*MAXTMP
C
C Q(fI,Ng) => Q(Ng,fI) => Q(Ng,If)                 [ISPIN=1]
C Q(Fi,nG) => Q(Fi,Gn) => Q(Gn,Fi) => Q(Gn,iF)     [ISPIN=2]
C
        CALL GETLST(ICORE(I010),1,NUMDSQ,1,IRREP,LISTQ)
        IF(ISPIN.EQ.2)THEN
         CALL SYMTR1(IRREP,POP(1,2),VRT(1,1),DISSYQ,ICORE(I010),
     &               ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
        ENDIF
        CALL TRANSP(ICORE(I010),ICORE(I000),NUMDSQ,DISSYQ)
C
        ITMP1=I010
        ITMP2=ITMP1+IINTFP*MAXTMP
        ITMP3=ITMP2+IINTFP*MAXTMP
        ISTART=ITMP3+IINTFP*MAXTMP
C
        CALL SYMTR1(IRREP,VRT(1,3-ISPIN),POP(1,ISPIN),
     &              NUMDSQ,ICORE(I000),ICORE(ITMP1),
     &              ICORE(ITMP2),ICORE(ITMP3))
C
        MAXDIS=(MAXCOR-ISTART)/(2*IINTFP*MAX(1,DISSYW))
        IF(MAXDIS.EQ.0) CALL INSMEM('R2L2Y1I',MAXDIS*DISSYW,DISSYW)
C
        I001=ISTART
        I002=I001+IINTFP*MAXDIS*DISSYW
C
        NLEFT=NUMDSW
        IOFFLIST=1
3       CONTINUE
C
         NREAD=MIN(MAXDIS,NLEFT)
         NLEFT=NLEFT-NREAD
C
         CALL GETLST(ICORE(I001),IOFFLIST,NREAD,1,IRREP,LISTW)
C
C W(Af,Ng) => W(Ng,Af)             [ISPIN=1]
C W(Fa,Gn) => W(Gn,Fa) => W(Gn,aF) [ISPIN=2]
C
         CALL TRANSP(ICORE(I001),ICORE(I002),NREAD,DISSYW) 
         IF(ISPIN.EQ.2) THEN
          CALL SYMTR1(IRREP,VRT(1,1),VRT(1,2),NREAD,ICORE(I002),
     &                ICORE(ITMP1),ICORE(ITMP2),ICORE(ITMP3))
         ENDIF
C
C Y(AI) <= Q(Ng,If)*W(Ng,Af) 
C
         IOFFY=IOFFY0
C
         DO 14 IRREPI=1,NIRREP
          IRREPA=IRREPI
          IRREPF=DIRPRD(IRREPI,IRREP)
          NUMA=VRT(IRREPA,ISPIN)
          NUMI=POP(IRREPI,ISPIN)
          NUMF=VRT(IRREPF,3-ISPIN)
          NROW=NUMA
          NCOL=NUMI
          NSUM=NREAD
          INUM=18
          IF(ISPIN.EQ.2) INUM=25
          IOFFQ=I000+IINTFP*(IOFFLIST-1+
     &               NUMDSQ*(ISYMOFF(IRREPF,IRREP,INUM)-1))
          INUM=13
          IF(ISPIN.EQ.2) INUM=23
          IOFFW=I002+IINTFP*NREAD*(ISYMOFF(IRREPF,IRREP,INUM)-1)
C
          DO 114 F=1,NUMF
C
           CALL XGEMM('T','N',NROW,NCOL,NSUM,ONEM,ICORE(IOFFW),NSUM,
     &                ICORE(IOFFQ),NUMDSQ,ONE,Y1(IOFFY),NROW)
C
           IOFFQ=IOFFQ+IINTFP*NCOL*NUMDSQ
           IOFFW=IOFFW+IINTFP*NROW*NSUM
C
114       CONTINUE  
C
          IOFFY=IOFFY+IINTFP*NROW*NCOL
C
14       CONTINUE
C
         IOFFLIST=IOFFLIST+NREAD
C
        IF(NLEFT.NE.0) GO TO 3
C
11     CONTINUE
       IOFFY0=IOFFY0+IINTFP*NT(ISPIN)
C
10    CONTINUE
C
      RETURN
      END

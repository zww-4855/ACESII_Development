










      SUBROUTINE RSDSNSD(ICORE,MAXCOR,IUHF,IRREPX,ISIDE,LISTT2IN,
     &                   LISTT2RS)
C
C This routine calculates the parts of Hbar x C1 -> C2 and
C   C2 x Hbar -> C1 that get calculated as part of Hbar x C2 -> C2.
C   This routine is for those cases when DT2INT2 is not run.  Much of
C   this code is lifted from DT2INT2.
C SG 6/95
C
C      IMPLICIT NONE
      INTEGER ICORE, MAXCOR, IUHF, IRREPX, ISIDE, LISTT2IN, LISTT2RS
      DIMENSION ICORE(MAXCOR)
C
      INTEGER IINTLN, IFLTLN, IINTFP, IALONE, IBITWD
      INTEGER POP, VRT, NT, NFMI, NFEA, NSTART, NIRREP, IRREPS, DIRPRD
      INTEGER IRPDPD, ISYTYP, ID
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
C
      DOUBLE PRECISION ONE, ONEM
      PARAMETER (ONE=1.0D0, ONEM=-1.0D0)
      DOUBLE PRECISION FACT
      INTEGER DISSIZ, NUMDIS, IRREPR, IRREPL, IDSYMSZ
      INTEGER I000, I010, I020, IDID, ISIZE, ISPIN, LISTZ, LSTTMP
      DIMENSION IDID(8)
      LOGICAL THREEBOD
      CHARACTER*4 SPCASE(2)
      SAVE SPCASE
C
      DATA SPCASE /'AAAA','BBBB'/


C
C initialize ring ordered lists
C
      DO 10 ISPIN=3,3-2*IUHF,-1
        CALL ZEROLIST(ICORE,MAXCOR,LISTT2RS-1+ISPIN)
 10   CONTINUE
C
C L1 * F into L2 from DRHFRNG and DUHFRNG
C
      IF (ISIDE .EQ. 2) CALL RSL1INL2 (ICORE,MAXCOR,IUHF,IRREPX,
     &   LISTT2RS)
C
C THREE BODY TERM
C
      THREEBOD = .TRUE.
      IF (THREEBOD) THEN
C
        IF (ISIDE .EQ. 1) THEN
C
C RIGHT-HAND EIGENVECTOR THREE-BODY CONTRIBUTIONS
C
          CALL FORMQ1 (IRREPX,ICORE,MAXCOR,IUHF)
          CALL CNT3BOD2 (IRREPX,ICORE,MAXCOR,IUHF,LISTT2RS)
C
C SYMMETRIZE INCREMENTS
C
          IF (IUHF .EQ. 0) THEN
            LSTTMP = LISTT2RS + 2
            CALL IZERO(IDID,NIRREP)
            DO 200 IRREPR=1,NIRREP
              IF(IDID(IRREPR).EQ.0)THEN
                IRREPL=DIRPRD(IRREPR,IRREPX)
                NUMDIS=IRPDPD(IRREPR,ISYTYP(2,LSTTMP))
                DISSIZ=IRPDPD(IRREPL,ISYTYP(1,LSTTMP))
                I000=1
                I010=I000+IINTFP*NUMDIS*DISSIZ
                IF(IRREPX.EQ.1)THEN
                  CALL GETLST(ICORE(I000),1,DISSIZ,1,IRREPL,LSTTMP)
                  CALL MPMT  (ICORE(I000),DISSIZ)
                  CALL PUTLST(ICORE(I000),1,DISSIZ,1,IRREPL,LSTTMP)
                ELSE
                  I020=I010+IINTFP*NUMDIS*DISSIZ
                  CALL GETLST(ICORE(I000),1,DISSIZ,1,IRREPL,LSTTMP)
                  CALL TRANSP(ICORE(I000),ICORE(I010),DISSIZ,NUMDIS)
                  CALL GETLST(ICORE(I000),1,NUMDIS,1,IRREPR,LSTTMP)
                  CALL SAXPY (NUMDIS*DISSIZ,ONE,ICORE(I010),1,
     &               ICORE(I000),1)
                  CALL PUTLST(ICORE(I000),1,NUMDIS,1,IRREPR,LSTTMP)
                  CALL TRANSP(ICORE(I000),ICORE(I010),NUMDIS,DISSIZ)
                  CALL PUTLST(ICORE(I010),1,DISSIZ,1,IRREPL,LSTTMP)
                ENDIF
                IDID(IRREPR)=1
                IDID(IRREPL)=1
              ENDIF
 200        CONTINUE
          ENDIF
          FACT = ONE
C
        ELSEIF (ISIDE .EQ. 2) THEN
C
C left hand C2 into C1 contribution
C
          CALL GFORMG (IRREPX,1,444,44,400,ICORE,MAXCOR,0,ONE,ONE,IUHF)
          CALL GINC1L (IRREPX,ICORE,MAXCOR,IUHF)
          FACT = ONEM
        ENDIF
      ENDIF
C
C move information from ring ordered lists to increment lists.
C   taken from DRHFRNG and DUHFRNG 
      IF (IUHF .EQ. 0) THEN
        LISTZ = LISTT2IN + 2
        LSTTMP = LISTT2RS + 2
        ISIZE = IDSYMSZ (IRREPX,ISYTYP(1,LISTZ),ISYTYP(2,LISTZ))
        I000 = 1
        I010 = I000 + IINTFP*ISIZE
        I020 = I010 + IINTFP*ISIZE
        CALL GETALL (ICORE(I000),ISIZE,IRREPX,LSTTMP)
        CALL SSTGEN (ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,1),
     &     VRT(1,1),POP(1,1),ICORE(I020),IRREPX,'1324')
        CALL GETALL (ICORE(I000),ISIZE,IRREPX,LISTZ)
        CALL SAXPY (ISIZE,ONE*FACT,ICORE(I010),1,ICORE(I000),1)
        CALL PUTALL (ICORE(I000),ISIZE,IRREPX,LISTZ)
      ELSE
        DO 20 ISPIN = 1,2
          LSTTMP = LISTT2RS - 1 + ISPIN
          LISTZ = LISTT2IN - 1 + ISPIN
          ISIZE = IDSYMSZ (IRREPX,ISYTYP(1,LSTTMP),ISYTYP(2,LSTTMP))
          I000 = 1
          I010 = I000 + ISIZE*IINTFP
          I020 = I010 + ISIZE*IINTFP
          CALL GETALL (ICORE(I000),ISIZE,IRREPX,LSTTMP)
          CALL DSST03I (ICORE(I000),ICORE(I010),ISIZE,ISIZE,
     &       ICORE(I020),SPCASE(ISPIN),IRREPX)
          ISIZE = IDSYMSZ (IRREPX,ISYTYP(1,LISTZ),ISYTYP(2,LISTZ))
          CALL GETALL (ICORE(I000),ISIZE,IRREPX,LISTZ)
          CALL SAXPY (ISIZE,ONEM*FACT,ICORE(I010),1,ICORE(I000),1)
          CALL PUTALL (ICORE(I000),ISIZE,IRREPX,LISTZ)
 20     CONTINUE
        LISTZ = LISTT2IN + 2
        LSTTMP = LISTT2RS + 2
        ISIZE = IDSYMSZ (IRREPX,ISYTYP(1,LSTTMP),ISYTYP(2,LSTTMP))
        I000 = 1
        I010 = I000 + IINTFP*ISIZE
        I020 = I010 + IINTFP*ISIZE
        CALL GETALL (ICORE(I000),ISIZE,IRREPX,LSTTMP)
        CALL SSTGEN (ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,1),
     &     VRT(1,2),POP(1,2),ICORE(I020),IRREPX,'1324')
        CALL GETALL (ICORE(I000),ISIZE,IRREPX,LISTZ)
        CALL SAXPY (ISIZE,ONE*FACT,ICORE(I010),1,ICORE(I000),1)
        CALL PUTALL (ICORE(I000),ISIZE,IRREPX,LISTZ)
      ENDIF
      RETURN
      END

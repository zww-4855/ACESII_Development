      SUBROUTINE R2L2RNG(ICORE,MAXCOR,SPCASE,IUHF,IRREPX,R0)
C
C  THIS ROUTINE COMPUTES THE RING-TYPE
C
C  H(ME,IA) = - SUM L(MN,EF) R(IN,AF)
C               N,F
C
C  INTERMEDIATE FOR ALL SIX POSSIBLE SPIN CASES. 
C
CEND
C
C  CODED SEPTEMBER/93  JG
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER DIRPRD,DISSYG,DSSYT1A,DSSYT2A,DSSYT1B,DSSYT2B,
     &        DSSYT1,DSSYT2,DSSYT3A,DSSYT3B,DSSYT4A,DSSYT4B,
     &        DISSYG2  
      CHARACTER*4 SPCASE
      DIMENSION ICORE(MAXCOR)
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),NTOT(18)
C
      DATA AZERO,HALF,ONE,ONEM,TWO /0.0D0,0.5D0,1.0D0,-1.D0,2.D0/
C
C
C DO SPIN CASE AAAA AND BBBB:
C
C   H(MEJB) =  - SUM N,F L(MN,EF) R(NJ,FB) 
C                      + L(Mn,Ef) R(Jn,Fb)
C
C  STORAGE MODE :   EM,BJ    ACTUALLY  = R(MN,FE) L(NJ,BF)
C                                  STORAGE HERE   EM,NF AND NF, BJ
C                                  SIGN = ONE  * -1 --> ONEM
C                            R(Mn,Ef) L(Jn,Bf)  STORAGE HERE BJ nf
C                                   SIGN = ONE * -1 --> ONEM
C  AAAA :     UHF ONLY
C
C  BBBB :     UHF ONLY           
C
      IF(SPCASE.EQ.'AAAA'.OR.SPCASE.EQ.'BBBB')THEN
       IF(SPCASE.EQ.'AAAA')THEN
        ISPIN=1
       ELSEIF(SPCASE.EQ.'BBBB')THEN
        ISPIN=2
       ENDIF
       LISTG =53+ISPIN
       LIST1A=433+ISPIN
       LIST2A=453+ISPIN
       LIST1B=438-ISPIN
       LIST2B=458-ISPIN
       LIST2AA=33+ISPIN
       LIST2BB=38-ISPIN
       FACT=ONEM
       DO 100 IRREPR=1,NIRREP
        IRREPL=DIRPRD(IRREPX,IRREPR) 
        DSSYT1A=IRPDPD(IRREPR,ISYTYP(1,LIST1A))
        DSSYT2A=IRPDPD(IRREPL,ISYTYP(1,LIST2A))
        NMSYT1A=IRPDPD(IRREPL,ISYTYP(2,LIST1A))
        NMSYT2A=IRPDPD(IRREPR,ISYTYP(2,LIST2A))
        DSSYT1B=IRPDPD(IRREPR,ISYTYP(1,LIST1B))
        DSSYT2B=IRPDPD(IRREPR,ISYTYP(1,LIST2B))
        NMSYT1B=IRPDPD(IRREPL,ISYTYP(2,LIST1B))
        NMSYT2B=IRPDPD(IRREPL,ISYTYP(2,LIST2B))
        DISSYG=IRPDPD(IRREPR,ISYTYP(1,LISTG))
        NUMSYG=IRPDPD(IRREPR,ISYTYP(2,LISTG))
C
C FIRST TERM
C
        I000=1
        I010=I000+IINTFP*DISSYG*NUMSYG
        I020=I010+IINTFP*NMSYT1A*DSSYT1A
        I030=I020+IINTFP*NMSYT2A*DSSYT2A
        IF(MAXCOR.LT.I030) CALL INSMEM('R2L2RNG',I030,MAXCOR)
        CALL ZERO(ICORE(I000),DISSYG*NUMSYG)
        CALL GETLST(ICORE(I020),1,NMSYT2A,2,IRREPR,LIST2A)
        IF(IRREPX.EQ.1) THEN
         CALL GETLST(ICORE(I010),1,NMSYT2A,1,IRREPL,LIST2AA)
         CALL SAXPY(NMSYT2A*DSSYT2A,R0,ICORE(I010),1,ICORE(I020),1)
        ENDIF
        CALL GETLST(ICORE(I010),1,NMSYT1A,1,IRREPL,LIST1A)
        CALL XGEMM('N','N',DISSYG,NUMSYG,DSSYT2A,FACT,ICORE(I010),
     &             DSSYT1A,ICORE(I020),DSSYT2A,AZERO,ICORE(I000),
     &             DISSYG)
C
C SECOND TERM
C
        I020=I010+IINTFP*NMSYT1B*DSSYT1B
        I030=I020+IINTFP*NMSYT2B*DSSYT2B
        IF(MAXCOR.LT.I030) CALL INSMEM('R2L2RNG',I030,MAXCOR)
        CALL GETLST(ICORE(I020),1,NMSYT2B,2,IRREPL,LIST2B)
        IF(IRREPX.EQ.1) THEN
         CALL GETLST(ICORE(I010),1,NMSYT2B,1,IRREPL,LIST2BB)
         CALL SAXPY(NMSYT2B*DSSYT2B,R0,ICORE(I010),1,ICORE(I020),1)
        ENDIF
        CALL GETLST(ICORE(I010),1,NMSYT1B,1,IRREPL,LIST1B)
        CALL XGEMM('N','T',DISSYG,NUMSYG,NMSYT2B,FACT,ICORE(I010),
     &             DSSYT1B,ICORE(I020),DSSYT2B,ONE,ICORE(I000),
     &             DISSYG)
C
C  SAVE H INTERMEDIATE ON DISK
C
        CALL PUTLST(ICORE(I000),1,NUMSYG,2,IRREPR,LISTG)
C
100    CONTINUE
C
C DO SPIN CASES ABBA AND BAAB:
C
C   H(MEia) = - SUM N,F L(MN,EF) R(iN,aF) + L(Mn,Ef) R(in,af)
C
C  THIS CORRESPONDS TO <Ia//jB> = <Ia/jB> = - <Ij//Ba> (LIST 18)
C
C STORAGE : EM,bj (ACTUALLY HERE WE ARE INTERESTED IN THE NEGATIVE OF
C                  THIS TERM (<Ia//jB> =  - <Ia//Bj> = - <Ba//Ij>)
C
C      ACTUALLY L(MN,EF) R(jN,bF) = - L(MN,FE) R(Nj,Fb)
C
C      STORAGE    EM, FN ; FN, bj    OVERALL SIGN :  ONE * -1 --> ONEM
C
C      ACTUALLY  L(Mn,Ef) R(jn,bf) = - L(Mn,Ef) R(jn,fb)
C
C      STORAGE    EM, nf ;  nf,  jb   OVERALL SIGN : ONE * -1 --> ONEM
C
C                       RHF CASE : CALCULATE ONLY ABBA
C                       UHF CASE : CALCULATE ABBA AND BAAB
C    
      ELSEIF(SPCASE.EQ.'ABBA'.OR.SPCASE.EQ.'BAAB')THEN
       IF(SPCASE.EQ.'ABBA')THEN
        LISTG=56
        FACT=ONEM
        LIST1A=434
        LIST2A=457
        LIST1B=437
        LIST2B=454+IUHF
        LIST2AA=37
        LIST2BB=34+IUHF
C
C FOR RHF, EXPLOIT SPIN ADAPTION
C
        IF(IUHF.EQ.0) THEN
         LIST1A=437
         LIST2B=457
         LIST2BB=37
         FACT=HALF
        ENDIF
C
       ENDIF
       IF(SPCASE.EQ.'ABBA'.AND.IUHF.EQ.1)THEN 
        LISTG2=57
        FACT=ONEM
        LIST3A=435
        LIST4A=456
        LIST3B=436
        LIST4B=454
        LIST4AA=36
        LIST4BB=34
       ENDIF
       DO 200 IRREPR=1,NIRREP
        IRREPL=DIRPRD(IRREPX,IRREPR) 
        DSSYT1A=IRPDPD(IRREPR,ISYTYP(1,LIST1A))
        DSSYT2A=IRPDPD(IRREPL,ISYTYP(1,LIST2A))
        NMSYT1A=IRPDPD(IRREPL,ISYTYP(2,LIST1A))
        NMSYT2A=IRPDPD(IRREPR,ISYTYP(2,LIST2A))
        DSSYT1B=IRPDPD(IRREPR,ISYTYP(1,LIST1B))
        DSSYT2B=IRPDPD(IRREPL,ISYTYP(1,LIST2B))
        NMSYT1B=IRPDPD(IRREPL,ISYTYP(2,LIST1B))
        NMSYT2B=IRPDPD(IRREPR,ISYTYP(2,LIST2B))
        DISSYG=IRPDPD(IRREPR,ISYTYP(1,LISTG))
        NUMSYG=IRPDPD(IRREPR,ISYTYP(2,LISTG))
C
C  FIRST TERM
C
        I000=1
        I010=I000+IINTFP*NUMSYG*DISSYG
        I020=I010+IINTFP*NMSYT1A*DSSYT1A
        I030=I020+IINTFP*NMSYT2A*DSSYT2A
        I040=I030+IINTFP*MAX(NMSYT1A*DSSYT1A,NMSYT2B*DSSYT2B)
        IF(MAXCOR.LT.I040) CALL INSMEM('R2L2RNG',I040,MAXCOR)
        CALL GETLST(ICORE(I020),1,NMSYT2A,1,IRREPR,LIST2A)
        IF(IUHF.EQ.0) THEN
         CALL SSCAL(NMSYT2A*DSSYT2A,TWO,ICORE(I020),1) 
         CALL GETLST(ICORE(I040),1,NMSYT2A,1,IRREPR,LIST2A+2)
         CALL SAXPY (NMSYT2A*DSSYT2A,ONEM,ICORE(I040),1,ICORE(I020),1)
        ENDIF
c        IF(IRREPX.EQ.1) THEN
c         CALL GETLST(ICORE(I010),1,NMSYT2A,1,IRREPL,LIST2AA)
c         IF(IUHF.EQ.0) THEN
c          CALL SSCAL(NMSYT2A*DSSYT2A,TWO,ICORE(I010),1)  
c          CALL GETLST(ICORE(I040),1,NMSYT2A,1,IRREPL,LIST2AA+2)
c          CALL SAXPY (NMSYT2A*DSSYT2A,ONEM,ICORE(I040),1,ICORE(I010),1)
c         ENDIF
c         CALL SAXPY(NMSYT2A*DSSYT2A,R0,ICORE(I010),1,ICORE(I020),1)
c        ENDIF
        CALL GETLST(ICORE(I010),1,NMSYT1A,1,IRREPL,LIST1A)
        IF(IUHF.EQ.0) THEN
         CALL SSCAL(NMSYT1A*DSSYT1A,TWO,ICORE(I010),1)  
         CALL GETLST(ICORE(I040),1,NMSYT1A,1,IRREPL,LIST1A+2)
         CALL SAXPY (NMSYT1A*DSSYT1A,ONEM,ICORE(I040),1,ICORE(I010),1)
        ENDIF
        CALL ZERO(ICORE(I000),DISSYG*NUMSYG)
        CALL XGEMM('N','N',DISSYG,NUMSYG,DSSYT2A,FACT,ICORE(I010),
     &             DSSYT1A,ICORE(I020),DSSYT2A,AZERO,ICORE(I000),
     &             DISSYG)
C
        IF(IUHF.EQ.1) THEN
C
C UHF CODE ONLY
C
         I020=I010+IINTFP*NMSYT1B*DSSYT1B
         I030=I020+IINTFP*NMSYT2B*DSSYT2B
         IF(MAXCOR.LT.I030) CALL INSMEM('R2L2RNG',I030,MAXCOR)
         CALL GETLST(ICORE(I020),1,NMSYT2B,1,IRREPR,LIST2B)
c         IF(IRREPX.EQ.1) THEN
c          CALL GETLST(ICORE(I010),1,NMSYT2B,1,IRREPL,LIST2BB)
c          CALL SAXPY(NMSYT2B*DSSYT2B,R0,ICORE(I010),1,ICORE(I020),1)
c         ENDIF
         CALL GETLST(ICORE(I010),1,NMSYT1B,1,IRREPL,LIST1B)
         CALL XGEMM('N','N',DISSYG,NUMSYG,DSSYT2B,FACT,ICORE(I010),
     &              DSSYT1B,ICORE(I020),DSSYT2B,ONE,ICORE(I000),
     &              DISSYG)
        ENDIF
C
C  SAVE ON LIST 56
C
        CALL PUTLST(ICORE(I000),1,NUMSYG,2,IRREPR,LISTG) 
C
C  EVALUATE FOR UHF AS WELL ABBA
C     
c           LIST3A=435
c           LIST4A=456
c           LIST3B=436
c           LIST4B=454
c           LIST4AA=36
c           LIST4BB=34
C     
        IF(IUHF.EQ.1) THEN
         DSSYT3A=IRPDPD(IRREPR,ISYTYP(1,LIST3A))
         DSSYT4A=IRPDPD(IRREPL,ISYTYP(1,LIST4A))
         NMSYT3A=IRPDPD(IRREPL,ISYTYP(2,LIST3A))
         NMSYT4A=IRPDPD(IRREPR,ISYTYP(2,LIST4A))
         DSSYT3B=IRPDPD(IRREPR,ISYTYP(1,LIST3B))
         DSSYT4B=IRPDPD(IRREPL,ISYTYP(1,LIST4B))
         NMSYT3B=IRPDPD(IRREPL,ISYTYP(2,LIST3B))
         NMSYT4B=IRPDPD(IRREPR,ISYTYP(2,LIST4B))
         DISSYG2=NUMSYG
         NUMSYG2=DISSYG
C
C  FIRST TERM
C
         I010=I000+IINTFP*NUMSYG2*DISSYG2
         I020=I010+IINTFP*NMSYT3A*DSSYT3A
         I030=I020+IINTFP*NMSYT4A*DSSYT4A
         IF(MAXCOR.LT.I030) CALL INSMEM('R2L2RNG',I030,MAXCOR)
         CALL ZERO(ICORE(I000),DISSYG2*NUMSYG2)
         CALL GETLST(ICORE(I020),1,NMSYT4A,1,IRREPR,LIST4A)
c         IF(IRREPX.EQ.1) THEN
c          CALL GETLST(ICORE(I010),1,NMSYT4A,1,IRREPL,LIST4AA)
c          CALL SAXPY(NMSYT4A*DSSYT4A,R0,ICORE(I010),1,ICORE(I020),1)
c         ENDIF
         CALL GETLST(ICORE(I010),1,NMSYT3A,1,IRREPL,LIST3A)
         CALL XGEMM('N','N',DISSYG2,NUMSYG2,DSSYT4A,FACT,ICORE(I010),
     &              DSSYT3A,ICORE(I020),DSSYT4A,AZERO,ICORE(I000),
     &              DISSYG2)
         I020=I010+IINTFP*NMSYT3B*DSSYT3B
         I030=I020+IINTFP*NMSYT4B*DSSYT4B
         IF(MAXCOR.LT.I030) CALL INSMEM('R2L2RNG',I030,MAXCOR)
         CALL GETLST(ICORE(I020),1,NMSYT4B,1,IRREPR,LIST4B)
c         IF(IRREPX.EQ.1) THEN
c          CALL GETLST(ICORE(I010),1,NMSYT4B,1,IRREPL,LIST4BB)
c          CALL SAXPY(NMSYT4B*DSSYT4B,R0,ICORE(I010),1,ICORE(I020),1)
c         ENDIF
         CALL GETLST(ICORE(I010),1,NMSYT3B,1,IRREPL,LIST3B)
         CALL XGEMM('N','N',DISSYG2,NUMSYG2,DSSYT4B,FACT,ICORE(I010),
     &              DSSYT3B,ICORE(I020),DSSYT4B,ONE,ICORE(I000),
     &              DISSYG2)
C
C  SAVE 57 ON DISK
C
         CALL PUTLST(ICORE(I000),1,NUMSYG2,2,IRREPR,LISTG2)
        ENDIF
200    CONTINUE   
C
      ELSEIF(SPCASE.EQ.'ABAB'.OR.SPCASE.EQ.'BABA')THEN
C
C DO SPIN CASES ABAB AND BABA:
C
C     H(MeIa) =  - SUM n,F L(Mn,Fe) R(In,Fa)
C
C  STORAGE  Em, Ai
C
       IF(SPCASE.EQ.'ABAB')THEN
        LISTG=58
        LIST1=439
        LIST2=459
        LIST22=39
        FACT=ONEM
       ELSEIF(SPCASE.EQ.'BABA')THEN
        LISTG=59
        FACT=ONEM
        LIST1=438
        LIST2=458
        LIST22=38
       ENDIF
       DO 300 IRREPR=1,NIRREP
        IRREPL=DIRPRD(IRREPX,IRREPR) 
        DSSYT1=IRPDPD(IRREPR,ISYTYP(1,LIST1))
        DSSYT2=IRPDPD(IRREPR,ISYTYP(1,LIST2))
        NMSYT1=IRPDPD(IRREPL,ISYTYP(2,LIST1))
        NMSYT2=IRPDPD(IRREPL,ISYTYP(2,LIST2))
        DISSYG=IRPDPD(IRREPR,ISYTYP(1,LISTG))
        NUMSYG=IRPDPD(IRREPR,ISYTYP(2,LISTG))
        I000=1
        I010=I000+IINTFP*DISSYG*NUMSYG
        I020=I010+IINTFP*NMSYT1*DSSYT1
        I030=I020+IINTFP*NMSYT2*DSSYT2
        IF(MAXCOR.LT.I030) CALL INSMEM('R2L2RNG',I030,MAXCOR)
        CALL ZERO(ICORE(I000),DISSYG*NUMSYG)
        CALL GETLST(ICORE(I020),1,NMSYT2,1,IRREPL,LIST2)
        IF(IRREPX.EQ.1) THEN
         CALL GETLST(ICORE(I010),1,NMSYT2,1,IRREPL,LIST22)
         CALL SAXPY(NMSYT2*DSSYT2,R0,ICORE(I010),1,ICORE(I020),1)
        ENDIF
        CALL GETLST(ICORE(I010),1,NMSYT1,1,IRREPL,LIST1)
        CALL XGEMM('N','T',DISSYG,NUMSYG,NMSYT1,FACT,ICORE(I010),
     &             DSSYT1,ICORE(I020),DSSYT2,AZERO,ICORE(I000),DISSYG)
C
C SAVE H INTERMEDIATE ON DISK
C
        CALL PUTLST(ICORE(I000),1,NUMSYG,2,IRREPR,LISTG)
        IF(IUHF.EQ.0) THEN
         CALL GETLST(ICORE(I010),1,NUMSYG,1,IRREPR,LISTG-2)
         CALL SAXPY(NUMSYG*DISSYG,HALF,ICORE(I000),1,ICORE(I010),1)
         CALL PUTLST(ICORE(I010),1,NUMSYG,1,IRREPR,LISTG-2)
        ENDIF
C
C
300    CONTINUE
C
      ENDIF
      RETURN
      END

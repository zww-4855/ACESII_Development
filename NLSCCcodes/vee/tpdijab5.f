      SUBROUTINE TPDIJAB5(ICORE,MAXCOR,IUHF)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER POP,VRT
      LOGICAL MBPT2,CC,CCD,RCCD,DRCCD,LCCD,LCCSD
      LOGICAL SS, SD, DS, DD
      DIMENSION ICORE(MAXCOR)
      DIMENSION I0T(2),I0R(2)
C
C CALCULATION OF THE FIFTH GROUP OF IJAB CONTRIBUTIONS TO
C THE EOM-CCSD TWO-PARTICLE DENSITY MATRIX
C
C -1/4 P(IJ) P(AB) R(IM,AE) L(MN,EF) T(M,B) T(J,F)
C
C + 1/4 P(IJ) P(AB) R(IM,AE) L(MN,EF) T(NJ,FB)
C
C - 1/4 P(IJ) P(AB) [R(M,A) T(I,E) + T(M,A) R(I,E) L(MN,EF) T(NJ,FB)
C
C WITH R2+T2*L2 AS INTERMEDIATE
C
C AND
C
C  + 1/8 P(IJ) P(AB) R(IM,AE) L(MN,EF) T(NJ,FB)
C
C  - 1/4 P(IJ) P(AB) R(M,A) T(I,E) L(MN,EF) T(NJ,FB) 
C
C  - 1/4 P(IJ) P(AB) T(M,A) R(I,E) L(MN,EF) T(NJ,FB)
C
C WITH L2*T2 AS INTERMEDIATE
C
C
C NOTE THE T2*L2 INTERMEDIATE IS STORED ON DISK
C   
C       (AS H(ME,IA) = - L(MN,EF)*R(NI,FA)
C
C ON LISTS 254 TO 259
C
C WHILE THE [R2+R2*T2]*L2 INTERMEDIATE IS STORED ON DISK
C
C        (AS H(ME,IA) = - L(MN,EF) (R(NI,FA) )
C
C ON LISTS 54 TO 59
C
C NOTE THAT ACTUALLY 4*G(IJ,AB) IS CALCULATED WHICH MUST BE
C DIVIDED BY TWO AFTER ALL TERMS ARE SUMMED UP.
C
C SCALE G(IJ,AB) WITH HALF BEFORE WRITING BACK TO DISK
C
CEND 
C
C CODED JG OCTOBER/93
C
      COMMON/REFTYPE/MBPT2,CC,CCD,RCCD,DRCCD,LCCD,LCCSD
      COMMON/DRVHBAR/SS, SD, DS, DD
      COMMON/STATSYM/IRREPX
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
C
      DATA HALF,TWO /0.5D0,2.D0/
C
      IF ((MBPT2 .OR. LCCD .OR. LCCSD .OR. RCCD .OR. DRCCD)
     &     .AND. .NOT.DD)   GOTO 250
C
C READ IN T1 AND R1 AMPLITUDES
C
      I0T(1)=1
      I0T(2)=I0T(1)+IRPDPD(1,9)*IINTFP*IUHF
      I0R(1)=I0T(2)+IRPDPD(1,10)*IINTFP
      I0R(2)=I0R(1)+IRPDPD(IRREPX,9)*IINTFP*IUHF
      ISTART=I0R(2)+IRPDPD(IRREPX,10)*IINTFP
C
      CALL GETLST(ICORE(I0R(1)),1,1,1,3,490)
      CALL GETLST(ICORE(I0T(1)),1,1,1,1,90)
      IF(IUHF.EQ.1) THEN
       CALL GETLST(ICORE(I0R(2)),1,1,1,4,490)
       CALL GETLST(ICORE(I0T(2)),1,1,1,2,90)
      ENDIF
C
      DO 100 ISPIN=3-2*IUHF,3
       CALL H4T2ALL(ICORE,MAXCOR,ISTART,I0T,ISPIN,IUHF)
100   CONTINUE
C
      TWO=0.D0
      IF(IUHF.EQ.0)
     &   CALL CHECKGAM1(ICORE(ISTART),16,116,TWO,IUHF,2,VRT)
      IF(IUHF.EQ.1) THEN
       CALL CHECKGAM(ICORE(ISTART),16,116,TWO)
       CALL CHECKGAM(ICORE(ISTART),14,114,TWO)
       CALL CHECKGAM(ICORE(ISTART),15,115,TWO)
      ENDIF
C
      DO 200 ISPIN=3-2*IUHF,3
       CALL H4R2ALL(ICORE,MAXCOR,ISTART,I0T,I0R,ISPIN,IUHF)
200   CONTINUE
C
C SCALE G(IJ,AB) WITH 0.5
C
 250  CONTINUE
      DO 300 ISPIN=3-2*IUHF,3
       LISTG=113+ISPIN
       NSIZE=ISYMSZ(ISYTYP(1,LISTG),ISYTYP(2,LISTG))
       CALL GETALL(ICORE,NSIZE,1,LISTG)
       CALL SSCAL(NSIZE,HALF,ICORE,1)
       CALL PUTALL(ICORE,NSIZE,1,LISTG)
300   CONTINUE
C
C ALL DONE, RETURN
C
      TWO=2.D0
      IF(IUHF.EQ.0)
     &   CALL CHECKGAM1(ICORE,16,116,TWO,IUHF,2,VRT)
      IF(IUHF.EQ.1) THEN
       CALL CHECKGAM(ICORE,16,116,TWO)
       CALL CHECKGAM(ICORE,14,114,TWO)
       CALL CHECKGAM(ICORE,15,115,TWO)
      ENDIF
C
      RETURN
      END

      SUBROUTINE GDENSVO(IRREPXL,IRREPXR,IRREPX,DVO,DOV,R0,L0,ZNORM,
     &                  SCR,MAXCOR,IUHF,
     &                  LSTGRL,LSTGTL,LSTGRLOF,LSTGTLOF,LSTTMP,LSTTMPOF,
     &                  LSTR1,LSTL1,LSTR1OFF,LSTL1OFF,LISTR2,LISTL2,
     &                  LSTR2RS,LSTL2RS)
C
C THIS ROUTINE CALCULATES ALL CONTRIBUTIONS TO THE VIRTUAL-OCCUPIED
C EXCITED STATE DENSITY APART FROM THE R0 CONTRIBUTIONS
C
C                         +
C     DE = <0| L exp(-T) p q exp(T) R |0>
C
C
C DEVO(ai) =   R(ai,em) * L(em) + GRL'(ae)*T(ei) + GTL(ae)*T(ei)
C
C             - T(am) * GRL'(mi)  - T(am) * GTL(mi)
C
C
CEND
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DOUBLE PRECISION L0
      INTEGER DIRPRD,POP,VRT
      LOGICAL MBPT2,CC,CCD,RCCD,DRCCD,LCCD,LCCSD,CC2
      DIMENSION SCR(MAXCOR),DVO(*),DOV(*)
      DIMENSION I0R1(2),I0T1(2),I0L1(2),I0GRLPIJ(2),I0GRLPAB(2)
      DIMENSION I0GTLIJ(2),I0GRLIJ(2),I0GTLAB(2),I0GRLAB(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/SYMLOC/ISYMOFF(8,8,25)
      COMMON/REFTYPE/MBPT2,CC,CCD,RCCD,DRCCD,LCCD,LCCSD,CC2
C
      DATA ONE,ONEM,ZILCH /1.0D0,-1.0D0,0.0D0/
C
      I0GRLIJ(1) =1
      I0GRLPIJ(1)=I0GRLIJ(1)+IRPDPD(IRREPX,21)
      I0GTLIJ(1) =I0GRLPIJ(1)+IRPDPD(IRREPX,21)
      I0GRLAB(1) =I0GTLIJ(1)+IRPDPD(IRREPXL,21)
      I0GRLPAB(1)=I0GRLAB(1)+IRPDPD(IRREPX,19)
      I0GTLAB(1) =I0GRLPAB(1)+IRPDPD(IRREPX,19)
      I0T1   (1) =I0GTLAB(1)+IRPDPD(IRREPXL,19)
      I0R1   (1) =I0T1(1)+IRPDPD(1,9)
      I0L1   (1) =I0R1(1)+IRPDPD(IRREPXR,9)
      IF(LSTGRL.NE.-1)THEN
       CALL GETLST(SCR(I0GRLIJ(1)),1,1,1,1+LSTGRLOF,LSTGRL+91)
       CALL GETLST(SCR(I0GRLAB(1)),1,1,1,1+LSTGRLOF,LSTGRL+92)
       CALL GETLST(SCR(I0R1(1)),1,1,1,1+LSTR1OFF,LSTR1)
      ENDIF
      CALL GETLST(SCR(I0GTLIJ(1)),1,1,1,1+LSTGTLOF,LSTGTL+91)
      CALL GETLST(SCR(I0GTLAB(1)),1,1,1,1+LSTGTLOF,LSTGTL+92)
      CALL GETLST(SCR(I0T1(1)),1,1,1,1,90)
      CALL GETLST(SCR(I0L1(1)),1,1,1,1+LSTL1OFF,LSTL1)
      IF(IUHF.NE.0)THEN
       I0GRLIJ(2) =I0L1(1)+IRPDPD(IRREPXL,9)
       I0GRLPIJ(2)=I0GRLIJ(2)+IRPDPD(IRREPX,22)
       I0GTLIJ(2) =I0GRLPIJ(2)+IRPDPD(IRREPX,22)
       I0GRLAB(2) =I0GTLIJ(2)+IRPDPD(IRREPXL,22)
       I0GRLPAB(2)=I0GRLAB(2)+IRPDPD(IRREPX,20)
       I0GTLAB(2) =I0GRLPAB(2)+IRPDPD(IRREPX,20)
       I0T1   (2) =I0GTLAB(2)+IRPDPD(IRREPXL,20)
       I0R1   (2) =I0T1(2)+IRPDPD(1,10)
       I0L1   (2) =I0R1(2)+IRPDPD(IRREPXR,10)
       IF(LSTGRL.NE.-1)THEN
        CALL GETLST(SCR(I0GRLIJ(2)),1,1,1,2+LSTGRLOF,LSTGRL+91)
        CALL GETLST(SCR(I0GRLAB(2)),1,1,1,2+LSTGRLOF,LSTGRL+92)
        CALL GETLST(SCR(I0R1(2)),1,1,1,2+LSTR1OFF,LSTR1)
       ENDIF
       CALL GETLST(SCR(I0GTLIJ(2)),1,1,1,2+LSTGTLOF,LSTGTL+91)
       CALL GETLST(SCR(I0GTLAB(2)),1,1,1,2+LSTGTLOF,LSTGTL+92)
       CALL GETLST(SCR(I0T1(2)),1,1,1,2,90)
       CALL GETLST(SCR(I0L1(2)),1,1,1,2+LSTL1OFF,LSTL1)
      ELSE
       I0GTLIJ(2) =I0GTLIJ(1)
       I0GRLIJ(2) =I0GRLIJ(1)
       I0GRLPIJ(2)=I0GRLPIJ(1)
       I0GRLPAB(2)=I0GRLPAB(1)
       I0GRLAB(2) =I0GRLAB(1)
       I0GTLAB(2) =I0GTLAB(1)
       I0T1   (2) =I0T1(1)
       I0R1   (2) =I0R1(1)
       I0L1   (2) =I0L1(1)
      ENDIF
      ITOP=I0L1(2)+IRPDPD(IRREPXL,10)
      ITOP2=ITOP+2*MAX(IRPDPD(IRREPX,9),IRPDPD(IRREPX,10))*10
C
      DO 4 ISPIN=1,1+IUHF
C
C CALCULATE DOV(ai)-R0*L(ai) FOR FUTURE USE
C
       IDVO=1+(ISPIN-1)*IRPDPD(IRREPX,9)
       CALL SAXPY (IRPDPD(IRREPX,8+ISPIN),-R0,SCR(I0L1(ISPIN)),1,
     &             DOV(IDVO),1)
       CALL PUTLST(DOV(IDVO),1,1,1,LSTTMPOF+ISPIN,LSTTMP)
4     CONTINUE
C
      DO 10 ISPIN=1,1+IUHF
C
       IDVO=1+(ISPIN-1)*IRPDPD(IRREPX,9)
       LENGTH=IRPDPD(IRREPX,8+ISPIN)
C
C CALCULATE PRIMED G INTERMEDIATES
C
       IF(LSTGRL.NE.-1)THEN
        CALL MODGIJ(IRREPX,IRREPXR,IRREPXL,SCR(I0GRLPIJ(ISPIN)),
     &              SCR(I0GRLIJ(ISPIN)),SCR(I0R1(ISPIN)),
     &              SCR(I0L1(ISPIN)),ISPIN,ONEM)
        CALL MODGAB(IRREPX,IRREPXR,IRREPXL,SCR(I0GRLPAB(ISPIN)),
     &              SCR(I0GRLAB(ISPIN)),SCR(I0R1(ISPIN)),
     &              SCR(I0L1(ISPIN)),ISPIN,ONE)
C
C EVALUATE L(em) * R(ai,em) CONTRIBUTION AND ADD TO R0 PART
C
        CALL GT2XF(SCR(ITOP),IRREPXR,IRREPXL,LSTR2RS,LSTL1,LSTL1OFF,
     &             SCR(ITOP2),MAXCOR,IUHF,ISPIN)
        CALL SAXPY(LENGTH,ONE,SCR(ITOP),1,DVO(IDVO),1)
       ENDIF
C
C ADD IN (ZNORM - R0) * T1
C
c       FACT=ZNORM-R0
       FACT=ZNORM
       IF(IRREPX.EQ.1)THEN
        CALL SAXPY(LENGTH,FACT,SCR(I0T1(ISPIN)),1,DVO(IDVO),1)
       ENDIF
C
C NOW ADD IN T(ai,em) * [DOV(em)-R0*L(em)] CONTRIBUTION
C
       IBOT=ITOP+LENGTH
       CALL GT2XF(SCR(ITOP),1,IRREPX,34,LSTTMP,LSTTMPOF,
     &            SCR(IBOT),MAXCOR,IUHF,ISPIN)
       CALL SAXPY(LENGTH,ONE,SCR(ITOP),1,DVO(IDVO),1)
C
       DO 20 IRREPI=1,NIRREP
        IRREPA=DIRPRD(IRREPI,IRREPX)
        IRREPE=IRREPI
        IRREPM=IRREPA
        IRREPF=DIRPRD(IRREPI,IRREPXR)
        IRREPN=DIRPRD(IRREPI,IRREPXL)
        NUMI=POP(IRREPI,ISPIN)
        NUMA=VRT(IRREPA,ISPIN)
        NUME=VRT(IRREPE,ISPIN)
        NUMF=VRT(IRREPF,ISPIN)
        NUMM=POP(IRREPM,ISPIN)
        NUMN=POP(IRREPN,ISPIN)
        IOFFD=(ISPIN-1)*IRPDPD(IRREPX,9)+
     &        ISYMOFF(IRREPI,IRREPX,8+ISPIN)
C
C CONTRACTION I :  GRL'(ae) * T(ei)
C
       IF (CC) THEN
         IOFFT=I0T1(ISPIN)+ISYMOFF(IRREPI,1,8+ISPIN)-1
         IOFFG=I0GRLPAB(ISPIN)+ISYMOFF(IRREPE,IRREPX,18+ISPIN)-1
         IF(LSTGRL.NE.-1)THEN
          CALL XGEMM('N','N',NUMA,NUMI,NUME,ONEM,SCR(IOFFG),NUMA,
     &               SCR(IOFFT),NUME,ONE,DVO(IOFFD),NUMA)
         ENDIF
       ENDIF
C
C CONTRACTION II  :  GTL(af) * R(fi)
C
        IOFFG=I0GTLAB(ISPIN)+ISYMOFF(IRREPF,IRREPXL,18+ISPIN)-1
        IOFFR=I0R1(ISPIN)+ISYMOFF(IRREPI,IRREPXR,8+ISPIN)-1
        IF(LSTGRL.NE.-1)THEN
         CALL XGEMM('N','N',NUMA,NUMI,NUMF,ONEM,SCR(IOFFG),NUMA,
     &              SCR(IOFFR),NUMF,ONE,DVO(IOFFD),NUMA)
        ENDIF
C
C CONTRACTION III :  T(am) * GRL'(im)
C
        IF (CC) THEN
          IOFFT=I0T1(ISPIN)+ISYMOFF(IRREPM,1,8+ISPIN)-1
          IOFFG=I0GRLPIJ(ISPIN)+ISYMOFF(IRREPM,IRREPX,20+ISPIN)-1
          IF(LSTGRL.NE.-1)THEN
           CALL XGEMM('N','T',NUMA,NUMI,NUMM,ONE,SCR(IOFFT),NUMA,
     &                SCR(IOFFG),NUMI,ONE,DVO(IOFFD),NUMA)
         ENDIF
       ENDIF
C
C CONTRACTION IV  : - R(an) * GTL(in)
C
        IOFFT=I0T1(ISPIN)+ISYMOFF(IRREPN,1,8+ISPIN)-1
        IOFFG=I0GTLIJ(ISPIN)+ISYMOFF(IRREPN,IRREPXL,20+ISPIN)-1
        IOFFR=I0R1(ISPIN)+ISYMOFF(IRREPN,IRREPXR,8+ISPIN)-1
        IF(LSTGRL.NE.-1)THEN
         CALL XGEMM('N','T',NUMA,NUMI,NUMN,ONE,SCR(IOFFR),NUMA,
     &              SCR(IOFFG),NUMI,ONE,DVO(IOFFD),NUMA)
        ENDIF
C
C CONTRACTION V   : DOV(em) * T(ei) * T(am)
C
        IF (CC) THEN
          IOFFDOV=(ISPIN-1)*IRPDPD(IRREPX,9)+
     &            ISYMOFF(IRREPM,IRREPX,8+ISPIN)
          IOFFT=I0T1(ISPIN)+ISYMOFF(IRREPI,1,8+ISPIN)-1
          CALL XGEMM('T','N',NUMM,NUMI,NUME,ONE,DOV(IOFFDOV),NUME,
     &               SCR(IOFFT),NUME,ZILCH,SCR(ITOP),NUMM)
          IOFFT=I0T1(ISPIN)+ISYMOFF(IRREPM,1,8+ISPIN)-1
          CALL XGEMM('N','N',NUMA,NUMI,NUMM,ONEM,SCR(IOFFT),NUMA,
     &               SCR(ITOP),NUMM,ONE,DVO(IOFFD),NUMA) 
        ENDIF
C
20     CONTINUE
C
       CALL SAXPY (LENGTH,R0,SCR(I0L1(ISPIN)),1,DOV(IDVO),1)
C
       IF(LSTR1.NE.-1)THEN
        CALL SAXPY (LENGTH,L0,SCR(I0R1(ISPIN)),1,DVO(IDVO),1)
       ENDIF
  
10    CONTINUE
C
      RETURN
      END

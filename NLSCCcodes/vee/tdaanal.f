      SUBROUTINE TDAANAL(VECTOR,ISCR,IUHF,IRREPX)
C
C ANALYZE TDA VECTOR FOR DOMINANT TRANSITION
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,POP,VRT
      LOGICAL DOUBLE,NONSTD
      CHARACTER*5 SP(2)
      DIMENSION VECTOR(*),ISCR(*)
      DIMENSION IOFFO(8,2),IOFFV(8,2)
C
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYMINF/NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON/GUESS/DOUBLE,NONSTD
      COMMON/FLAGS/IFLAGS(100)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/INFO/NOCCO(2),NVRTO(2)
C
      DATA SP /'ALPHA','BETA '/
      DATA ZILCH /0.0D0/
C
      INDX(I,J,N)=I+(J-1)*N
      IGETI(LSTELM,NUMA)=1+(LSTELM-1)/NUMA
      IGETA(LSTELM,NUMA)=LSTELM-(IGETI(LSTELM,NUMA)-1)*NUMA
C
      NBAS=NOCCO(1)+NVRTO(1)
      WRITE(6,1000)
1000  FORMAT(T3,'Dominant contributions: ')
C
C CALCULATE OFFSETS
C
      DO 1 ISPIN=1,1+IUHF
       IOFFO(1,ISPIN)=0
       IOFFV(1,ISPIN)=0
       DO 2 IRREP=1,NIRREP-1
        IOFFO(IRREP+1,ISPIN)=IOFFO(IRREP,ISPIN)+POP(IRREP,ISPIN)
        IOFFV(IRREP+1,ISPIN)=IOFFV(IRREP,ISPIN)+VRT(IRREP,ISPIN)
2      CONTINUE
1     CONTINUE
C
      IOFF=1
      DO 10 ISPIN=1,1+IUHF
       LENGTH=IRPDPD(IRREPX,8+ISPIN)
C
C CALCULATE SYMMETRY VECTORS  FOR AI => AI (FULL)
C
       ITHRU=0
       DO 11 IRREPI=1,NIRREP
        IRREPA=DIRPRD(IRREPI,IRREPX)
        NUMI=POP(IRREPI,ISPIN)
        NUMA=VRT(IRREPA,ISPIN)
        DO 12 INDI=1,NUMI
         DO 13 INDA=1,NUMA
          ITHRU=ITHRU+1
          INDABSI=INDI+IOFFO(IRREPI,ISPIN)
          INDABSA=INDA+IOFFV(IRREPA,ISPIN)
          ISCR(ITHRU)=INDX(INDABSA,INDABSI,NVRTO(ISPIN))
13       CONTINUE
12      CONTINUE
11     CONTINUE
C
       NGET=0
7      NGET=NGET+1
       ILARGE=ISAMAX(LENGTH,VECTOR(IOFF),1)
       XMAX=VECTOR(ILARGE-1+IOFF)
       VECTOR(ILARGE-1+IOFF)=ZILCH
       IPOSABS=ISCR(ILARGE)
C
       IF(ABS(XMAX).GT.0.2D0.OR.NGET.EQ.1)THEN 
        INDXI=IGETI(IPOSABS,NVRTO(ISPIN))
        INDXA=IGETA(IPOSABS,NVRTO(ISPIN))+NOCCO(ISPIN)
        WRITE(6,1001)INDXI,INDXA,XMAX,SP(ISPIN)
        IF (NGET.EQ.1 .AND. ISPIN .EQ. 1) THEN
          INDXMXI = INDXI
          INDXMXA = INDXA
        ENDIF
        IF(NGET.LE.LENGTH)GOTO 7 
       ENDIF
1001   FORMAT(T3,'[',I3,'->',I3,'] (',F7.5,') ',A5)
       IOFF=IOFF+LENGTH
C
10    CONTINUE
C
      IONE=1
C
      IF(IFLAGS(54).NE.0.AND..NOT.NONSTD)THEN
       CALL GETREC(20,'JOBARC','SCFEVALA',NBAS*IINTFP,ISCR)
       CALL PUTREC(20,'JOBARC','PRINFROM',IINTFP,
     &             ISCR(1+IINTFP*(INDXMXI-1)))
       CALL PUTREC(20,'JOBARC','PRININTO',IINTFP,
     &             ISCR(1+IINTFP*(INDXMXA-1)))
       CALL PUTREC(20,'JOBARC','PRINSPIN',IONE,Ione)
      ENDIF
C
      RETURN
      END

      SUBROUTINE DUHFRNG(ICORE,MAXCOR,IUHF,IRREPX,DISCO,INCREM,
     &                   LISTT0,LISTW0,LISTZ0,LSTTMP0,ISIDE)
C
C THIS SUBROUTINE CALCULATES THE RING CONTRIBUTION FOR UHF REFERENCES
C
C  Z(ab,ij) = T(ae,im) <mb||ej> + T(be,jm) <ma||ei> 
C             
C           - T(be,im) <ma||ej> - T(ae,jm) <mb||ei>
C
C UHF SPIN CASES :
C
C  Z(AB,IJ) = T(AE,IM) <MB||EJ> + T(Ae,Im) <mB||eJ> + ANTISYMMETRIZATION
C
C  Z(Ab,Ij) = T(AE,IM) <Mb|Ej> + T(Ae,Im) <mb||ej> 
C
C           + T(be,jm) <mA|eI> + T(bE,jM) <MA||EI>
C
C           - T(Eb,Im) <Am|Ej> -  T(Ae,Mj) <Mb|Ie>
C
CEND
      IMPLICIT INTEGER (A-Z)
      CHARACTER*4 SPCASE(2)
      CHARACTER*1 MATTYP(2),TP,TP2
      DOUBLE PRECISION ONE,ONEM,ZILCH
      LOGICAL DISCO,INCREM
      LOGICAL MBPT2,CC,CCD,RCCD,DRCCD,LCCD,LCCSD,CC2
C
      DIMENSION ICORE(MAXCOR)
C
      COMMON /MACHSP/ IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON /SYMINF/ NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON /SYM/ POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON /SYMPOP/ IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON /REFTYPE/ MBPT2,CC,CCD,RCCD,DRCCD,LCCD,LCCSD,CC2
C
      DATA ONE  /1.0/
      DATA ONEM /-1.0/
      DATA ZILCH/0.0/
      DATA SPCASE /'AAAA','BBBB'/
      DATA MATTYP/'N','T'/
C
      TP=MATTYP(ISIDE)
      TP2=MATTYP(3-ISIDE)
C
C SPIN CASES AAAA AND BBBB
C
      DO 50 ISPIN=1,2
       LSTTMP=LSTTMP0-1+ISPIN
       DO 100 IRREPZR=1,NIRREP
        IRREPZL=DIRPRD(IRREPZR,IRREPX)
        DISSYZ=IRPDPD(IRREPZL,ISYTYP(1,LSTTMP))
        NUMDSZ=IRPDPD(IRREPZR,ISYTYP(2,LSTTMP))
        I000=1
        I010=I000+IINTFP*DISSYZ*NUMDSZ
        IRREPW=IRREPZR
        IRREPTR=IRREPZR
        IRREPTL=IRREPZL
C
C    Z(AI,BJ) = T(AI,EM) * W(EM,BJ)
C
        LISTW=LISTW0-1+ISPIN
        LISTT=LISTT0-1+ISPIN
        DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTT))
        NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTT))
        DISSYW=IRPDPD(IRREPW,ISYTYP(1,LISTW))
        NUMDSW=IRPDPD(IRREPW,ISYTYP(2,LISTW))
        I020=I010+IINTFP*DISSYT*NUMDST
        I030=I020+IINTFP*DISSYW*NUMDSW
        CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
        CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPW,LISTW)
        IF(ISIDE.EQ.1)THEN
         NCOL=NUMDSW
         NSUM=DISSYW
        ELSE
         NSUM=NUMDSW
         NCOL=DISSYW
        ENDIF
        IF (CC2) THEN
        CALL ZERO(ICORE(I000),DISSYZ*NUMDSZ)
        ELSE
        CALL XGEMM('N',TP,DISSYT,NCOL,NSUM,ONE,ICORE(I010),
     &             DISSYT,ICORE(I020),DISSYW,ZILCH,ICORE(I000),
     &             DISSYZ)
        ENDIF
C
C     Z(AI,BJ) = Z(AI,BJ) + T(AI,em) * W(em,BJ) [ISPIN=1]
C
C     Z(ai,bj) = Z(ai,bj) + T(ai,EM) * W(EM,bj) [ISPIN=2]
C
        IF(ISIDE.EQ.1)THEN
         LISTW=LISTW0-1+5-ISPIN
        ELSE
         LISTW=LISTW0-1+2+ISPIN
        ENDIF
        LISTT=LISTT0-1+5-ISPIN
        DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTT))
        NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTT))
        DISSYW=IRPDPD(IRREPW,ISYTYP(1,LISTW))
        NUMDSW=IRPDPD(IRREPW,ISYTYP(2,LISTW))
        I020=I010+IINTFP*DISSYT*NUMDST
        I030=I020+IINTFP*DISSYW*NUMDSW
        CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
        CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPW,LISTW)
        IF(ISIDE.EQ.1)THEN
         NCOL=NUMDSW
         NSUM=DISSYW
        ELSE
         NSUM=NUMDSW
         NCOL=DISSYW
        ENDIF
        IF (.NOT. CC2) THEN
        
        CALL XGEMM('N',TP,DISSYT,NCOL,NSUM,ONE,ICORE(I010),
     &             DISSYT,ICORE(I020),DISSYW,ONE,ICORE(I000),
     &             DISSYZ)
        ENDIF 
C
C DISCO CONTRIBUTION: Z(AI,BJ) = T(AI) * F(BJ)
C
        IF(DISCO.AND.IRREPZR.EQ.1)THEN
         I020=I010+IINTFP*NT(ISPIN)
         I030=I020+IINTFP*IRPDPD(IRREPX,8+ISPIN)
         CALL GETLST(ICORE(I010),1,1,1,ISPIN,93)
         CALL GETLST(ICORE(I020),1,1,1,ISPIN,490)
         NROW=IRPDPD(IRREPX,8+ISPIN)
         NCOL=NT(ISPIN)
         CALL XGEMM('N','N',NROW,NCOL,1,ONE,ICORE(I020),NROW,
     &              ICORE(I010),1,ONE,ICORE(I000),NROW)
        ENDIF
        IF(INCREM)THEN
         CALL GETLST(ICORE(I010),1,NUMDSZ,1,IRREPZR,LSTTMP)
         CALL SAXPY (NUMDSZ*DISSYZ,ONEm,ICORE(I010),1,ICORE(I000),1)
        ENDIF
C
        CALL PUTLST(ICORE(I000),1,NUMDSZ,1,IRREPZR,LSTTMP)
C
100    CONTINUE
       ISIZE=IDSYMSZ(IRREPX,ISYTYP(1,LSTTMP),ISYTYP(2,LSTTMP))
       I000=1
       I010=I000+ISIZE*IINTFP
       I020=I010+ISIZE*IINTFP
       CALL GETALL(ICORE(I000),ISIZE,IRREPX,LSTTMP)
       CALL DSST03I(ICORE(I000),ICORE(I010),ISIZE,ISIZE,ICORE(I020),
     &             SPCASE(ISPIN),IRREPX)
       LISTZ=LISTZ0-1+ISPIN
       ISIZE=IDSYMSZ(IRREPX,ISYTYP(1,LISTZ),ISYTYP(2,LISTZ))
       CALL GETALL(ICORE(I000),ISIZE,IRREPX,LISTZ)
       CALL SAXPY (ISIZE,ONE,ICORE(I010),1,ICORE(I000),1)
       CALL PUTALL(ICORE(I000),ISIZE,IRREPX,LISTZ)
C
50    CONTINUE
C
C NOW DO ABAB SPIN CASE = FIRST PART WITH AI,bj PRODUCT 
C
      LSTTMPA=LSTTMP0-1+3
      DO 200 IRREPZR=1,NIRREP
       IRREPZL=DIRPRD(IRREPZR,IRREPX)
       DISSYZ=IRPDPD(IRREPZL,ISYTYP(1,LSTTMPA))
       NUMDSZ=IRPDPD(IRREPZR,ISYTYP(2,LSTTMPA))
       I000=1
       I010=I000+IINTFP*DISSYZ*NUMDSZ
C
       IRREPW=IRREPZR
       IRREPTR=IRREPZR
       IRREPTL=IRREPZL
C
C    Z(AI,bj) = T(AI,EM) * W(EM,bj)
C
       IF(ISIDE.EQ.1)THEN
        LISTW=LISTW0-1+3
       ELSE
        LISTW=LISTW0-1+4
       ENDIF
       LISTT=LISTT0-1+1
       DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTT))
       NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTT))
       DISSYW=IRPDPD(IRREPW,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD(IRREPW,ISYTYP(2,LISTW))
       I020=I010+IINTFP*DISSYT*NUMDST
       I030=I020+IINTFP*DISSYW*NUMDSW
       CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
       CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPW,LISTW)
       IF(ISIDE.EQ.1)THEN
        NCOL=NUMDSW
        NSUM=DISSYW
       ELSE
        NSUM=NUMDSW
        NCOL=DISSYW
       ENDIF
       IF (CC2) THEN
       CALL ZERO(ICORE(I000),DISSYZ*NUMDSZ)
       ELSE
       CALL XGEMM('N',TP,DISSYT,NCOL,NSUM,ONE,ICORE(I010),
     &            DISSYT,ICORE(I020),DISSYW,ZILCH,ICORE(I000),
     &            DISSYZ)
       ENDIF
C
C    Z(AI,bj) = Z(AI,bj) + T(AI,em) * W(em,bj)
C
       LISTW=LISTW0-1+2
       LISTT=LISTT0-1+4
       DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTT))
       NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTT))
       DISSYW=IRPDPD(IRREPW,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD(IRREPW,ISYTYP(2,LISTW))
       I020=I010+IINTFP*DISSYT*NUMDST
       I030=I020+IINTFP*DISSYW*NUMDSW
       CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
       CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPW,LISTW)
       IF(ISIDE.EQ.1)THEN
        NCOL=NUMDSW
        NSUM=DISSYW
       ELSE
        NSUM=NUMDSW
        NCOL=DISSYW
       ENDIF
       IF (.NOT. CC2) THEN
       CALL XGEMM('N',TP,DISSYT,NUMDSW,DISSYW,ONE,ICORE(I010),
     &            DISSYT,ICORE(I020),DISSYW,ONE,ICORE(I000),
     &            DISSYZ)
       ENDIF 
C
C DISCO CONTRIBUTION: Z(AI,bj) = T(AI) * F(bj)
C
       IF(DISCO.AND.IRREPZR.EQ.1)THEN
        I020=I010+IINTFP*NT(2)
        I030=I020+IINTFP*IRPDPD(IRREPX,9)
        CALL GETLST(ICORE(I010),1,1,1,2,93)
        CALL GETLST(ICORE(I020),1,1,1,1,490)
        NROW=IRPDPD(IRREPX,9)
        NCOL=NT(2)
        CALL XGEMM('N','N',NROW,NCOL,1,ONEM,ICORE(I020),NROW,
     &             ICORE(I010),1,ONE,ICORE(I000),NROW)
       ENDIF
C
       IRREPW=IRREPZL
       IRREPTR=IRREPZR
       IRREPTL=IRREPZL
C
C                                  +
C    Z(AI,bj) = Z(AI,bj) + W(em,AI) * T(em,bj)
C
       IF(ISIDE.EQ.1)THEN
        LISTW=LISTW0-1+4
       ELSE
        LISTW=LISTW0-1+3
       ENDIF
       LISTT=LISTT0-1+2
       DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTT))
       NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTT))
       DISSYW=IRPDPD(IRREPW,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD(IRREPW,ISYTYP(2,LISTW))
       I020=I010+IINTFP*DISSYT*NUMDST
       I030=I020+IINTFP*DISSYW*NUMDSW
       CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
       CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPW,LISTW)
       IF(ISIDE.EQ.1)THEN
        NROW=NUMDSW
       ELSE
        NROW=DISSYW
       ENDIF
       IF (.NOT. CC2) THEN
       CALL XGEMM(TP2,'N',NROW,NUMDST,DISSYT,ONE,ICORE(I020),
     &            DISSYW,ICORE(I010),DISSYT,ONE,ICORE(I000),
     &            DISSYZ)
       ENDIF 
C
C                                  +
C    Z(AI,bj) = Z(AI,bj) + W(EM,AI) * T(EM,bj)
C
       LISTW=LISTW0-1+1
       LISTT=LISTT0-1+4
       DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTT))
       NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTT))
       DISSYW=IRPDPD(IRREPW,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD(IRREPW,ISYTYP(2,LISTW))
       I020=I010+IINTFP*DISSYT*NUMDST
       I030=I020+IINTFP*DISSYW*NUMDSW
       CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
       CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPW,LISTW)
       IF(ISIDE.EQ.1)THEN
        NROW=NUMDSW
       ELSE
        NROW=DISSYW
       ENDIF
       IF (.NOT. CC2) THEN
       CALL XGEMM(TP2,'N',NROW,NUMDST,DISSYT,ONE,ICORE(I020),
     &            DISSYW,ICORE(I010),DISSYT,ONE,ICORE(I000),
     &            DISSYZ)
       ENDIF 
C
C DISCO CONTRIBUTION: Z(AI,bj) = F(AI) * T(bj)
C
       IF(DISCO.AND.IRREPZL.EQ.1)THEN
        I020=I010+IINTFP*IRPDPD(IRREPX,10)
        I030=I020+IINTFP*NT(1)
        CALL GETLST(ICORE(I010),1,1,1,2,490)
        CALL GETLST(ICORE(I020),1,1,1,1,93)
        NROW=NT(1)
        NCOL=IRPDPD(IRREPX,10)
        CALL XGEMM('N','N',NROW,NCOL,1,ONEM,ICORE(I020),NROW,
     &             ICORE(I010),1,ONE,ICORE(I000),NROW)
       ENDIF
       IF(INCREM)THEN
        CALL GETLST(ICORE(I010),1,NUMDSZ,1,IRREPZR,LSTTMPA)
        CALL SAXPY (NUMDSZ*DISSYZ,ONEm,ICORE(I010),1,ICORE(I000),1)
       ENDIF
       CALL PUTLST(ICORE(I000),1,NUMDSZ,1,IRREPZR,LSTTMPA)
C
200   CONTINUE
C
C NOW DO ABAB SPIN CASE = FIRST PART WITH Aj,bI PRODUCT
C
      LSTTMPB=LSTTMP0-1+4
      DO 300 IRREPZR=1,NIRREP
       IRREPZL=DIRPRD(IRREPZR,IRREPX)
       DISSYZ=IRPDPD(IRREPZL,ISYTYP(1,LSTTMPB))
       NUMDSZ=IRPDPD(IRREPZR,ISYTYP(2,LSTTMPB))
       I000=1
       I010=I000+IINTFP*DISSYZ*NUMDSZ
C
       IRREPW=IRREPZL
       IRREPTR=IRREPZR
       IRREPTL=IRREPZL
C
C                       +
C    Z(Aj,bI) = W(Em,Aj) * T(Em,bI)
C
       LISTW=LISTW0-1+5
       LISTT=LISTT0-1+6
       DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTT))
       NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTT))
       DISSYW=IRPDPD(IRREPW,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD(IRREPW,ISYTYP(2,LISTW))
       I020=I010+IINTFP*DISSYT*NUMDST
       I030=I020+IINTFP*DISSYW*NUMDSW
       CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
       CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPW,LISTW)
       IF(ISIDE.EQ.1)THEN
        NROW=NUMDSW
       ELSE
        NROW=DISSYW
       ENDIF

       IF (CC2) THEN
       CALL ZERO(ICORE(I000),DISSYZ*NUMDSZ)
       ELSE
       CALL XGEMM(TP2,'N',NROW,NUMDST,DISSYT,ONE,ICORE(I020),
     &            DISSYW,ICORE(I010),DISSYT,ZILCH,ICORE(I000),
     &            DISSYZ)
       ENDIF 
C
       IRREPW=IRREPZR
       IRREPTR=IRREPZR
       IRREPTL=IRREPZL
C
C    Z(Aj,bI) = Z(Aj,bI) + T(Aj,eM) * W(eM,bI)
C
       LISTW=LISTW0-1+6
       LISTT=LISTT0-1+6
       DISSYT=IRPDPD(IRREPTL,ISYTYP(1,LISTT))
       NUMDST=IRPDPD(IRREPTR,ISYTYP(2,LISTT))
       DISSYW=IRPDPD(IRREPW,ISYTYP(1,LISTW))
       NUMDSW=IRPDPD(IRREPW,ISYTYP(2,LISTW))
       I020=I010+IINTFP*DISSYT*NUMDST
       I030=I020+IINTFP*DISSYW*NUMDSW
       CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPTR,LISTT)
       CALL GETLST(ICORE(I020),1,NUMDSW,1,IRREPW,LISTW)
       IF(ISIDE.EQ.1)THEN
        NCOL=NUMDSW
        NSUM=DISSYW
       ELSE
        NSUM=NUMDSW
        NCOL=DISSYW
       ENDIF
       IF (.NOT. CC2) THEN
       CALL XGEMM('N',TP,DISSYT,NCOL,NSUM,ONE,ICORE(I010),
     &            DISSYT,ICORE(I020),DISSYW,ONE,ICORE(I000),
     &            DISSYZ)
       ENDIF 
C
       CALL PUTLST(ICORE(I000),1,NUMDSZ,1,IRREPZR,LSTTMPB)
C
300   CONTINUE
C
C NOW ADD Z(AI,bj) AND Z(Aj,bI) INCREMENTS
C
      ISIZE=IDSYMSZ(IRREPX,ISYTYP(1,LSTTMPA),ISYTYP(2,LSTTMPA))
      I000=1
      I010=I000+IINTFP*ISIZE
      I020=I010+IINTFP*ISIZE
      CALL GETALL (ICORE(I000),ISIZE,IRREPX,LSTTMPB)
      CALL SSTGEN (ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,2),
     &             VRT(1,2),POP(1,1),ICORE(I020),IRREPX,'1432')
      CALL GETALL (ICORE(I000),ISIZE,IRREPX,LSTTMPA)
      CALL SAXPY  (ISIZE,ONE,ICORE(I010),1,ICORE(I000),1)
      CALL SSTGEN (ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,1),
     &             VRT(1,2),POP(1,2),ICORE(I020),IRREPX,'1324')
      CALL GETALL (ICORE(I000),ISIZE,IRREPX,LISTZ0+2)
      CALL SAXPY  (ISIZE,ONEM,ICORE(I010),1,ICORE(I000),1)
      CALL PUTALL (ICORE(I000),ISIZE,IRREPX,LISTZ0+2)
C
      RETURN
      END

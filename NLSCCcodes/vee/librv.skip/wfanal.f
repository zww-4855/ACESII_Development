      SUBROUTINE WFANAL(ICORE,MAXCOR,IUHF,LISTT2,LISTR2,LISTL2,
     &                  LISTT2RS,LISTR2RS,LISTL2RS,
     &                  LISTT1,LISTR1,LISTL1,I0FT1,I0FR1,I0FL1,
     &                  IRREPX,R0,L0)
C
C THIS ROUTINE CALCULATES PROJECTIONS OF THE RIGHT- AND LEFT-HAND
C WAVEFUNCTIONS ONTO THE REFERENCE FUNCTION, SINGLE AND DOUBLE
C EXCITATION SPACES
C
CEND
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION FACTOR,XTMP,SDOT,PZERO,PSING,PDOUB,FACTOR2
      DOUBLE PRECISION PL0,PR0,ONE,ONEM,ZILCH,R0,XTMPL,XTMPR
      DIMENSION ICORE(MAXCOR),I0T(2),I0L(2),I0R(2),I0LS(2),I0RS(2)
      DIMENSION ISP1(3),ISP2(3)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYMINF/NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
C
      DATA ONE,ONEM,ZILCH/1.0D0,-1.0D0,0.0D0/
      DATA ISP1/1,2,1/ 
      DATA ISP2/1,2,2/
C
      FACTOR=2.0D0-DFLOAT(IUHF)
      FACTOR2=ONE/DSQRT(2.0D0)
C
      I0T(1) =1
      I0T(2) =I0T(1)+IUHF*IINTFP*NT(1)
      I0R(1) =I0T(2)+IINTFP*NT(2)
      I0R(2) =I0R(1)+IUHF*IINTFP*IRPDPD(IRREPX,9)
      I0L(1) =I0R(2)+IINTFP*IRPDPD(IRREPX,10)
      I0L(2) =I0L(1)+IUHF*IINTFP*IRPDPD(IRREPX,9)
      I0LS(1)=I0L(2)+IINTFP*IRPDPD(IRREPX,10) 
      I0LS(2)=I0LS(1)+IUHF*IINTFP*IRPDPD(IRREPX,9)
      I0RS(1)=I0LS(2)+IINTFP*IRPDPD(IRREPX,10)
      I0RS(2)=I0RS(1)+IUHF*IINTFP*IRPDPD(IRREPX,9)
      I000   =I0RS(2)+IINTFP*IRPDPD(IRREPX,10)
      MXCOR  =MAXCOR-I000+1
C
      DO 10 ISPIN=1,1+IUHF
       CALL GETLST(ICORE(I0T(ISPIN)),1,1,1,I0FT1+ISPIN,LISTT1)
       CALL GETLST(ICORE(I0L(ISPIN)),1,1,1,I0FL1+ISPIN,LISTL1)
       CALL GETLST(ICORE(I0R(ISPIN)),1,1,1,I0FR1+ISPIN,LISTR1)
10    CONTINUE
C
C <0|PSI>
C
      PR0=R0
C
C <PSI|0>
C
      PL0=L0
      IF(IRREPX.EQ.1)THEN
       DO 11 ISPIN=1,1+IUHF
        XTMP=SDOT(NT(ISPIN),ICORE(I0L(ISPIN)),1,ICORE(I0T(ISPIN)),1)
        PL0=PL0-FACTOR*XTMP
11     CONTINUE 
       DO 12 ISPIN=3,3-2*IUHF,-1
        LISTT=LISTT2-1+ISPIN
        LISTL=LISTL2-1+ISPIN
        ISPIN1=ISP1(ISPIN)
        ISPIN2=ISP2(ISPIN)
        IOFF1=I0T(ISPIN1)
        IOFF2=I0T(ISPIN2)
        DO 13 IRREP=1,NIRREP
         DISSYT=IRPDPD(IRREP,ISYTYP(1,LISTT))
         NUMDST=IRPDPD(IRREP,ISYTYP(2,LISTT))
         I010=I000+IINTFP*DISSYT*NUMDST
         CALL GETLST(ICORE(I000),1,NUMDST,1,IRREP,LISTT)
         CALL FTAU(ICORE(I000),ICORE(IOFF1),ICORE(IOFF2),
     &             DISSYT,NUMDST,POP(1,ISPIN1),POP(1,ISPIN2),
     &             VRT(1,ISPIN1),VRT(1,ISPIN2),1,ISPIN,ONEM)
         IF(IUHF.EQ.0)THEN
          CALL SPINAD1(IRREP,POP,DISSYT,ICORE(I000),ICORE(I010),
     &                 ICORE(I010+IINTFP*MAX(DISSYT,NUMDST)))
         ENDIF
         CALL GETLST(ICORE(I010),1,NUMDST,1,IRREP,LISTL)
         XTMP=SDOT(DISSYT*NUMDST,ICORE(I000),1,ICORE(I010),1)
         PL0=PL0-XTMP
13      CONTINUE
12     CONTINUE
      ENDIF
C
C <S|PSI>
C
      DO 14 ISPIN=1,1+IUHF
        LEN=IRPDPD(IRREPX,8+ISPIN)
        CALL SCOPY(LEN,ICORE(I0R(ISPIN)),1,ICORE(I0RS(ISPIN)),1)
        IF(IRREPX.EQ.1)THEN
         CALL SAXPY(LEN,R0,ICORE(I0T(ISPIN)),1,ICORE(I0RS(ISPIN)),1)
        ENDIF
14    CONTINUE
C
C <PSI|S>
C
      CALL GT2XF(ICORE(I0LS(1)),IRREPX,1,LISTL2RS,LISTT1,I0FT1,
     &           ICORE(I000),MXCOR,IUHF,0)
      DO 15 ISPIN=1,1+IUHF
       LEN=IRPDPD(IRREPX,8+ISPIN)
       CALL SAXPY(LEN,ONEM,ICORE(I0L(ISPIN)),1,ICORE(I0LS(ISPIN)),1)
       CALL SSCAL(LEN,ONEM,ICORE(I0LS(ISPIN)),1)
15    CONTINUE
C
C <D|PSI> - CALCULATED ONLY FOR DEBUGGING PURPOSES SINCE
C           <PSI|D><D|PSI> = 1 - <PSI|0><0|PSI> - <PSI|S><S|PSI>
C
      PDOUB=ZILCH
      DO 16 ISPIN=3,3-2*IUHF,-1
       LISTR=LISTR2-1+ISPIN
       LISTL=LISTL2-1+ISPIN
       LISTT=LISTT2-1+ISPIN
       ISPIN1=ISP1(ISPIN)
       ISPIN2=ISP2(ISPIN)
       IOFF1=I0T(ISPIN1)
       IOFF2=I0T(ISPIN2)
       DO 17 IRREPR=1,NIRREP
        IRREPL=DIRPRD(IRREPR,IRREPX)
        DISSYT=IRPDPD(IRREPL,ISYTYP(1,LISTT))
        NUMDST=IRPDPD(IRREPR,ISYTYP(2,LISTT))
        I010=I000+IINTFP*DISSYT*NUMDST
        I020=I010+IINTFP*DISSYT*NUMDST
        IF(R0.NE.ONE)THEN
         CALL GETLST(ICORE(I000),1,NUMDST,1,IRREPR,LISTR) 
        ELSE
         CALL ZERO  (ICORE(I000),NUMDST*DISSYT)
        ENDIF
        IF(IRREPX.EQ.1)THEN
         CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPR,LISTT)
         CALL FTAU(ICORE(I010),ICORE(IOFF1),ICORE(IOFF2),
     &             DISSYT,NUMDST,POP(1,ISPIN1),POP(1,ISPIN2),
     &             VRT(1,ISPIN1),VRT(1,ISPIN2),IRREPR,ISPIN,ONE)
         CALL SAXPY (DISSYT*NUMDST,R0,ICORE(I010),1,ICORE(I000),1)
        ENDIF
        CALL DTAU(IRREPL,IRREPR,IRREPX,1,ICORE(I000),
     &            ICORE(I0R(ISPIN1)),ICORE(I0R(ISPIN2)),
     &            ICORE(I0T(ISPIN1)),ICORE(I0T(ISPIN2)),
     &            ISPIN,ONE)
C
C NOW CONTRACT ON THE FLY WITH <PSI|D> (THIS IS EQUAL TO L2!)
C
        CALL GETLST(ICORE(I010),1,NUMDST,1,IRREPR,LISTL)
        IF(IUHF.EQ.0)THEN
         CALL SPINAD1(IRREPR,POP,DISSYT,ICORE(I010),ICORE(I020),
     &                ICORE(I020+IINTFP*MAX(DISSYT,NUMDST)))       
        ENDIF
        PDOUB=PDOUB+SDOT(DISSYT*NUMDST,ICORE(I000),1,ICORE(I010),1)
17     CONTINUE
16    CONTINUE
C
C CALCULATE <PSI|0><0|PSI> AND <PSI|S><S|PSI> 
C
      PZERO=PR0*PL0
      PSING=ZILCH
      DO 100 ISPIN=1,1+IUHF
       LEN=IRPDPD(IRREPX,8+ISPIN)
       XTMP=SDOT(LEN,ICORE(I0LS(ISPIN)),1,ICORE(I0RS(ISPIN)),1)
       PSING=PSING+FACTOR*XTMP
100   CONTINUE
C
      WRITE(6,1000)PZERO,PSING,PDOUB
1000  FORMAT(T3,'<PSI|0><0|PSI> = ',F10.7,/,T3,'<PSI|S><S|PSI> = ',
     &       F10.7,/,T3,'<PSI|D><D|PSI> = ',F10.7)
c      write(6,*)pzero+psing+pdoub, ' should be one '
C
C CALCULATE <PSI|CIS><CIS|PSI> (IF AVAILABLE)
C
c      CALL GETLST(ICORE(I000),1,1,1,IRREPX,94)
c      IOFF=I000
c      XTMP=ZILCH
c      DO 200 ISPIN=1,1+IUHF
c       IF(IUHF.EQ.0)CALL SSCAL(LEN,FACTOR2,ICORE(IOFF),1)
c       LEN=IRPDPD(IRREPX,8+ISPIN)
c       XTMPL=XTMPL+FACTOR*SDOT(LEN,ICORE(IOFF),1,ICORE(I0L(ISPIN)),1)
c       XTMPR=XTMPR+FACTOR*SDOT(LEN,ICORE(IOFF),1,ICORE(I0R(ISPIN)),1)
c       IOFF=IOFF+IINTFP*LEN
c200   CONTINUE      
c      WRITE(6,1001)XTMPL*XTMPR
c1001  FORMAT(T3,'<PSI|CIS><CIS|PSI> = ',F10.7)
C
      RETURN
      END

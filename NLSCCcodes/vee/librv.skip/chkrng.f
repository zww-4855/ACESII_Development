      SUBROUTINE CHKRNG(ICORE,MAXCOR,IUHF,TYPE)
C
C ROUTINE TO CHECK IF RING LISTS 118 AND 119 ARE IN
C RESORTED OR ORIGINAL ORDER.  IF "TYPE" IS SET TO 'O',
C THE LISTS ARE RESORTED (IF NECESSARY) TO THE ORIGINAL
C ORDER, WHILE THEY ARE RESORTED (IF NECESSARY) TO THE
C RESORTED ORDER IF TYPE='R'
C
CEND
      IMPLICIT INTEGER (A-Z)
      CHARACTER*1 TYPE
      DIMENSION ICORE(MAXCOR)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
C
C LOGIC FOR TYPE='R'
C
      IF(TYPE.EQ.'R')THEN
       IF(ISYTYP(1,117).EQ.10)THEN
        ISIZE=ISYMSZ(ISYTYP(1,117),ISYTYP(2,117))
        I000=1
        I010=I000+IINTFP*ISIZE
        I020=I010+IINTFP*ISIZE
        I030=I020+IINTFP*ISIZE
        CALL GETALL(ICORE(I000),1,1,117)
        CALL SSTGEN(ICORE(I000),ICORE(I010),ISIZE,VRT(1,2),POP(1,2),
     &              VRT(1,1),POP(1,1),ICORE(I020),1,'1432')
        CALL NEWTYP(117,12,11,.TRUE.)
        CALL PUTALL(ICORE(I010),1,1,117)
        CALL GETALL(ICORE(I000),1,1,118)
        CALL SSTGEN(ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,1),
     &              VRT(1,2),POP(1,2),ICORE(I020),1,'1432')
        CALL NEWTYP(118,11,12,.TRUE.)
        CALL PUTALL(ICORE(I010),1,1,118)
       ENDIF
      ELSEIF(TYPE.EQ.'N')THEN
       IF(ISYTYP(1,117).NE.10)THEN
        ISIZE=ISYMSZ(ISYTYP(1,117),ISYTYP(2,117))
        I000=1
        I010=I000+IINTFP*ISIZE
        I020=I010+IINTFP*ISIZE
        I030=I020+IINTFP*ISIZE
        CALL GETALL(ICORE(I000),1,1,117)
        CALL SSTGEN(ICORE(I000),ICORE(I010),ISIZE,VRT(1,2),POP(1,1),
     &              VRT(1,1),POP(1,2),ICORE(I020),1,'1432')
        CALL NEWTYP(117,10,9,.TRUE.)
        CALL PUTALL(ICORE(I010),1,1,117)
        CALL GETALL(ICORE(I000),1,1,118)
        CALL SSTGEN(ICORE(I000),ICORE(I010),ISIZE,VRT(1,1),POP(1,2),
     &              VRT(1,2),POP(1,1),ICORE(I020),1,'1432')
        CALL NEWTYP(118,9,10,.TRUE.)
        CALL PUTALL(ICORE(I010),1,1,118)
       ENDIF
      ENDIF
C
      RETURN
      END

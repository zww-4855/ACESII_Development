      SUBROUTINE GDENS1(IRREPXL,IRREPXR,IRREPX,DOO,DVV,DOV,
     &                  R0,SCR,MAXCOR,IUHF,
     &                  LSTGRL,LSTGTL,LSTGRLOF,LSTGTLOF,LSTTMP,LSTTMPOF,
     &                  LSTR1,LSTL1,LSTR1OFF,LSTL1OFF,LISTR2,LISTL2,
     &                  LSTR2RS,LSTL2RS,LSTT1,LSTT1OFF)
C
C THIS ROUTINE CALCULATES THE OCCUPIED-OCCUPIED AND 
C VIRTUAL-VIRTUAL COMPONENTS OF THE ONE-PARTICLE EXCITED
C STATE DENSITY MATRIX.
C
C                            +
C     DR = <0| L exp(-T) p q exp(T) S |0>
C
C
C DROO(ij) =  - S(ei) * L(ej) - S(ef,im) * L(ef,jm)  - DROV(je)*S(ei)
C
C
C USE IS MADE OF THE G INTERMEDIATES ON LIST LISTGRL, SO THAT
C THE SECOND EQUATION BECOMES:
C
C DL(ij) =  GRL'(ij) + R0 * GTL(ij) - T(fi) * DOV(fj) 
C
CEND
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER DIRPRD,POP,VRT
      DIMENSION SCR(MAXCOR),DOO(*),DOV(*),DVV(*)
      DIMENSION I0R1(2),I0T1(2),I0L1(2)
      DIMENSION I0GRLIJ(2),I0GRLAB(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPS(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFMI(2),NFEA(2)
      COMMON/SYMLOC/ISYMOFF(8,8,25)
C
      DATA ONE,ONEM,ZILCH /1.0D0,-1.0D0,0.0D0/
C
      TRDOO=ZILCH
      TRDVV=ZILCH
C
      I0GRLIJ(1)=1
      I0GRLAB(1)=I0GRLIJ(1)+IRPDPD(IRREPX,21)
      I0T1   (1)=I0GRLAB(1)+IRPDPD(IRREPX,19)
      I0R1   (1)=I0T1(1)+IRPDPD(1,9)
      I0L1   (1)=I0R1(1)+IRPDPD(IRREPXR,9)
      IF(LSTGRL.NE.-1)THEN
       CALL GETLST(SCR(I0GRLIJ(1)),1,1,1,1+LSTGRLOF,LSTGRL+91)
       CALL GETLST(SCR(I0GRLAB(1)),1,1,1,1+LSTGRLOF,LSTGRL+92)
      ENDIF
      CALL GETLST(SCR(I0T1(1)),1,1,1,1+LSTT1OFF,LSTT1)
      CALL GETLST(SCR(I0L1(1)),1,1,1,1+LSTL1OFF,LSTL1)
      IF(LSTR1.NE.-1)CALL GETLST(SCR(I0R1(1)),1,1,1,1+LSTR1OFF,LSTR1)
      IF(IUHF.NE.0)THEN
       I0GRLIJ(2)=I0L1(1)+IRPDPD(IRREPXL,9)
       I0GRLAB(2)=I0GRLIJ(2)+IRPDPD(IRREPX,22)
       I0T1   (2)=I0GRLAB(2)+IRPDPD(IRREPX,20)
       I0R1   (2)=I0T1(2)+IRPDPD(1,10)
       I0L1   (2)=I0R1(2)+IRPDPD(IRREPXR,10)
       IF(LSTGRL.NE.-1)THEN
        CALL GETLST(SCR(I0GRLIJ(2)),1,1,1,2+LSTGRLOF,LSTGRL+91)
        CALL GETLST(SCR(I0GRLAB(2)),1,1,1,2+LSTGRLOF,LSTGRL+92)
       ENDIF
       CALL GETLST(SCR(I0T1(2)),1,1,1,2+LSTT1OFF,LSTT1)
       CALL GETLST(SCR(I0L1(2)),1,1,1,2+LSTL1OFF,LSTL1)
       IF(LSTR1.NE.-1)CALL GETLST(SCR(I0R1(2)),1,1,1,2+LSTR1OFF,LSTR1)
      ELSE
       I0GRLIJ(2)=I0GRLIJ(1)
       I0GRLAB(2)=I0GRLAB(1)
       I0T1   (2)=I0T1(1)
       I0R1   (2)=I0R1(1)
       I0L1   (2)=I0L1(1)
      ENDIF
      ITOP=I0L1(2)+IRPDPD(IRREPXL,10)
C
      DO 10 ISPIN=1,1+IUHF
C
C OCCUPIED-OCCUPIED BIT
C
       IOFFD=1+(ISPIN-1)*IRPDPD(IRREPX,21)
       IF(LSTGRL.NE.-1)THEN
        CALL MODGIJ(IRREPX,IRREPXR,IRREPXL,SCR(ITOP),
     &              SCR(I0GRLIJ(ISPIN)),
     &              SCR(I0R1(ISPIN)),SCR(I0L1(ISPIN)),ISPIN,ONEM)
        CALL SAXPY(IRPDPD(IRREPX,20+ISPIN),ONE,SCR(ITOP),1,DOO(IOFFD),1)
       ENDIF
       IF(IRREPXR.EQ.1) THEN
        CALL SAXPY(IRPDPD(IRREPX,8+ISPIN),-R0,SCR(I0L1(ISPIN)),1,
     &             DOV(1+(ISPIN-1)*IRPDPD(IRREPX,9)),1)
       ENDIF
C                      +
C D(ij) = D(ij) - T(fi) * DOV(fj)-R0*L(fj)
C
       DO 20 IRREPJ=1,NIRREP
        IRREPI=DIRPRD(IRREPX,IRREPJ)
        IRREPF=IRREPI
        NUMI=POP(IRREPI,ISPIN)
        NUMJ=POP(IRREPJ,ISPIN)
        NUMF=VRT(IRREPF,ISPIN)
        IOFFT=I0T1(ISPIN)+ISYMOFF(IRREPI,1,8+ISPIN)-1
        IOFFDOV=(ISPIN-1)*IRPDPD(IRREPX,9)+ISYMOFF(IRREPJ,IRREPX,
     &          8+ISPIN)
        IOFFDT=IOFFD+ISYMOFF(IRREPJ,IRREPX,20+ISPIN)-1
        CALL XGEMM('T','N',NUMI,NUMJ,NUMF,ONEM,SCR(IOFFT),NUMF,
     &             DOV(IOFFDOV),NUMF,ONE,DOO(IOFFDT),NUMI)
        IF(IRREPX.EQ.1)TRDOO=TRDOO+SSUM(NUMI,DOO(IOFFDT),NUMI+1)
20     CONTINUE
C
C VIRTUAL-VIRTUAL BIT
C
       IOFFD=1+(ISPIN-1)*IRPDPD(IRREPX,19)
       IF(LSTGRL.NE.-1)THEN
        CALL MODGAB(IRREPX,IRREPXR,IRREPXL,SCR(ITOP),
     &              SCR(I0GRLAB(ISPIN)),
     &              SCR(I0R1(ISPIN)),SCR(I0L1(ISPIN)),ISPIN,ONE)
        CALL SAXPY (IRPDPD(IRREPX,18+ISPIN),ONE,SCR(ITOP),1,
     &              DVV(IOFFD),1)
       ENDIF
C
       NUMOOA=IRPDPD(IRREPX,21)
       NUMOOB=IRPDPD(IRREPX,22)
       CALL SYMTRA(IRREPX,POP(1,1),POP(1,1),1,DOO,SCR(ITOP))
       CALL SCOPY (NUMOOA,SCR(ITOP),1,DOO,1)
       IF(IUHF.NE.0)THEN
        CALL SYMTRA(IRREPX,POP(1,2),POP(1,2),1,DOO(1+NUMOOA),SCR(ITOP))
        CALL SCOPY (NUMOOB,SCR(ITOP),1,DOO(1+NUMOOA),1)
       ENDIF
C
C                                + 
C D(ab) = D(ab) + T(am) * DOV(bm)-R0*L(bm)
C
       DO 30 IRREPB=1,NIRREP
        IRREPA=DIRPRD(IRREPB,IRREPX)
        IRREPM=IRREPA
        NUMA=VRT(IRREPA,ISPIN)
        NUMB=VRT(IRREPB,ISPIN)
        NUMM=POP(IRREPM,ISPIN)
        IOFFT=I0T1(ISPIN)+ISYMOFF(IRREPM,1,8+ISPIN)-1
        IOFFDOV=(ISPIN-1)*IRPDPD(IRREPX,9)+ISYMOFF(IRREPM,IRREPX,
     &          8+ISPIN)
        IOFFDT=IOFFD+ISYMOFF(IRREPB,IRREPX,18+ISPIN)-1
        CALL XGEMM('N','T',NUMA,NUMB,NUMM,ONE,SCR(IOFFT),NUMA,
     &             DOV(IOFFDOV),NUMB,ONE,DVV(IOFFDT),NUMA)
        IF(IRREPX.EQ.1)TRDVV=TRDVV+SSUM(NUMA,DVV(IOFFDT),NUMA+1)
30     CONTINUE
C
       IF(DABS(TRDOO+TRDVV).GT.1.D-6.AND.IRREPX.EQ.1)THEN
        WRITE(6,1000)TRDOO+TRDVV
1000    FORMAT(T3,'@GDENS1-W, Density not traceless! Trace is ',
     &         F15.10,'.')
       ENDIF
       IF(IRREPXR.EQ.1) THEN
        CALL SAXPY(IRPDPD(IRREPX,8+ISPIN),R0,SCR(I0L1(ISPIN)),1,
     &             DOV(1+(ISPIN-1)*IRPDPD(IRREPX,9)),1)
       ENDIF
C
10    CONTINUE
C
      RETURN
      END      

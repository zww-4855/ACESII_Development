      SUBROUTINE GCC3W5TAU(CORE,MAXCOR,IUHF,IRREPX,
     &                     LZOFF,LWOFF,LR2OFF,LT1,LT1OFF,LR1,LR1OFF,
     &                     INCR2)
C
C This subroutine is used to compute the contribution
C
C     Z(bc,dk) = - \sum_mn [ r(bm) t(cn) - r(cm) t(bn) ] * W(mnkd)
C     Z        =            T * W
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER POP,VRT,DIRPRD,D,DK,DISSIZT
      LOGICAL INCR2
      DIMENSION CORE(1),I0T1(2),I0R1(2)
      COMMON/MACHSP/IINTLN,IFLTLN,IINTFP,IALONE,IBITWD
      COMMON/SYM/POP(8,2),VRT(8,2),NT(2),NFEA(2),NFMI(2)
      COMMON/SYMINF/NSTART,NIRREP,IRREPY(255,2),DIRPRD(8,8)
      COMMON/SYMPOP/IRPDPD(8,22),ISYTYP(2,500),ID(18)
      COMMON/SYMLOC/ISYMOFF(8,8,25)
C
      DATA ONE,ONEM,ZILCH /1.0D+00,-1.0D+00,0.0D+00/
C
C --- Read T1 amplitudes ---
C
      I0T1(1) = 1
      I0T1(2) = I0T1(1) + IRPDPD(     1, 9)
      CALL GETLST(CORE(I0T1(1)),1,1,1,LT1OFF + 1     ,LT1)
      CALL GETLST(CORE(I0T1(2)),1,1,1,LT1OFF + 1+IUHF,LT1)
C
C --- Read R1 amplitudes ---
C
      I0R1(1) = I0T1(2) + IRPDPD(     1,10)
      I0R1(2) = I0R1(1) + IRPDPD(IRREPX, 9)
      CALL GETLST(CORE(I0R1(1)),1,1,1,LR1OFF + 1     ,LR1)
      CALL GETLST(CORE(I0R1(2)),1,1,1,LR1OFF + 1+IUHF,LR1)
C
      I000 = I0R1(2) + IRPDPD(IRREPX,10)
C
      LISTZ  = LZOFF + 4
      LISTW  = LWOFF + 4 - IUHF
C
      DO   100 IRPDK=1,NIRREP
C
      IRPKD = IRPDK
      IRPMN = IRPKD
      IRPBC = DIRPRD(IRREPX,IRPMN)
C
      DISSIZT = IRPDPD(IRPBC,13)
      NDIST   = IRPDPD(IRPMN,14)
C
      I010 = I000 + DISSIZT * NDIST
      I020 = I010 + NDIST
      I030 = I020 + MAX(DISSIZT,NDIST)
      I040 = I030 + MAX(DISSIZT,NDIST)
      I050 = I040 + MAX(DISSIZT,NDIST)
C
      IF(INCR2)THEN
        CALL GETLST(CORE(I000),1,NDIST,1,IRPMN,LR2OFF+3)
      ELSE
        CALL ZERO(CORE(I000),DISSIZT*NDIST)
      ENDIF
      CALL DTAU(IRPBC,IRPMN,     1,IRREPX,CORE(I000),
     &          CORE(I0T1(1)),CORE(I0T1(2)),
     &          CORE(I0R1(1)),CORE(I0R1(2)),3,1.0D+00)
C
      DO    90  IRPK=1,NIRREP
C
      IRPD = DIRPRD(IRPDK,IRPK)
C
      DO  80     K=1,POP(IRPK,2)
      DO  70     D=1,VRT(IRPD,1)
C
      DK = ISYMOFF(IRPK,IRPDK,11) + (K-1)*VRT(IRPD,1) + D - 1
C
      IF(IUHF.EQ.0)THEN
        KD = ISYMOFF(IRPD,IRPKD,18) + (D-1)*POP(IRPK,2) + K - 1
        CALL GETLST(CORE(I010),KD,1,2,IRPKD,LISTW)
        CALL SYMTR3(IRPMN,POP(1,1),POP(1,2),IRPDPD(IRPMN,14),1,
     &              CORE(I010),CORE(I020),CORE(I030),CORE(I040))
      ELSE
        CALL GETLST(CORE(I010),DK,1,2,IRPDK,LISTW)
      ENDIF
C
      CALL GETLST(CORE(I020),DK,1,2,IRPDK,LISTZ)
C
C     Z(Bc) = TAU(Bc,Mn) * W(Mn)
      CALL XGEMM('N','N',DISSIZT,1,NDIST,
     &           ONE,
     &           CORE(I000),DISSIZT,
     &           CORE(I010),NDIST,ONE,
     &           CORE(I020),DISSIZT)
C
      CALL PUTLST(CORE(I020),DK,1,2,IRPDK,LISTZ)
   70 CONTINUE
   80 CONTINUE
   90 CONTINUE
  100 CONTINUE
C
      IF(IUHF.EQ.0) RETURN
C
C     W(BcdK) = - 1/2 sum_{mn} d(tau(Bc,Mn)) * W(MnKd)
C     W(BcKd) =   1/2 sum_{mn} d(tau(Bc,Mn)) * W(MnKd)
C
      LISTZ  = LZOFF + 3
      LISTW  = LWOFF + 4
C
      DO   200 IRPKD=1,NIRREP
C
      IRPMN = IRPKD
      IRPBC = DIRPRD(IRREPX,IRPMN)
C
      DISSIZT = IRPDPD(IRPBC,13)
      NDIST   = IRPDPD(IRPMN,14)
C
      I010 = I000 + DISSIZT * NDIST
      I020 = I010 + NDIST
      I030 = I020 + MAX(DISSIZT,NDIST)
      I040 = I030 + MAX(DISSIZT,NDIST)
      I050 = I040 + MAX(DISSIZT,NDIST)
C
      IF(INCR2)THEN
        CALL GETLST(CORE(I000),1,NDIST,1,IRPMN,LR2OFF+3)
      ELSE
        CALL ZERO(CORE(I000),DISSIZT*NDIST)
      ENDIF
      CALL DTAU(IRPBC,IRPMN,     1,IRREPX,CORE(I000),
     &          CORE(I0T1(1)),CORE(I0T1(2)),
     &          CORE(I0R1(1)),CORE(I0R1(2)),3,1.0D+00)
C
      DO   190  IRPD=1,NIRREP
C
      IRPK = DIRPRD(IRPKD,IRPD)
C
      DO  180     D=1,VRT(IRPD,2)
      DO  170     K=1,POP(IRPK,1)
C
      KD = ISYMOFF(IRPD,IRPKD,18) + (D-1)*POP(IRPK,1) + K - 1
C
      CALL GETLST(CORE(I010),KD,1,2,IRPKD,LISTW)
      CALL GETLST(CORE(I020),KD,1,2,IRPKD,LISTZ)
C
C     Z(Bc) = TAU(Bc,Mn) * W(Mn)
      CALL XGEMM('N','N',DISSIZT,1,NDIST,
     &           ONE,
     &           CORE(I000),DISSIZT,
     &           CORE(I010),NDIST,ONE,
     &           CORE(I020),DISSIZT)
C
      CALL PUTLST(CORE(I020),KD,1,2,IRPKD,LISTZ)
  170 CONTINUE
  180 CONTINUE
  190 CONTINUE
  200 CONTINUE
C
      DO   400 ISPIN=1,2
C
      LISTZ  = LZOFF + ISPIN
      LISTW  = LWOFF + ISPIN
C
      DO   300 IRPDK=1,NIRREP
C
      IRPKD = IRPDK
      IRPMN = IRPKD
      IRPBC = DIRPRD(IRREPX,IRPMN)
C
      DISSIZT = IRPDPD(IRPBC,    ISPIN)
      NDIST   = IRPDPD(IRPMN,2 + ISPIN)
C
      I010 = I000 + DISSIZT * NDIST
      I020 = I010 + NDIST
      I030 = I020 + MAX(DISSIZT,NDIST)
      I040 = I030 + MAX(DISSIZT,NDIST)
      I050 = I040 + MAX(DISSIZT,NDIST)
C
      IF(INCR2)THEN
        CALL GETLST(CORE(I000),1,NDIST,1,IRPMN,LR2OFF+ISPIN)
      ELSE
        CALL ZERO(CORE(I000),DISSIZT*NDIST)
      ENDIF
      CALL DTAU(IRPBC,IRPMN,     1,IRREPX,CORE(I000),
     &          CORE(I0T1(1)),CORE(I0T1(2)),
     &          CORE(I0R1(1)),CORE(I0R1(2)),ISPIN,1.0D+00)
C
      DO   290  IRPK=1,NIRREP
C
      IRPD = DIRPRD(IRPDK,IRPK)
C
      DO  280     K=1,POP(IRPK,ISPIN)
      DO  270     D=1,VRT(IRPD,ISPIN)
C
      DK = ISYMOFF(IRPK,IRPDK, 8+ISPIN) + (K-1)*VRT(IRPD,ISPIN) + D - 1
      CALL GETLST(CORE(I020),DK,1,2,IRPDK,LISTZ)
C
      KD = ISYMOFF(IRPD,IRPKD,15+ISPIN) + (D-1)*POP(IRPK,ISPIN) + K - 1
      CALL GETLST(CORE(I010),KD,1,2,IRPKD,LISTW)
C
C     Z(BC) = TAU(BC,MN) * W(MN)
      CALL XGEMM('N','N',DISSIZT,1,NDIST,
     &           ONEM,
     &           CORE(I000),DISSIZT,
     &           CORE(I010),NDIST,ONE,
     &           CORE(I020),DISSIZT)
C
      CALL PUTLST(CORE(I020),DK,1,2,IRPDK,LISTZ)
  270 CONTINUE
  280 CONTINUE
  290 CONTINUE
  300 CONTINUE
C
  400 CONTINUE
      RETURN
      END

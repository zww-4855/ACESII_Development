      Subroutine Analyze(Dens_a,Dens_b,Work,Nocc_a,Nocc_b,Maxcor,
     &                   Nbfns)

      Implicit Double Precision(A-H,O-Z)

      Dimension Dens_a(Nbfns*Nbfns,Nocc_a)
      Dimension Dens_b(Nbfns*Nbfns,Nocc_b)
      dimension propInt(Nbfns*Nbfns)
      Dimension Work(Maxcor)
      Dimension checka(Nbfns*Nbfns)
      Dimension checkb(Nbfns*Nbfns)
      double precision spens ! spin density from FC calculation
      Data Done /1.0D0/
      COMMON /FILES/ LUOUT,MOINTS

      real(kind=8),allocatable:: spdena(:),spdenb(:),spdenALL(:)
      integer NATOM

#include "machsp.com"
 
c       Sort spin density according to atom center
      CALL GETREC(20,'JOBARC','NATOMS  ',IONE,NATOM)
c      CALL GETREC(20,'JOBARC','MAP2ZMAT',2,NATOM)
c      CALL GETREC(20,'JOBARC','ATOMCHRG',NUMATOM,IATNUM)
      print*, 'number of atoms is: ', NATOM

        Nbfns2 = Nbfns*Nbfns 

      Idens_a = I000
      Idens_b = Idens_a + Nbfns2 
      Iend    = Idens_b + Nbfns2 

      Call Dzero(Work(Idens_a),Nbfns2)
      Call Dzero(Work(Idens_b),Nbfns2)
c      CALL SEEKLB('   DEN  ',IERR,IRWND)

      allocate(spdena(Nocc_a),spdenb(Nocc_b),spdenall(Nocc_a))


      do n=1,2 !number of atoms in ZMAT!!!
              Call Dzero(Work(Idens_a),Nbfns2)
              Call Dzero(Work(Idens_b),Nbfns2) 
              Do Iocc = 1, Nocc_a
c                 if (n.eq.1) then
c                     IRWND=0
c                 else
c                     IRWND=1
c                 endif
                 spens=0.0d0
c                if (n.gt.1) IRWND=1
c                print*, 'irwnd in loop is', irwnd
                CALL SEEKLB('   DEN  ',IERR,IRWND)
                IF(IERR.NE.0)RETURN
                 if (n.eq.1) then
                     IRWND=0
                 else
                     IRWND=1
                 endif

                Call Daxpy(Nbfns2,Done,Dens_a(1,Iocc),1,Work(Idens_a),1)
             call COMPPR(spens, Dens_a(1,Iocc), propInt, Nbfns, .False.)
                spdena(Iocc)=spens
                print*, 'spin Density for alpha e: ', Iocc, spens
              Enddo 
              Do Iocc = 1, Nocc_b
                spens=0.0d0
                CALL SEEKLB('   DEN  ',IERR,IRWND)
                Call Daxpy(Nbfns2,Done,Dens_b(1,Iocc),1,Work(Idens_b),1)
             call COMPPR(spens, Dens_b(1,Iocc), propInt, Nbfns, .False.)
                spdenb(Iocc)=spens
                print*, 'spin Density for beta e: ', Iocc, spens
              Enddo 

              do i=1,Nocc_a
                if (i.eq.Nocc_a) then
                  spdenall(i)=spdena(i)
                  exit
                endif
                spdenall(i)=spdena(i)-spdenb(i)
              enddo
      print*, 'final spin density calculation (TEST):', sum(spdenall)
c      IRWND=1
c      CALL SEEKLB('   DEN  ',IERR,1)
      iatom=iatom+1
      enddo

      deallocate(spdena,spdenb,spdenall)
#ifdef _DEBUG_LVL0
c        write(6,"(a)") "The alpha density matrix"
c        call output(Work(Idens_a),1,Nbfns,1,Nbfns,Nbfns,Nbfns,1)


      Call Getrec(20,"JOBARC","SCFDENSA",Nbfns2*Iintfp,checka(1))
      Call Getrec(20,"JOBARC","SCFDENSB",Nbfns2*Iintfp,checkb(1))
      print*, 'checka(1)',checka(1),checkb(1)

      Call Daxpy(Nbfns2,-Done,Work(Idens_a),1,checka(1),1)
      print*, 'Difference between JOBarc/Calc alpha Density==0',
     &          checka(1),Work(Idens_a)
      call output(checka,1,Nbfns,1,Nbfns,Nbfns,Nbfns,1)
        write(6,"(a)") "The beta density matrix"
        call output(Work(Idens_b),1,Nbfns,1,Nbfns,Nbfns,Nbfns,1)


      Call Daxpy(Nbfns2,-Done,Work(Idens_b),1,checkb(1),1)
      print*, 'Difference between JOBarc/Calc beta Density==0',
     &          checkb(1),Work(Idens_b)


      CALL SEEKLB('   DEN  ',IERR,IRWND)
      Call Daxpy(Nbfns2,-Done,Work(Idens_b),1,Work(Idens_a),1)
      call COMPPR(spens,Work(Idens_a) , propInt, Nbfns,.False.)
         print*, 'spin Density for alpha e: ', Iocc, spens


#endif

      Return
      End 


 
